// Code generated by go-bindata.
// sources:
// data/aws-vpc-public-private/build/template.json.tpl
// data/aws-vpc-public-private/deploy/main.tf.tpl
// data/aws-vpc-public-private/deploy/variables.tf
// data/common/dev/Vagrantfile.tpl
// data/common/dev-dep/Vagrantfile.fragment.tpl
// data/common/dev-dep/Vagrantfile.tpl
// data/common/dev-dep/build.sh.tpl
// data/common/dev-dep/upstart.conf.tpl
// DO NOT EDIT!

package goapp

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path/filepath"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _dataAwsVpcPublicPrivateBuildTemplateJsonTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x91\xef\x6a\xc3\x20\x14\xc5\xbf\xe7\x29\x44\xe8\xb7\x36\x64\x6b\x19\x63\xaf\x32\x86\xbd\x31\x97\x4e\x1a\x35\xf8\xa7\xa3\x13\xdf\x7d\x26\x92\x4d\xc7\xd6\xe6\x4b\x82\xbf\x93\x73\xcf\x3d\x86\x86\xa4\x87\x4a\xa1\xd8\x04\xfc\x8c\x86\x5d\xd0\x58\xa1\x15\x7d\x21\xb4\x6b\x9f\xdb\x8e\x6e\x9b\xac\xb9\x80\x11\xd0\x8f\x68\x13\xca\xbf\x2d\xc7\xf0\x61\x19\x70\x8e\xd6\xb2\x33\x5e\x13\x53\x7e\x1c\xb7\x35\xb7\xc8\x0d\xba\xff\xb9\xc1\x53\x1e\x39\xb3\x05\xc5\x75\x6a\xef\xc5\x38\xa4\x48\x09\xbe\x16\x53\x15\x48\x9c\x23\x6a\xe7\x34\x2d\xdc\xdc\x75\x5a\xce\x41\xc2\xa7\x56\x3b\xec\x6d\x49\xab\x9c\x34\x6c\x48\x5a\xb6\x07\x27\x24\xd9\xc4\x10\x88\xb7\x68\xc8\xb1\x5e\xe8\x48\x62\x4c\x42\x54\x43\xa1\x2d\x3d\xab\xdd\x6e\x79\xfe\x08\xef\x7a\x7e\xf7\x71\xcb\x2f\x8b\xee\xe7\xd3\xde\x70\x64\x20\x45\xee\x45\xec\x1e\x1f\x9e\xf6\xdd\x70\x38\x94\x2a\xa1\xac\x03\x95\x74\x6b\x81\x7c\xdf\x8e\x60\x4e\x58\x59\xd9\x77\x36\xcf\x5f\xcb\xf7\xbd\x57\xce\x57\x05\x4b\xc1\x56\x1a\xc2\xfc\x15\x23\xf9\xbd\x43\x7a\x63\x9a\x26\xa7\xbf\x92\xe7\xdb\x7f\x6b\x62\xf3\x15\x00\x00\xff\xff\x25\x3b\xb6\x91\x9b\x02\x00\x00"

func dataAwsVpcPublicPrivateBuildTemplateJsonTplBytes() ([]byte, error) {
	return bindataRead(
		_dataAwsVpcPublicPrivateBuildTemplateJsonTpl,
		"data/aws-vpc-public-private/build/template.json.tpl",
	)
}

func dataAwsVpcPublicPrivateBuildTemplateJsonTpl() (*asset, error) {
	bytes, err := dataAwsVpcPublicPrivateBuildTemplateJsonTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/aws-vpc-public-private/build/template.json.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _dataAwsVpcPublicPrivateDeployMainTfTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x8f\x41\x4e\xc3\x30\x10\x45\xf7\x3e\xc5\x97\xcb\x12\x71\x83\xee\x90\xd8\xc1\x11\xa2\x69\x3c\x54\x16\x89\x1d\xd9\x93\x22\x2b\xf2\xdd\x99\x86\xa4\x26\x62\x96\x6f\x9e\xfd\xff\x9c\xf0\xc6\x81\x13\x09\x3b\x5c\x0a\x3e\x44\xe2\x33\x5c\x44\x88\x02\x76\x5e\x30\x52\x98\x69\x18\x8a\x31\x53\x8a\x37\xef\x38\xc1\xd2\x77\xb6\x58\x0c\x74\xa8\xef\x39\xe7\xee\x8b\x0b\xce\xb0\x4f\xcb\x8d\xd2\x8b\xae\xbb\xc6\xab\x5d\xc5\xcc\x7d\x62\xf9\x2f\x36\xbe\x89\x89\xaf\x3e\x86\xa3\xf4\xcb\x54\xa8\xc6\x9c\xf0\xca\xd3\x10\x0b\x48\xff\x14\xc4\x4f\xf8\x90\x85\x82\xe6\x99\xc4\x39\xce\xa9\xe7\xb5\x62\xb7\x73\x0b\xbb\x2c\x08\x34\x32\x6a\x7d\x14\x1f\xfd\x9f\x8c\xd1\x6f\xe9\xfb\x9b\x4e\xca\xc4\x4d\x38\xe0\xfd\xa2\xf9\x12\xb4\xb9\x77\x4d\x7b\x20\x55\x56\x47\xe8\x9a\xb7\xc0\xfb\xbc\xdf\x3b\x9c\x0f\x75\xd6\x5d\xd5\xc3\x7e\x02\x00\x00\xff\xff\xa1\x87\x8b\xff\x8a\x01\x00\x00"

func dataAwsVpcPublicPrivateDeployMainTfTplBytes() ([]byte, error) {
	return bindataRead(
		_dataAwsVpcPublicPrivateDeployMainTfTpl,
		"data/aws-vpc-public-private/deploy/main.tf.tpl",
	)
}

func dataAwsVpcPublicPrivateDeployMainTfTpl() (*asset, error) {
	bytes, err := dataAwsVpcPublicPrivateDeployMainTfTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/aws-vpc-public-private/deploy/main.tf.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _dataAwsVpcPublicPrivateDeployVariablesTf = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x91\x31\x4b\xc5\x30\x10\xc7\xf7\x7c\x8a\x23\x6f\xf6\x0d\xee\x0e\x0f\x5c\x3a\xb8\xd8\xc1\xb1\xa4\xe9\x55\x0f\xd3\x24\x5c\xae\x96\x22\x7e\x77\xd3\x50\x10\x0a\xd1\xa5\x1e\x9d\x7a\xbf\xfc\xee\xf8\xdf\xe5\xee\x84\x52\x17\xb8\x59\x8b\x29\x41\xe3\xc7\xa0\xce\x71\xaa\x0f\xc3\x64\x7a\x87\xa0\xcd\x92\x3a\x53\x06\x74\xef\xb8\x6a\xf8\x54\x90\x6b\xc0\x64\x99\xa2\x50\xf0\xf0\x00\x7a\xdf\x20\x03\x30\x06\x86\xdb\x4b\xab\xd5\xd7\xd1\x92\xd0\x32\xca\x2f\x96\xb6\x00\x7f\x58\x18\x5f\x33\x5e\x31\x3c\x97\x26\x2c\x6f\xc8\x08\x4b\xfe\xc8\x39\x08\x11\xd9\x08\x5e\x8b\xec\xac\xcc\x1f\x31\xba\xb0\xfe\x57\xe6\x13\xd5\x82\x7e\x6a\x40\x42\xfe\xbb\x4d\x3f\xa4\x43\x3e\x89\xf1\x16\x3b\x59\x23\x56\xde\x37\x3b\x03\x85\xd9\x89\xd1\xcc\x4e\xb6\xae\xdc\x5f\x27\xb2\x1c\x0e\xe2\x34\xf7\x3e\x1f\x8e\x86\xda\xdd\x4a\xff\x67\x2f\x20\x2f\xc5\xf1\x1d\x00\x00\xff\xff\xca\x58\x39\x4a\xe1\x02\x00\x00"

func dataAwsVpcPublicPrivateDeployVariablesTfBytes() ([]byte, error) {
	return bindataRead(
		_dataAwsVpcPublicPrivateDeployVariablesTf,
		"data/aws-vpc-public-private/deploy/variables.tf",
	)
}

func dataAwsVpcPublicPrivateDeployVariablesTf() (*asset, error) {
	bytes, err := dataAwsVpcPublicPrivateDeployVariablesTfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/aws-vpc-public-private/deploy/variables.tf", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _dataCommonDevVagrantfileTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x56\x6d\x4f\xdc\xb8\x13\x7f\x9f\x4f\x31\x0d\x50\x40\x22\x0e\xad\xaa\xbe\xa0\x05\xb5\xa2\xff\xb6\x48\xff\x13\xbd\x83\xeb\x9b\xaa\xda\x7a\x13\x27\xb1\x70\x6c\x9f\xed\xec\x43\x61\xbf\xfb\xcd\xd8\x59\x96\xed\xd3\xdd\x49\x2c\x78\xc7\x9e\xdf\x3c\xfd\x66\x86\x1d\x78\x27\xb4\x70\x3c\x88\x1a\xa6\x4b\xb8\x0c\xc1\x1c\x41\x6d\x40\x9b\x00\xa2\x96\xe1\x51\xb6\x93\xed\xc0\x75\x27\x3d\xe0\x4f\xe8\x04\x7c\xe4\xad\xe3\x3a\x34\x52\x09\x68\xbf\xd5\x85\xc6\xb8\xf8\xaa\x16\x33\xa1\x8c\xed\x85\x0e\x60\x1a\x84\x08\x04\xc1\xad\x55\xb2\xe2\x41\x1a\x5d\x7a\xe1\x66\xb2\x12\x0c\x2e\x02\xf8\xce\x0c\xaa\x8e\x46\xa7\x02\x3a\xae\xeb\x82\x8c\x8b\x9a\xc1\xb5\x81\xde\xd4\xb2\x59\x12\x2c\xe2\x3c\x30\x7f\x04\x83\x17\xd1\xda\x6b\x6b\x49\xc0\xb2\x6c\xbc\x66\x95\xd1\x8d\x6c\x07\x27\x0e\xf2\xa7\xf9\x21\x45\x74\x97\x44\x77\x19\x40\x3a\xb1\x59\xcf\xa6\x66\x01\xa7\x90\x77\xdc\x77\xb2\x32\xce\x96\xd6\x89\x4a\x7a\xf1\xfc\x59\x9e\xe1\xc3\x1d\xb8\x12\x61\xb0\xc0\xc1\x2f\x75\x85\x61\x36\x46\xd5\xc2\x41\xe3\x4c\x0f\x66\x70\x30\x37\xee\x46\xea\x16\x6a\x89\x7a\xc1\x38\xf4\xd2\x40\x39\x4b\x4e\x6c\x59\x4a\x00\x93\x11\x60\xff\xf6\x16\x2c\x0f\x1d\x5b\x03\xac\x56\xfb\x47\x90\xa3\xd4\x77\xdc\xdd\xbf\x9b\xd0\x1b\xbc\xcb\x8f\x10\x0b\xc0\xcc\x31\xdd\x27\x90\x8f\xf8\xf9\x11\xb4\xce\x0c\xf6\x81\x84\x9c\xbe\xdd\x03\xd9\x80\xec\xad\x71\x21\x01\x3c\xc2\x10\x73\xd8\x5b\xc5\x88\xde\x48\xcf\xa7\x4a\x8c\x55\x6a\xf8\xa0\xc2\x76\x74\xbf\x70\x3b\x67\x68\x33\x2f\x37\xf6\xeb\x04\x56\x9f\x40\x70\x83\x48\xc6\x85\xc6\x72\x91\xb5\x68\xee\x7f\x3a\x5a\xbb\xba\x7a\x0f\xbc\x25\x36\x20\x43\xe6\xdc\xd5\x14\xb4\x37\xc8\xa0\x10\xe8\x68\x9d\x9c\x21\x91\xd0\x23\x8b\xfa\x42\x57\x52\xf8\x98\x5d\xbf\x71\xc7\xfb\x8e\x8d\xda\x93\x84\x75\x9a\xcc\x46\x43\x6f\xcd\xa0\xeb\x48\x2d\x58\x17\x3f\x7d\x3b\x40\x6f\xb8\x5e\x1e\x26\xef\x88\xa0\x58\x2d\x90\x1a\x8f\x6b\x8d\x09\x4a\x3c\x43\xce\xa6\x24\xd1\x3d\xa6\xac\x34\xc8\xe8\x72\xf3\xaa\xc0\xf2\xa0\xba\x32\xc6\xb2\x73\x94\x06\xcc\x08\xd6\xe6\x1f\xca\x4c\x60\xb1\xba\x78\xd8\x7a\x6a\x9d\x99\x49\x4f\x1e\xe6\xbe\x13\x4a\x61\x3a\xa5\x56\x52\x0b\xac\x67\x55\xc3\xce\x2d\x2a\xac\xe0\xf1\x63\x98\x22\x3b\xc7\xaf\x65\xcf\xa5\x66\xbe\xcb\xef\x53\x4d\xf1\xac\x73\xfd\x7f\xc3\x6b\xe0\x4a\x45\x6a\x36\x8e\xb7\xd4\x7e\x1e\x3a\xe1\x44\x8c\x1b\xb3\xb0\x95\x60\xb6\x49\xc9\xfa\x35\xe5\x05\xf3\x30\xd9\x68\xc7\x8c\x50\xe4\xa3\xe4\xce\x09\xb4\xb2\x5a\xfd\xd0\x83\x0b\xed\x03\x39\xf0\xce\xc0\x74\x90\xd8\xd2\x42\xcf\xa4\x33\x9a\x14\xff\x6d\xf0\xbb\xbe\x72\xd2\x86\x49\x6b\x14\xd7\x6d\xc2\xfd\x8d\xdf\x08\x90\x81\x18\x13\x3a\x1e\xe0\xcb\x48\x41\x40\x4e\x7c\x81\xd6\x20\x59\x52\x0b\xaa\xd8\x81\xc4\x6d\x6c\x67\x12\xfc\x87\xb4\xc7\x1e\xdb\xfb\xfd\x93\xa8\x3a\x13\x4b\xf0\xd3\x76\x84\xb3\x33\x28\x3b\xd3\x8b\x75\x2b\x94\x8c\x8a\xe4\xaa\xcf\xc9\xdd\xfb\x79\x69\x22\x87\x81\x3b\x22\x11\x7a\xdf\x0b\xcc\x4b\xeb\xc1\xc9\xb6\x0b\x38\xef\xe6\xf8\xfc\x53\x3e\xeb\x91\xd3\x62\xd2\x0c\xe4\x16\x75\xd8\x28\x88\xfc\x0f\x91\x7b\xf9\x67\x26\x78\xd5\xc5\x41\xa6\x79\x2f\xee\xa2\xb3\xdf\x44\x85\x2e\x1e\xd0\x65\x9a\x77\x36\xbd\x01\xb0\x4c\xc4\x26\x9c\xcc\x7a\x37\xe8\x89\xb4\x13\xa4\xf0\x0d\x8e\xb5\x53\x68\xb8\xf2\x22\x3e\xc3\x42\x66\xe9\x37\x7d\xb2\xed\x22\xe0\xcb\x97\x2f\xaf\xce\xff\xb8\xf8\x70\x9d\x79\x11\xa0\xc0\x9e\x33\xe2\xe0\x10\x6e\x61\xf7\x15\x3c\x3d\x7b\xfc\x04\xee\x40\x99\xb6\x45\xce\x17\x38\xf0\x69\x13\x60\x86\x90\x48\xa5\x1e\x94\x7a\x01\xab\xcc\xa8\xf8\x3c\xe5\xf6\x13\xbd\xf8\x8c\xba\x39\x5d\xe1\x54\xbf\x68\x60\x4e\x83\x7f\x26\x90\x3a\x47\x54\x3f\x3d\x6e\xa1\x0e\xa7\x43\x86\x1d\x5c\x99\xbe\xc7\xbd\x00\xc5\x0c\xcb\x0d\x67\xf7\xd8\xd1\xfa\x8b\xa8\x91\x66\xa4\x82\x1c\xd9\xc7\x15\xd1\x74\x89\xa5\x8d\x84\x14\xf5\xa3\xb4\x9f\xe6\x46\xef\x87\xb5\x14\x6d\xb1\x3c\x45\xbf\x40\x72\x1d\x67\x8d\xc4\xb8\x10\xe0\x0d\x4e\x5a\x85\xcd\x44\x93\x09\xc1\xa8\x8b\xb1\x27\x5a\x33\x99\x09\x17\xa9\xb3\x5a\x31\x86\xaa\x46\xc0\xbc\xa5\x7c\xfc\x05\xc5\xe5\x37\x8c\x68\x0d\x0b\xdc\xb1\xf6\x2b\x74\x21\x58\x7f\x52\x96\x1e\x17\x04\xce\x2d\xd6\x1a\xd3\x2a\xc1\xad\xf4\xb8\xa6\xfa\x32\xa5\x18\xff\xfc\xd0\x0c\x32\x73\x58\x14\xbc\xaf\x9f\x3f\x1b\xf1\x92\x8b\x7f\x6a\xfc\xe6\x92\x83\x6b\x5f\xfc\x80\x39\x43\x31\x14\xe7\x50\x0e\xde\x95\xca\x54\x5c\x41\xb1\xf8\xda\xfc\xcc\xb9\x04\x86\xed\x15\x91\x2e\x3f\xbc\xbe\x7e\xbf\x85\xd6\xdf\xd0\xfc\x2a\x2c\x94\xc6\x92\x1a\x75\x40\xd6\xf8\xb0\xb4\xe2\x74\xf7\xa0\x91\x58\x91\x07\x37\x50\xf4\x28\x11\x16\x4f\xc7\x78\xe6\x8b\xfb\x33\x29\x00\x56\x0f\xe7\x3c\x2e\x6f\xc8\xf7\xde\xe6\x87\xd9\xf7\xea\x09\x19\x76\x6f\xd3\x61\x35\x2a\x1c\x23\xbd\x16\xdc\x61\xe3\x14\x88\xa5\xe1\xc9\xf1\x31\x20\x91\xe6\x1a\xc6\x80\x4e\xd6\x2b\x37\x86\x73\x35\x2e\x15\xa4\xf8\x7d\x40\x91\x78\xfb\x62\x41\x5b\x31\x4a\x4f\x1f\x18\x2e\xa7\x52\x9f\x6c\x32\x86\xd2\x28\xd9\xa5\x77\xfb\x3f\x6d\xf6\x6d\xcc\x94\xbc\x87\xa8\xbf\xd0\x8c\x6e\x8e\xc3\x92\x3c\xfd\x78\x7e\xe5\xe3\x1c\x6e\xe3\x4a\xdc\x2a\x01\xb7\xa1\x20\x92\x0d\xb6\xa6\x0d\x59\x2c\xbf\xbb\x59\xd3\xb9\x58\x42\x8b\x3c\x9e\x7e\x75\xd0\x0b\x57\x0d\x4e\x72\x95\x4c\x9d\x8f\x1b\x71\x24\x34\x36\x02\xfd\xeb\x44\x4b\x99\x74\x69\xa0\x9b\x06\xde\x5f\x5f\x7f\x88\x96\x09\x24\x8d\x16\x28\x8a\x56\x99\x29\x92\x68\x70\x8a\xe5\x78\xf1\x0a\x3f\xdd\x30\x25\xe6\x9e\xe4\x6c\xd4\xbe\xc4\x8a\xae\x59\xbe\xb9\x2f\xf3\x6c\x9c\x19\x7f\x07\x00\x00\xff\xff\x80\x82\x43\x10\x66\x0a\x00\x00"

func dataCommonDevVagrantfileTplBytes() ([]byte, error) {
	return bindataRead(
		_dataCommonDevVagrantfileTpl,
		"data/common/dev/Vagrantfile.tpl",
	)
}

func dataCommonDevVagrantfileTpl() (*asset, error) {
	bytes, err := dataCommonDevVagrantfileTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/common/dev/Vagrantfile.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _dataCommonDevDepVagrantfileFragmentTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x93\x31\x8f\xdb\x30\x0c\x85\x77\xff\x0a\xd6\xe9\xdd\x74\x67\xef\x87\xbb\x29\x40\x3b\xb6\x40\xbb\x74\x32\x1c\x89\x89\x85\x5a\xa2\x20\xd1\x0e\x8c\x20\xff\xbd\xa4\x1d\x24\x2e\xda\x06\xbd\xcd\x92\x9e\x3e\xbd\x47\xd2\x1b\xf8\x8c\x01\x53\xcb\x68\x61\x37\x81\xc5\x88\xc1\x62\x30\x13\xec\x29\xc9\x72\xc4\x9e\xa2\xc7\xc0\x2f\x70\x3a\x41\x68\x3d\xc2\xf9\x5c\x14\x1f\x6f\x8b\x26\x23\x0f\x11\xde\xe0\xf5\x75\xfb\xe5\xeb\x8f\x62\x03\x5b\x8a\x13\xd0\x90\x60\xe7\x42\x9b\xa6\x22\x0f\x96\xc0\x8f\x50\xb3\x8f\xb5\xbc\xf0\x7c\xbb\xac\x50\xd9\x69\x16\x65\x13\x5b\xee\x66\xfe\x05\xc2\x1d\xc2\x10\x33\xb7\x89\x61\xef\x7a\xbc\x87\xaa\x2e\xc2\xca\x50\xd8\x43\x8d\x6c\x6a\x17\x1c\xd7\x2b\x85\x9e\x28\xfb\xdb\x0c\x74\xfc\x61\xe1\x2d\xfc\x55\xbc\x39\x87\xea\xa6\x60\xe6\x20\x74\x0c\x6a\x53\x6a\xd2\x5b\x4c\xe0\x82\x3a\x4b\x58\x28\xd0\x1d\xaa\xd1\x57\x59\xa4\x68\x9b\x8b\xa0\x14\x98\x66\xa9\x8e\x94\x7e\xba\x70\x10\x68\xf9\x74\xdb\x3d\x0c\x98\xb9\x59\x9d\x5d\x03\x6b\xc8\x2c\x7c\x26\x68\x81\xd1\x47\xb0\x2e\xa1\x61\x4a\x53\x05\xdf\xa5\x1a\xd9\x24\x17\x19\x8e\xae\xef\xc1\xd3\x88\x6a\xc4\x57\x2b\x23\x31\xd1\xe8\xb2\xa3\x00\xa5\xc2\xca\xa7\x02\x20\x4b\x06\x83\x2f\x37\x03\xa6\x35\x9d\x26\x95\x12\x8e\xcf\x5a\x46\x1a\x38\x0e\x3c\x8b\xad\x78\x93\x6e\xb0\x20\xe4\xc6\x5f\x0a\x2d\x6e\xdf\xfb\x1c\xf9\x28\x87\x76\xf5\x62\xbd\xee\xd6\xff\xbd\xfb\x5b\x83\xff\x65\x22\x77\xd8\xf7\x33\xcf\x85\xde\x05\x71\xf1\xc7\xa8\x6a\xb1\x3f\xd1\x10\xec\xfc\x16\x2c\x98\x21\x2d\xab\xcb\xd4\x6b\xb7\x8b\xd3\xc3\xb2\x74\x73\xc7\xf7\xd7\x2b\x8d\xec\xe4\x4a\x54\x8d\xce\xc4\xc3\xb9\x50\xc5\x9b\x78\x26\x66\xaa\x6f\xba\x95\x77\xfd\x14\x56\x4f\x14\xab\xad\x08\x58\x86\x44\x2b\x79\x6f\x80\x94\x3a\xcf\x8d\x7c\xdc\x0d\x7b\x8d\x5a\x1a\x0b\x9b\x93\xc8\xcf\xf0\xf8\x08\xbb\x36\x77\x97\x65\xed\x5b\x17\xaa\xdc\x95\x9a\x49\x7e\x70\x8d\x25\xbe\x7f\x05\x00\x00\xff\xff\xb6\x2e\xa8\x1d\xfd\x03\x00\x00"

func dataCommonDevDepVagrantfileFragmentTplBytes() ([]byte, error) {
	return bindataRead(
		_dataCommonDevDepVagrantfileFragmentTpl,
		"data/common/dev-dep/Vagrantfile.fragment.tpl",
	)
}

func dataCommonDevDepVagrantfileFragmentTpl() (*asset, error) {
	bytes, err := dataCommonDevDepVagrantfileFragmentTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/common/dev-dep/Vagrantfile.fragment.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _dataCommonDevDepVagrantfileTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x55\xdd\x6e\xdb\x38\x13\xbd\xd7\x53\x4c\x95\xf4\x73\x02\x58\x52\x5a\x14\xbd\x70\x9b\xa0\x45\xf2\x35\xc9\xc5\x22\xc1\xda\xdb\xbd\x58\x2c\x02\x5a\xa2\x24\x6e\x29\x0e\x97\xa4\xfc\x93\xc4\xef\xbe\x43\x52\x76\xe2\x76\xdb\x2e\x90\xc0\xd4\x90\x73\xce\xfc\x1c\x0e\x0f\xe0\x92\x2b\x6e\x98\xe3\x15\xcc\xd7\x70\xe3\x1c\x8e\xa1\x42\x50\xe8\x80\x57\xc2\xbd\x48\x0e\x92\x03\x98\xb5\xc2\x02\xfd\xb9\x96\xc3\x67\xd6\x18\xa6\x5c\x2d\x24\x87\xe6\x6b\x5f\xa8\xd1\xc0\xbc\x17\xb2\x12\xaa\xf1\xc7\xc9\x79\x2e\x14\x33\x6b\xfa\x60\xce\x63\xf4\x96\x8e\x33\x0b\x0c\x2a\xae\xb9\xaa\xb8\x2a\xd7\xc1\xad\xe2\x0b\x2e\x51\x77\x5c\xb9\x3c\xb0\x5e\xc4\x30\x5a\xa6\xaa\xcc\xc7\x42\x10\xe4\xef\x89\x73\x98\x21\x74\x58\x89\x7a\x1d\x8c\x63\x8f\x1a\xa2\xfb\xa8\x75\x38\x90\x24\x43\x9c\x79\x89\xaa\x16\x4d\x6f\xf8\x51\xfa\x3a\x3d\xf6\xb9\x3d\x46\xd3\x63\x02\x10\x57\xf9\xa2\xcb\xe7\xb8\x82\x53\x48\x5b\x66\x5b\x51\xa2\xd1\x85\x36\xbc\x14\x96\xbf\x7d\x93\x26\x74\xf0\x00\xa6\xdc\xf5\x9a\xa2\xb6\x6b\x55\x52\x06\x35\xca\x8a\x1b\xa8\x0d\x76\x80\xbd\x81\x25\x9a\x2f\x3e\xe7\x4a\x90\x9f\x43\x9f\x30\x42\xb1\x88\x41\xec\x31\x45\x80\xbb\x01\x60\xf4\xf0\x00\x9a\xb9\x36\xdf\x02\x6c\x36\xa3\x31\xa4\x64\xb5\x2d\x33\xbb\x73\x77\xfe\x0c\xed\xa5\x63\xc2\x02\xc0\x25\x15\x7e\x02\xe9\x80\x9f\x8e\xa1\x31\xd8\xeb\x67\x16\x1f\xf4\xc3\x4b\x10\x35\x88\x4e\xa3\x71\x11\xe0\x05\xa5\x98\xc2\xcb\x4d\xc8\xe8\x42\x58\x36\x97\xb1\x6e\x15\xaf\x59\x2f\xdd\x7e\x76\x3f\x08\x3b\xcd\x89\x33\x2d\x9e\xf8\xab\x08\x56\x4d\xc0\x99\x9e\x47\x72\xea\x2e\xf1\x13\x5b\xa0\xfb\xbf\x0a\x6c\xd3\xe9\x15\x30\x12\x8e\xf3\x4d\x5f\x32\x13\x94\x62\x91\xb4\xe4\x9c\x5f\x6a\x23\x16\x24\xa9\x27\x75\x08\x6e\x43\x75\xed\x53\x38\xd6\xb6\xf9\xe0\x7d\x17\xb1\x4e\x23\xed\xcf\x3a\xb5\x6c\xb9\xe1\xa1\x5f\x25\x76\x9a\x84\x52\x41\xc5\x1c\x0b\xda\xc6\xe0\x5c\x20\xc9\x38\x87\xdf\xb9\x57\x4a\x10\x1c\xf5\x91\x95\x25\xb7\x51\xfe\x41\xdc\x60\x4b\x23\x34\xc9\xf4\xfb\x05\xfa\xe4\x55\xf8\x17\x0a\x75\xb4\xeb\xf0\x8e\x32\xb4\x78\x44\x7a\xcf\x28\xc9\xd1\xb1\x2f\xa4\x67\xfd\xb9\xd0\x62\xf8\x3e\x8c\x92\x95\xbe\x6b\xc2\x50\xe8\xff\x45\x5d\xf1\x7c\xd4\x56\x20\xcb\x82\x65\xa0\xbc\x56\xd6\x31\x29\xe1\x12\x87\xfc\xb8\x5a\x08\x83\xca\xdf\xc5\x3d\x74\x6d\x70\x21\xac\x40\x05\xa9\x6d\xb9\x94\xd4\x78\xa1\xa4\x50\x7c\x02\x87\xb1\x26\x77\x0d\x4a\xa6\x9a\x84\x7a\x97\x24\xfb\x36\x6a\xd2\xfb\xf7\xd3\xf3\x5f\xaf\x6f\x67\x89\xe5\x0e\x32\xea\x17\xf2\xa3\x63\x78\x80\xc3\x0f\xf0\xfa\xec\x7f\xaf\xe0\x11\x24\x36\x0d\x05\x9e\x39\xf0\x51\xc2\x19\x14\x54\xa7\x42\xf5\x52\xbe\x83\x4d\x82\x32\x1c\xe7\x65\x8b\x90\xfe\xe1\x4f\xfc\x49\xbe\xa9\xdf\xa2\x81\x71\x5d\xc3\x92\xd3\xbc\x58\x70\xca\x64\xec\xeb\xa4\x86\x59\xd6\x92\xb2\x12\xd2\x22\xb5\xa0\xa3\x71\x02\xd9\x02\x1a\x02\xdf\x61\x07\xf6\x77\xc1\x23\xde\x2f\x09\x29\x15\x83\x49\xc3\x59\xb5\xa6\x1c\x43\x7d\x78\xf5\x22\x4e\xb9\x25\xaa\x91\xdb\x5a\x89\x2b\x4f\x83\x17\x5f\xd1\x90\x3a\x49\x6a\x41\x79\x11\xc0\x05\xdd\x52\x89\x2c\x08\x9c\xc0\xa8\x15\x44\x47\xb5\xb8\x5b\x70\x13\x6a\xb8\xd9\xe4\x39\xb9\x22\x87\x65\xe3\xeb\xf1\x37\x64\x37\x50\xb4\xd8\xf1\xed\xc5\x2a\x1a\xcc\x1d\x33\x79\x73\x0f\xad\x73\xda\x4e\x8a\xc2\xd2\x70\x21\xcd\xe7\x0d\x62\x23\x39\xd3\xc2\x7a\x61\x15\xb1\xc4\xf4\xf3\xaf\x34\xd4\xa2\x7e\x95\xb1\xae\x7a\xfb\x66\xc0\x8b\x21\xfe\xa6\xe8\xcb\xc4\x00\xb7\xb1\xd8\xde\x2b\x9f\x51\x0f\xce\xa1\xe8\xad\x29\x24\x96\x4c\x42\xb6\xba\xaf\xbf\x17\x5c\x04\xfb\x85\x85\x01\x76\x79\x73\xfb\x71\x76\xb5\x87\xd6\x7d\xf1\x4a\xcd\x34\xdd\x2e\xed\xdd\xbc\x24\x93\xda\xba\xb5\xe6\xa7\x87\x47\xb5\xa0\x8e\x3c\xdb\x81\xac\x23\x0b\xd7\xb4\x3a\xa1\x35\x5b\xed\xd6\xde\x01\xa8\x7b\x34\x23\xe8\x05\x82\xf4\xe5\xa7\xf4\x38\xf9\xd6\x3d\x22\xc3\xe1\x43\x5c\x6c\x06\x87\x13\x92\xd7\x8a\x99\xc6\x42\x46\x58\x0a\x5e\x9d\x9c\x00\x09\x69\xa9\x60\x48\x68\xb2\x1d\xd7\x21\x9d\xe9\x30\x90\xe8\x32\xee\x12\x0a\xc2\x1b\xf1\x95\x9f\xa8\xc1\x7a\xfa\x8c\xb8\xa0\x97\x6e\xf2\x54\x31\xb2\x06\xcb\xa1\x3f\x37\x82\xb3\xb3\xaf\xaa\x97\xcf\xe9\xad\x31\xe5\x3e\x66\x2c\xde\x73\xd4\x1f\x78\x86\x30\x87\xbb\xeb\x23\xfd\x7c\x3e\xb5\xe1\x29\x6d\xc2\x38\xdd\x6b\x01\xd3\x2e\xf3\x22\xeb\x75\xe5\xa7\x6b\xb6\xfe\x66\x67\x2b\xe7\x6c\x0d\x0d\xe9\x78\x7e\x6f\xa0\xe3\xa6\xec\x8d\x60\x32\x52\x9d\x0f\x4f\xe9\x20\x68\xba\x08\xfe\xd9\xf5\x03\xdd\xfb\xd2\x4d\x01\xac\xe1\x6a\x36\xbb\x0d\xcc\x1e\x24\x4e\x0e\xc8\xb2\x46\xe2\x9c\x44\xd4\x1b\x99\xa7\xb4\xf1\x81\xfe\xdb\x7e\xee\x95\x3b\x49\xf3\xc1\xfb\x86\x3a\xba\x55\xf9\xd3\x7e\x91\x26\xc3\xcc\xf8\x27\x00\x00\xff\xff\xb1\xf9\x70\x7d\xac\x08\x00\x00"

func dataCommonDevDepVagrantfileTplBytes() ([]byte, error) {
	return bindataRead(
		_dataCommonDevDepVagrantfileTpl,
		"data/common/dev-dep/Vagrantfile.tpl",
	)
}

func dataCommonDevDepVagrantfileTpl() (*asset, error) {
	bytes, err := dataCommonDevDepVagrantfileTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/common/dev-dep/Vagrantfile.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _dataCommonDevDepBuildShTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\x92\x41\x8f\xd3\x30\x10\x85\xef\xfe\x15\x8f\x14\x69\xe1\x90\x44\x9c\x11\x08\xb8\xf4\x08\xd2\xc2\x09\xa1\x95\x6b\x4f\x12\xb3\xae\x27\x72\x26\xed\x56\xd5\xfe\x77\xc6\xce\xa2\xad\x14\xe5\xe0\xb1\xdf\xfb\xe6\xcd\xec\xde\xf4\x87\x90\xfa\x83\x5d\x26\xb3\x33\x3b\x7c\x5d\x85\xdb\x91\x12\x65\x2b\xe4\x71\xb8\xe0\xbb\x08\x77\xb5\xf6\x73\x0a\x0b\xf4\x93\x89\x70\x58\x43\xf4\x58\x5c\x0e\xb3\x60\xe0\x0c\x8b\x3d\xb7\x2a\xa3\x8f\xe6\xcc\x7f\xc9\x49\x67\x16\x12\xb4\x64\x0c\xc7\x77\xef\x71\x05\xb9\x89\xd1\xfc\x66\x15\xfc\x83\xb7\x5f\x9a\x8f\x78\x36\x2a\x7b\xaf\xb7\xa4\x48\x0b\x63\xb0\x8f\xb4\xe9\x2b\x50\x76\xe0\x84\x85\x8f\x84\x39\x5a\x51\x97\x63\x31\xb7\x82\x33\xdd\x65\x42\x48\xa2\x98\x4e\xc2\x89\x14\x10\xbf\x0e\x6b\x92\x55\x4f\x31\xdb\x2c\xc1\xad\xd1\xe6\xd2\x80\xa7\xc1\xae\x51\x1f\x71\xba\x13\x44\xb6\xfe\xd6\x21\x0c\x9b\x79\x58\xb4\xaa\x2a\xca\xdc\x19\x7a\x9a\x39\x0b\x7e\xdc\x7f\xf8\xd4\x7c\x46\x53\x29\x79\xcd\x8e\xa0\xff\xd2\xdf\x10\x22\x29\x99\x82\x60\x54\xfc\x7a\x6a\x65\x2a\xa5\x99\x72\xbc\x14\x99\x75\x36\x1d\xfa\x49\xf1\xfb\x93\x1d\xb3\x4d\xd2\x77\x9b\x69\xd1\xdb\x73\xe1\xe7\xfa\xf4\xcc\xf9\x31\xa4\x11\x3e\x64\xcd\x8d\xf3\xc5\x38\x8f\xeb\x15\xcb\x64\x33\xf9\x87\x81\xa3\xa7\xfc\x50\x0d\x9e\x6b\x64\x7b\xf5\xb4\x31\xd6\x3e\x3c\xcd\x94\x3c\x25\x17\x68\xd1\xa4\xd1\x68\x51\xaa\xda\x4d\xa1\xeb\xba\xc6\x8c\x5c\x61\xdb\x13\xba\x5e\x0f\x8a\xd0\xb7\x3a\xc6\x22\xf3\x32\x34\xd8\xe4\x71\xce\x41\xb6\x31\xf0\x2a\xf3\x2a\xaf\xa4\x1b\xd1\x0d\xe8\x0e\xe7\xa0\x58\xe5\xae\xe3\xe3\xac\xb1\xdc\x54\x4b\x42\x2f\xf3\x82\xb3\x09\x64\x97\xa0\xd9\xd0\x93\x94\xb1\x21\x68\xd2\x05\xb8\x42\x28\xf1\x7f\xc8\x6d\xb7\x5a\xdd\x95\xbe\xec\x4a\xeb\xac\x9b\xa8\xf7\x74\x6a\xb5\xa5\x76\x43\x6a\xcc\xbf\x00\x00\x00\xff\xff\x93\x14\x33\xb5\xba\x02\x00\x00"

func dataCommonDevDepBuildShTplBytes() ([]byte, error) {
	return bindataRead(
		_dataCommonDevDepBuildShTpl,
		"data/common/dev-dep/build.sh.tpl",
	)
}

func dataCommonDevDepBuildShTpl() (*asset, error) {
	bytes, err := dataCommonDevDepBuildShTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/common/dev-dep/build.sh.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _dataCommonDevDepUpstartConfTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x8f\x41\x4b\x03\x41\x0c\x85\xef\xf9\x15\x8f\x0a\x7a\xaa\x6b\xab\xeb\x71\xaf\x1e\x3d\x7a\x90\x52\xc6\x9d\x54\x16\x66\x93\x61\x26\xb6\x4a\xd9\xff\x6e\x1c\x14\xe9\x29\x24\x79\x7c\xef\xbd\xc8\x75\x2c\x53\xb6\x49\x05\xab\xf3\x19\x12\x66\xc6\xb2\x60\x8d\x27\x16\x2e\xc1\x38\xe2\xed\x0b\xcf\x66\xba\x22\x2a\x5c\x73\x38\xc9\xdf\x44\x9a\xe6\xc9\xb0\xe9\xd1\x13\x55\x0b\xc5\xe0\x98\xf2\x21\x89\x8f\x9c\xf0\xba\xbd\x7f\xe8\x77\xfe\xd0\x7c\x79\xbf\x7b\xdc\x11\x5d\xe1\x85\x11\x55\x6e\x0c\xa7\x20\x06\x53\x38\xb6\x41\x4c\x15\x87\x50\x0d\x07\x2d\x88\x9c\x2b\x65\xad\xb6\x6e\x20\xfe\xe4\x11\x35\x31\xe7\x66\xda\xc2\x13\xe0\xd1\x5d\xb8\x77\x8f\xfd\xa8\xf3\x1c\x24\xfe\xb4\x18\x86\xee\x18\x4a\x97\xf4\xbd\xfb\xef\x76\xeb\x2b\xb6\xc3\xf5\x86\xd8\x55\xbf\x84\xef\x00\x00\x00\xff\xff\xb4\x52\xf1\xf2\x08\x01\x00\x00"

func dataCommonDevDepUpstartConfTplBytes() ([]byte, error) {
	return bindataRead(
		_dataCommonDevDepUpstartConfTpl,
		"data/common/dev-dep/upstart.conf.tpl",
	)
}

func dataCommonDevDepUpstartConfTpl() (*asset, error) {
	bytes, err := dataCommonDevDepUpstartConfTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/common/dev-dep/upstart.conf.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if (err != nil) {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"data/aws-vpc-public-private/build/template.json.tpl": dataAwsVpcPublicPrivateBuildTemplateJsonTpl,
	"data/aws-vpc-public-private/deploy/main.tf.tpl": dataAwsVpcPublicPrivateDeployMainTfTpl,
	"data/aws-vpc-public-private/deploy/variables.tf": dataAwsVpcPublicPrivateDeployVariablesTf,
	"data/common/dev/Vagrantfile.tpl": dataCommonDevVagrantfileTpl,
	"data/common/dev-dep/Vagrantfile.fragment.tpl": dataCommonDevDepVagrantfileFragmentTpl,
	"data/common/dev-dep/Vagrantfile.tpl": dataCommonDevDepVagrantfileTpl,
	"data/common/dev-dep/build.sh.tpl": dataCommonDevDepBuildShTpl,
	"data/common/dev-dep/upstart.conf.tpl": dataCommonDevDepUpstartConfTpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"data": &bintree{nil, map[string]*bintree{
		"aws-vpc-public-private": &bintree{nil, map[string]*bintree{
			"build": &bintree{nil, map[string]*bintree{
				"template.json.tpl": &bintree{dataAwsVpcPublicPrivateBuildTemplateJsonTpl, map[string]*bintree{
				}},
			}},
			"deploy": &bintree{nil, map[string]*bintree{
				"main.tf.tpl": &bintree{dataAwsVpcPublicPrivateDeployMainTfTpl, map[string]*bintree{
				}},
				"variables.tf": &bintree{dataAwsVpcPublicPrivateDeployVariablesTf, map[string]*bintree{
				}},
			}},
		}},
		"common": &bintree{nil, map[string]*bintree{
			"dev": &bintree{nil, map[string]*bintree{
				"Vagrantfile.tpl": &bintree{dataCommonDevVagrantfileTpl, map[string]*bintree{
				}},
			}},
			"dev-dep": &bintree{nil, map[string]*bintree{
				"Vagrantfile.fragment.tpl": &bintree{dataCommonDevDepVagrantfileFragmentTpl, map[string]*bintree{
				}},
				"Vagrantfile.tpl": &bintree{dataCommonDevDepVagrantfileTpl, map[string]*bintree{
				}},
				"build.sh.tpl": &bintree{dataCommonDevDepBuildShTpl, map[string]*bintree{
				}},
				"upstart.conf.tpl": &bintree{dataCommonDevDepUpstartConfTpl, map[string]*bintree{
				}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        // File
        if err != nil {
                return RestoreAsset(dir, name)
        }
        // Dir
        for _, child := range children {
                err = RestoreAssets(dir, filepath.Join(name, child))
                if err != nil {
                        return err
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

