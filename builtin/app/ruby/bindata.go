// Code generated by go-bindata.
// sources:
// data/aws-simple/build/build-ruby.sh
// data/aws-simple/build/template.json.tpl
// data/aws-simple/deploy/main.tf.tpl
// data/aws-vpc-public-private/build/build-ruby.sh
// data/aws-vpc-public-private/build/template.json.tpl
// data/aws-vpc-public-private/deploy/main.tf.tpl
// data/common/dev/Vagrantfile.tpl
// DO NOT EDIT!

package rubyapp

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path/filepath"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _dataAwsSimpleBuildBuildRubySh = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x56\x7f\x53\x1b\x39\x12\xfd\x7f\x3e\x45\xaf\xa1\xc2\x5d\x15\x33\x03\xd4\xed\xdd\xae\xbd\x6c\x1d\x10\xd8\xa5\x2a\x65\xa7\x4c\x72\x3f\x2a\xc9\x51\xe3\x99\xb6\xad\x30\x96\x14\x49\x63\x30\x84\xef\x7e\xaf\x35\xc6\x3f\x42\x92\xca\x3f\x20\x4b\xea\xd6\xeb\xee\xd7\xaf\x67\xe7\xa7\x7c\xa4\x74\x3e\x2a\xfc\x34\x49\x3c\x07\x4a\x0d\x69\xd3\xe8\xe5\x92\x9d\xe3\x3b\x15\x97\x56\x59\x1e\x17\xaa\x5e\x6e\x07\x57\x94\x9c\x24\x58\x19\xf7\x97\xbf\xd2\x43\x42\x44\xb5\x29\x8b\x9a\xbc\x69\x5c\xc9\x63\x55\xf3\xf1\xee\xe1\x7a\xbb\x56\x9a\xb5\x39\xde\x3d\x92\x2d\x2e\xa7\x86\x3a\xe7\xc3\xe1\x60\x48\x45\xa0\xdd\x87\xb5\xd1\x63\x77\xf7\xa1\xbd\xfb\xd8\xa3\x57\x85\x0f\xb0\x9f\xf8\x6e\x47\xcc\x26\x8e\x2d\x99\x10\x0c\xe5\xf3\xc2\xe5\x38\xc8\xfd\xc2\xe3\x1f\x7d\xa6\x10\xb1\x69\x3a\x3a\x48\x1e\x13\xa0\xb3\xb4\x17\xc1\x51\x67\xf7\xe1\xf4\xe4\xea\xcf\xeb\xab\xc1\xdb\xe1\xd9\xf9\x63\x47\x36\x5e\x5d\xf6\xcf\xfb\x83\xc7\xce\x1e\x01\x43\x92\x18\x96\x10\x70\xf0\xcf\x0e\x1d\xfd\xfe\xe2\x10\xee\xe0\x74\xc2\x8e\xd2\xd0\xbe\xf7\x3b\xe5\x15\xcf\x73\xdd\xd4\x75\x8f\x1e\x13\x53\x47\x83\x36\x8c\x77\x72\xe3\x03\xc1\x58\x8e\x92\x1d\x2a\x6b\xd3\x54\x69\x69\xf4\x58\x4d\xa8\x2c\x34\x29\x1d\xd8\x8d\xd9\x31\xdd\xaa\x30\xa5\xc2\x06\x2a\xcd\x6c\x56\xe8\xca\x93\x1a\x93\x0a\x7b\x9e\x7c\x50\x75\x8d\x9b\x64\x9d\x41\x9c\xde\xe3\x11\xea\xfc\xbb\x50\x41\xe9\x09\x8d\x11\xc8\x96\x5b\x60\x82\x0b\x5b\x73\xe0\x2c\xcb\x3a\x49\xa3\x61\x4f\xef\xde\x51\x3a\x5e\x26\x47\x8d\xf2\x68\x91\x2b\xed\x43\xa1\x4b\xce\x47\xc6\x84\x74\xac\xb4\xf2\x53\xae\xe8\xc3\x87\x1e\x55\x06\x69\xf5\x35\x23\xad\x07\xd9\xcf\x49\x65\x34\x6a\x2a\xef\x9e\x54\x95\x3c\x2b\x48\x81\xc5\x1a\xaf\x82\x71\x8a\x3d\x01\x33\x35\xb6\x2a\x04\x55\x7c\xd8\x30\xf9\xa6\x32\x72\x35\x9d\x80\x35\xf1\x90\x9f\x6d\x47\x10\x08\x30\x5d\x80\x20\xe3\x70\x5b\x38\x4e\x11\xa9\x65\x17\xe0\x36\x95\x74\x18\xbd\xb6\xaa\xaa\x54\x2c\x51\xef\xf6\xe9\x85\x18\x5a\x5b\x74\xcb\xa9\x53\x3e\xad\xb9\xc8\xb5\xa9\x38\xfb\xe8\xb7\x5e\x12\xbb\xe7\x36\x23\xa7\x26\xd3\x30\x32\x77\xb9\x6b\x46\x8b\x54\x4f\xb6\x6c\x6e\x78\x81\xf7\xe6\x94\xca\xca\xb3\x9b\xa3\xec\xd3\x1b\xdb\xcd\xf3\xd5\xef\xac\x19\x21\xbf\x4d\x06\x94\xdd\x5f\x0e\x70\xd3\x71\x39\x8f\xd7\xe9\xe7\xbf\x1f\x5e\xfc\x7a\xfa\xeb\xd9\xc9\xd9\xdf\x0e\x4e\x8f\x2e\xfe\x91\x44\x4e\xec\x55\x3c\xa2\x69\x08\xd6\xc3\x8d\xf1\x3e\x45\x93\x15\x92\xbf\xcc\x4e\x1b\xaf\x8c\xb6\x85\xf7\xac\xc1\x30\xf1\x99\x03\x46\xbe\xda\xa1\xe0\x1a\x1f\x16\x34\x2b\x94\xde\x03\x13\x23\xd0\xc0\x4c\x39\x87\x32\x5e\x6d\x9b\xc5\x67\xb5\xf2\x21\xab\xd6\x96\x71\x63\x93\xaa\xdf\x2a\x0e\x38\xfa\x66\xf0\x72\xd0\x25\x5b\xb8\x62\x06\x0a\x39\x75\xcf\x24\xc9\x21\x44\x2b\xf8\xa8\x00\x33\xb5\x6d\x42\xc2\x77\xd6\xb8\x40\xc3\xb7\xa7\xff\xbd\xfe\xd7\xf9\xf0\xea\x72\xd0\x3f\xee\x1c\x65\x47\x9d\x96\x28\x97\x6d\x5d\x85\x2c\x43\xd8\xef\xd3\xeb\x27\x34\xfb\xd4\x9f\x28\x7d\xb7\x1f\x29\x63\xc2\x14\x91\xd9\xa2\xbc\x29\x26\x40\x2e\xc4\x59\x3a\x7e\x79\x7e\x7a\x79\xd2\xbf\xbe\x18\x0e\xfa\x6f\xce\xfb\x2f\x8f\xb5\xd1\xb1\x5d\x8a\x32\xa8\xf9\x77\x79\x34\xba\x77\x34\x81\x38\xcd\xd8\x95\x8d\x53\xd0\x98\x51\xa3\xea\x2a\x65\x01\x10\xe4\xf7\x7b\xb0\x1b\x7d\x60\x3f\xa5\xc8\x08\xdd\x63\x79\x38\x89\xcb\x6f\x53\x30\xda\xc8\x63\x90\x10\xed\x05\x61\x1a\xeb\x18\xf7\x85\x72\x1f\xdb\xa5\x24\x6b\x77\x33\x29\xcf\x77\xe2\x4b\xd1\x4c\xf2\x90\xf2\x1d\x5c\x7a\x5a\x55\xeb\x59\xfe\x4e\x1b\x5d\xd5\xa8\xe2\x66\x57\x4d\x78\xb6\x0a\x79\xd4\x9e\x83\x7e\xda\xa4\x4e\x2d\xff\x57\xa6\x6c\x3d\x9d\x8b\xff\x32\xb4\x6d\x6b\xa3\x97\xe8\x62\x76\x53\x29\x18\x59\xca\xbd\x9b\xe7\xa2\x55\x68\x2d\xdb\x9e\x85\xc2\xd1\xfd\x1d\x14\x23\xcc\xec\xea\x28\x0b\x93\x7b\x4a\xcf\xbe\xb8\xbf\x2d\x0b\xb6\x56\x25\x34\x00\xf9\x6a\xfc\x17\x90\xd1\x83\xb2\x07\x78\x95\xf2\xc5\xa8\xe6\x2a\x95\x98\x6f\x8d\xab\xb0\x37\xe1\xd2\x78\xea\x74\x68\xdb\xf1\x15\x87\x88\x1c\xc5\x98\x29\x2f\x0c\xf4\x5b\x4e\xd1\x54\xb7\x9a\xd2\xe1\xca\xac\xfb\x35\x78\x67\x51\x1b\xc1\x05\x78\x8a\x49\x8f\x3e\x84\xed\x53\x05\x3e\x7b\x68\xd9\xa7\x46\x39\x88\x9f\xe8\xe9\x46\xc7\x49\xa2\x03\x15\x38\x2f\xbc\xd1\x02\x9a\x58\xcf\x95\x33\x7a\x06\x2a\xd1\xed\x54\xb4\x1b\x54\x83\x98\xc3\x1b\x24\xb4\x22\xbe\xe3\xb2\x09\x72\xd5\x83\x63\x37\x68\xcf\xc6\xbb\x38\x4c\x61\xb9\xbf\xfe\x05\x6a\xd6\xfb\x84\xd6\xcd\xe8\x12\x4f\xd4\x5e\xb8\x8c\xbe\x83\xdf\x7a\x01\x67\x9a\x19\x53\x00\x08\x4c\x89\xab\x34\x85\x54\xc9\x14\x40\xbf\x50\x2b\xf5\x19\x9d\x58\xcb\x3a\x26\x1e\x10\x24\x10\xed\x9b\xf1\x58\x95\x0a\x3e\x32\xea\xa6\x9f\xdb\x62\x7a\xc4\x95\x2a\xda\x3b\xf4\xf9\xff\x04\x04\xbd\x3e\x79\xf3\x67\xef\xbd\xce\xf7\x5a\xe9\x88\x19\x69\xff\x66\xe2\xfa\x2b\x56\x3b\x34\x40\x42\xbb\x24\xe3\x5f\xac\xd1\x28\x1b\x69\x92\x51\xe6\x21\x44\x4f\x62\xf6\x1d\xd7\x08\xac\x8f\xc0\x24\x2e\xc7\x33\x33\x67\x04\x04\xe4\x70\x17\x2f\x49\xa2\x11\x35\x74\x8c\x20\xd5\xdc\x22\x71\xb3\x4d\x67\xb2\xef\x53\x8e\xc5\xa8\xa0\x68\xe3\xa2\xa9\x43\x5b\x4b\xf6\x1c\x3f\x27\x30\x8d\x50\x16\x8b\x01\x25\x45\x42\x6f\x49\x0b\x63\xe9\x9f\x12\xb8\x82\x9e\x2e\x95\xa7\xa2\x35\xc6\x7d\x34\x54\x80\xbf\x38\x7d\x51\x77\xd5\x12\xa1\x82\x22\x80\x09\x9e\x45\x1b\xc3\x53\x11\xe0\x0e\xc1\x87\x36\x5d\xa6\xc1\x6b\x60\xbe\x5e\xbe\x97\x25\xe8\x05\xfa\xed\xb7\xfe\x1f\x97\xfd\xff\x9c\x0d\xfa\x17\xcf\x54\xbb\x0d\x49\x5c\x6d\xe9\xb5\x6c\x6c\xe9\xf5\x0e\xfd\xc1\x9a\xe5\xdd\x8a\x20\xc6\x52\x8c\x64\x75\xfd\xda\x61\x7e\xb7\xc4\x92\xe1\x2e\x7a\x93\xcf\x41\x0c\x83\x13\x59\x2f\x47\xcb\xf5\xca\x20\x97\x2f\xaf\x10\x7b\x09\x43\xbf\xb7\xe9\x49\xa4\x7e\x45\xd1\xf5\xfe\xd8\x31\xc7\xc3\x5e\xb2\x0a\x26\xf9\xc1\xe8\xb6\x0b\xb6\x12\x93\x1f\x8a\x71\x39\x76\xe3\x57\x24\xc9\x14\x63\x4d\xbf\x1c\xf4\xe2\xcf\x36\xea\xcd\x66\xcf\x6d\x33\x82\xfe\xb4\xc7\x6b\xf0\xcb\xa7\xc9\xe8\x1e\x3e\x01\x37\xf0\x8b\x34\xb4\xe2\xfa\xa4\xa5\xd2\x4b\x42\x90\x2d\xa1\x4c\x9b\x95\xba\x48\x47\xac\x3e\x8c\x29\xad\x4b\xea\x94\xd5\x36\x08\x7a\xf1\x62\xa9\xc8\xeb\x99\x04\xc5\xb7\xb5\x59\x44\xcd\x48\x53\xf9\xd6\x13\xaa\x20\x72\xae\x8d\x8d\xbb\x48\x51\x58\x4e\x4e\x3c\x2c\xdf\x5b\x3f\x75\x92\xff\x07\x00\x00\xff\xff\x7e\xbd\xbc\xe2\x85\x0b\x00\x00"

func dataAwsSimpleBuildBuildRubyShBytes() ([]byte, error) {
	return bindataRead(
		_dataAwsSimpleBuildBuildRubySh,
		"data/aws-simple/build/build-ruby.sh",
	)
}

func dataAwsSimpleBuildBuildRubySh() (*asset, error) {
	bytes, err := dataAwsSimpleBuildBuildRubyShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/aws-simple/build/build-ruby.sh", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _dataAwsSimpleBuildTemplateJsonTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x52\x5b\x6e\x83\x30\x10\xfc\xe7\x14\x96\xa5\xfc\x01\x49\x5b\xa9\xa9\x7a\x95\x2a\x22\x86\x6c\xc1\x8a\x6d\x2c\xaf\x9d\x2a\x41\xbe\x7b\xcd\x1b\xaa\x26\xe1\xc7\x68\x67\x3c\x3b\x9e\xdd\x26\x22\xe1\xa3\x92\xab\x4c\xb3\xe2\x0c\x26\xbb\x80\x41\x5e\x2b\xfa\x49\xe8\x2e\xfd\x48\x77\x34\x8e\x7a\xce\x85\x19\xce\x72\x01\x18\xa0\xfe\x5a\x28\xb2\x1f\xcc\x58\x51\x00\x62\x76\x86\x6b\x40\x94\x13\x22\x5e\xa2\x08\x85\x01\x7b\x0f\x35\x50\xf6\xcd\x56\x08\x0a\x57\x06\x3f\xb6\x1a\x80\xae\xee\x47\x23\xda\xd4\x17\xde\x7a\x0c\x4e\x03\xe1\x6b\xb8\x35\x7a\x0a\x0c\x7b\xd5\xd0\x3e\xe0\x9b\x0b\xa0\xf1\x5c\xc7\xda\x99\xa2\x43\x9a\x0d\x09\x0f\xcd\x99\xe5\x92\x6c\x7c\xd3\x10\x87\x60\xc8\x71\x6a\x7c\x24\xde\x07\x0e\xa8\xd3\x82\xb6\x94\x3a\x01\x5a\xae\x02\xd0\x47\xb5\xb5\x52\x6f\x6b\x6b\xeb\x84\x69\x9d\xda\xf2\x46\x07\xaa\x8f\xef\xdb\xc3\x0a\x84\x58\xf9\x2b\x0c\xd7\xb6\x85\x72\xc7\xc5\x29\x31\x2e\xbf\xa6\x58\x4d\x5a\xdd\x79\x18\x73\xe8\x38\x43\x06\xd3\x40\x14\x93\x9d\x76\xeb\x65\x92\x9e\x3a\x32\xc9\x6e\xb5\x4a\x20\xc7\x19\x5b\x8d\xef\x5e\x30\xeb\x39\x3f\x4e\x87\xae\x46\xfe\x48\x71\x26\x3e\x51\x9c\xd6\xe4\x91\x5a\x4f\x7a\xe6\xad\x5b\x81\x8c\x49\xde\xe7\xc1\x93\xfd\x7b\xfe\xca\xf6\x2f\xf3\xa2\x50\xae\xd0\x32\x15\x58\x63\x6c\xc5\x5b\x2a\x98\x29\x17\x14\xc4\x2a\x6b\x3b\x8f\x71\xbb\xdc\x29\xeb\x16\xa1\x4a\x9e\x8d\x58\xd3\xb4\x7f\xde\x93\xbf\xde\xc3\x19\xb6\x88\x49\xfd\x9f\xe3\x7e\xe7\x0f\x51\xe4\xa3\xdf\x00\x00\x00\xff\xff\x9e\xc9\x88\x90\xa5\x03\x00\x00"

func dataAwsSimpleBuildTemplateJsonTplBytes() ([]byte, error) {
	return bindataRead(
		_dataAwsSimpleBuildTemplateJsonTpl,
		"data/aws-simple/build/template.json.tpl",
	)
}

func dataAwsSimpleBuildTemplateJsonTpl() (*asset, error) {
	bytes, err := dataAwsSimpleBuildTemplateJsonTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/aws-simple/build/template.json.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _dataAwsSimpleDeployMainTfTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x52\xc1\x8e\xdb\x20\x10\xbd\xe7\x2b\x46\x74\x8f\x5d\x27\xed\xb1\x52\xcf\xbd\xb5\x1f\x50\xad\x10\xc6\x24\x45\x8b\x01\xc1\x90\xca\xb2\xfc\xef\x1d\xa0\x16\xc1\xbb\xbd\x36\x39\xf9\xcd\x63\xde\xcc\x9b\xf7\x01\xbe\x29\xab\x82\x40\x35\xc1\xb8\xc0\x0f\x44\xf7\x11\x26\x07\xd6\x21\xa8\x49\x23\xcc\xc2\x26\x61\xcc\x72\x3a\xdd\x45\xd0\x62\x34\x0a\x98\xb6\xd7\x20\xb8\x9e\x18\xac\xdb\x03\x2c\x7e\x47\x2e\xa4\x54\x31\xf2\x57\xb5\xbc\x53\x8c\x4a\x06\x85\xff\x28\x06\x75\xd3\xce\x1e\x0a\x44\xe5\x56\xcc\xaa\xc0\x8f\x0f\x66\x7d\x60\x6a\x1b\x51\x58\xa9\x38\x2e\x3e\xd3\x61\x52\x57\x91\x0c\xc2\x57\x60\xf8\x79\x98\xb5\x0c\x8e\xc1\xe3\x8b\x98\x46\x4b\xd3\xf8\x34\x1a\x2d\x0f\xdd\xee\x5e\x72\xa9\xa7\xf0\x0e\xfc\x77\xed\x93\x0f\xee\xae\x27\x15\xca\xf4\x04\x9d\x00\xda\xf2\x59\xf5\x69\xa5\x87\x43\x6f\xca\xc6\x88\xd6\x6c\xe8\x69\x0d\x2f\xb4\x6a\x08\xe4\x5f\x47\xab\x38\x51\x68\x88\xa0\xa2\x4b\x41\x36\x7f\x53\xd0\xb8\xf0\x5b\x70\xc9\x33\x02\xbd\xaf\x93\x65\x0f\x6b\x9f\x75\xad\x1f\xdb\xf6\x5c\x5b\xee\xc7\x2c\x9a\x75\xc1\xa6\x57\xbf\xa9\x44\x35\x6d\x6f\x24\x17\x4b\x3f\x00\x5a\x1f\x9d\x74\xa6\x8e\xf7\xfc\xa9\x80\xd7\xe0\x66\xee\x5d\xc0\x02\x5e\x0a\x86\x6e\x47\x1a\x96\xad\xe5\xa3\x71\xf2\x35\x12\xf6\x93\x5d\x86\xf2\x3f\x5f\xd8\x0b\xd5\xb7\xac\xa6\xfe\x9b\xd8\x1b\x1b\xf7\x28\x3d\x1a\x48\x81\x83\xf6\x6b\xf7\x98\x75\xf1\xad\x4b\x5f\x2b\x77\x70\xbd\x7d\x0d\x1d\x79\xdc\xf5\xe9\xb2\x58\x88\x7b\xf2\x0f\x82\x3b\x5c\x4f\x92\xcf\xd3\x1f\x9d\x3a\xd7\x2d\x9f\xd6\xb7\x89\x18\x68\x9d\x21\x9f\xf3\x25\x3f\x46\x71\x23\x7f\xe1\x7b\x16\xe9\x82\xc1\xaa\x29\x2e\xa1\x4f\x08\x2c\x05\x53\x3d\xb8\x0b\x93\x0a\xf5\x17\xa2\xff\x72\x3e\x57\x89\x7d\xc7\xd2\xbc\x2e\xc0\x27\x1b\xb7\x73\x0e\xe8\x9f\x00\x00\x00\xff\xff\x5f\x73\x79\x4b\x5f\x04\x00\x00"

func dataAwsSimpleDeployMainTfTplBytes() ([]byte, error) {
	return bindataRead(
		_dataAwsSimpleDeployMainTfTpl,
		"data/aws-simple/deploy/main.tf.tpl",
	)
}

func dataAwsSimpleDeployMainTfTpl() (*asset, error) {
	bytes, err := dataAwsSimpleDeployMainTfTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/aws-simple/deploy/main.tf.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _dataAwsVpcPublicPrivateBuildBuildRubySh = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x56\x7f\x53\x1b\x39\x12\xfd\x7f\x3e\x45\xaf\xa1\xc2\x5d\x15\x33\x03\xd4\xed\xdd\xae\xbd\x6c\x1d\x10\xd8\xa5\x2a\x65\xa7\x4c\x72\x3f\x2a\xc9\x51\xe3\x99\xb6\xad\x30\x96\x14\x49\x63\x30\x84\xef\x7e\xaf\x35\xc6\x3f\x42\x92\xca\x3f\x20\x4b\xea\xd6\xeb\xee\xd7\xaf\x67\xe7\xa7\x7c\xa4\x74\x3e\x2a\xfc\x34\x49\x3c\x07\x4a\x0d\x69\xd3\xe8\xe5\x92\x9d\xe3\x3b\x15\x97\x56\x59\x1e\x17\xaa\x5e\x6e\x07\x57\x94\x9c\x24\x58\x19\xf7\x97\xbf\xd2\x43\x42\x44\xb5\x29\x8b\x9a\xbc\x69\x5c\xc9\x63\x55\xf3\xf1\xee\xe1\x7a\xbb\x56\x9a\xb5\x39\xde\x3d\x92\x2d\x2e\xa7\x86\x3a\xe7\xc3\xe1\x60\x48\x45\xa0\xdd\x87\xb5\xd1\x63\x77\xf7\xa1\xbd\xfb\xd8\xa3\x57\x85\x0f\xb0\x9f\xf8\x6e\x47\xcc\x26\x8e\x2d\x99\x10\x0c\xe5\xf3\xc2\xe5\x38\xc8\xfd\xc2\xe3\x1f\x7d\xa6\x10\xb1\x69\x3a\x3a\x48\x1e\x13\xa0\xb3\xb4\x17\xc1\x51\x67\xf7\xe1\xf4\xe4\xea\xcf\xeb\xab\xc1\xdb\xe1\xd9\xf9\x63\x47\x36\x5e\x5d\xf6\xcf\xfb\x83\xc7\xce\x1e\x01\x43\x92\x18\x96\x10\x70\xf0\xcf\x0e\x1d\xfd\xfe\xe2\x10\xee\xe0\x74\xc2\x8e\xd2\xd0\xbe\xf7\x3b\xe5\x15\xcf\x73\xdd\xd4\x75\x8f\x1e\x13\x53\x47\x83\x36\x8c\x77\x72\xe3\x03\xc1\x58\x8e\x92\x1d\x2a\x6b\xd3\x54\x69\x69\xf4\x58\x4d\xa8\x2c\x34\x29\x1d\xd8\x8d\xd9\x31\xdd\xaa\x30\xa5\xc2\x06\x2a\xcd\x6c\x56\xe8\xca\x93\x1a\x93\x0a\x7b\x9e\x7c\x50\x75\x8d\x9b\x64\x9d\x41\x9c\xde\xe3\x11\xea\xfc\xbb\x50\x41\xe9\x09\x8d\x11\xc8\x96\x5b\x60\x82\x0b\x5b\x73\xe0\x2c\xcb\x3a\x49\xa3\x61\x4f\xef\xde\x51\x3a\x5e\x26\x47\x8d\xf2\x68\x91\x2b\xed\x43\xa1\x4b\xce\x47\xc6\x84\x74\xac\xb4\xf2\x53\xae\xe8\xc3\x87\x1e\x55\x06\x69\xf5\x35\x23\xad\x07\xd9\xcf\x49\x65\x34\x6a\x2a\xef\x9e\x54\x95\x3c\x2b\x48\x81\xc5\x1a\xaf\x82\x71\x8a\x3d\x01\x33\x35\xb6\x2a\x04\x55\x7c\xd8\x30\xf9\xa6\x32\x72\x35\x9d\x80\x35\xf1\x90\x9f\x6d\x47\x10\x08\x30\x5d\x80\x20\xe3\x70\x5b\x38\x4e\x11\xa9\x65\x17\xe0\x36\x95\x74\x18\xbd\xb6\xaa\xaa\x54\x2c\x51\xef\xf6\xe9\x85\x18\x5a\x5b\x74\xcb\xa9\x53\x3e\xad\xb9\xc8\xb5\xa9\x38\xfb\xe8\xb7\x5e\x12\xbb\xe7\x36\x23\xa7\x26\xd3\x30\x32\x77\xb9\x6b\x46\x8b\x54\x4f\xb6\x6c\x6e\x78\x81\xf7\xe6\x94\xca\xca\xb3\x9b\xa3\xec\xd3\x1b\xdb\xcd\xf3\xd5\xef\xac\x19\x21\xbf\x4d\x06\x94\xdd\x5f\x0e\x70\xd3\x71\x39\x8f\xd7\xe9\xe7\xbf\x1f\x5e\xfc\x7a\xfa\xeb\xd9\xc9\xd9\xdf\x0e\x4e\x8f\x2e\xfe\x91\x44\x4e\xec\x55\x3c\xa2\x69\x08\xd6\xc3\x8d\xf1\x3e\x45\x93\x15\x92\xbf\xcc\x4e\x1b\xaf\x8c\xb6\x85\xf7\xac\xc1\x30\xf1\x99\x03\x46\xbe\xda\xa1\xe0\x1a\x1f\x16\x34\x2b\x94\xde\x03\x13\x23\xd0\xc0\x4c\x39\x87\x32\x5e\x6d\x9b\xc5\x67\xb5\xf2\x21\xab\xd6\x96\x71\x63\x93\xaa\xdf\x2a\x0e\x38\xfa\x66\xf0\x72\xd0\x25\x5b\xb8\x62\x06\x0a\x39\x75\xcf\x24\xc9\x21\x44\x2b\xf8\xa8\x00\x33\xb5\x6d\x42\xc2\x77\xd6\xb8\x40\xc3\xb7\xa7\xff\xbd\xfe\xd7\xf9\xf0\xea\x72\xd0\x3f\xee\x1c\x65\x47\x9d\x96\x28\x97\x6d\x5d\x85\x2c\x43\xd8\xef\xd3\xeb\x27\x34\xfb\xd4\x9f\x28\x7d\xb7\x1f\x29\x63\xc2\x14\x91\xd9\xa2\xbc\x29\x26\x40\x2e\xc4\x59\x3a\x7e\x79\x7e\x7a\x79\xd2\xbf\xbe\x18\x0e\xfa\x6f\xce\xfb\x2f\x8f\xb5\xd1\xb1\x5d\x8a\x32\xa8\xf9\x77\x79\x34\xba\x77\x34\x81\x38\xcd\xd8\x95\x8d\x53\xd0\x98\x51\xa3\xea\x2a\x65\x01\x10\xe4\xf7\x7b\xb0\x1b\x7d\x60\x3f\xa5\xc8\x08\xdd\x63\x79\x38\x89\xcb\x6f\x53\x30\xda\xc8\x63\x90\x10\xed\x05\x61\x1a\xeb\x18\xf7\x85\x72\x1f\xdb\xa5\x24\x6b\x77\x33\x29\xcf\x77\xe2\x4b\xd1\x4c\xf2\x90\xf2\x1d\x5c\x7a\x5a\x55\xeb\x59\xfe\x4e\x1b\x5d\xd5\xa8\xe2\x66\x57\x4d\x78\xb6\x0a\x79\xd4\x9e\x83\x7e\xda\xa4\x4e\x2d\xff\x57\xa6\x6c\x3d\x9d\x8b\xff\x32\xb4\x6d\x6b\xa3\x97\xe8\x62\x76\x53\x29\x18\x59\xca\xbd\x9b\xe7\xa2\x55\x68\x2d\xdb\x9e\x85\xc2\xd1\xfd\x1d\x14\x23\xcc\xec\xea\x28\x0b\x93\x7b\x4a\xcf\xbe\xb8\xbf\x2d\x0b\xb6\x56\x25\x34\x00\xf9\x6a\xfc\x17\x90\xd1\x83\xb2\x07\x78\x95\xf2\xc5\xa8\xe6\x2a\x95\x98\x6f\x8d\xab\xb0\x37\xe1\xd2\x78\xea\x74\x68\xdb\xf1\x15\x87\x88\x1c\xc5\x98\x29\x2f\x0c\xf4\x5b\x4e\xd1\x54\xb7\x9a\xd2\xe1\xca\xac\xfb\x35\x78\x67\x51\x1b\xc1\x05\x78\x8a\x49\x8f\x3e\x84\xed\x53\x05\x3e\x7b\x68\xd9\xa7\x46\x39\x88\x9f\xe8\xe9\x46\xc7\x49\xa2\x03\x15\x38\x2f\xbc\xd1\x02\x9a\x58\xcf\x95\x33\x7a\x06\x2a\xd1\xed\x54\xb4\x1b\x54\x83\x98\xc3\x1b\x24\xb4\x22\xbe\xe3\xb2\x09\x72\xd5\x83\x63\x37\x68\xcf\xc6\xbb\x38\x4c\x61\xb9\xbf\xfe\x05\x6a\xd6\xfb\x84\xd6\xcd\xe8\x12\x4f\xd4\x5e\xb8\x8c\xbe\x83\xdf\x7a\x01\x67\x9a\x19\x53\x00\x08\x4c\x89\xab\x34\x85\x54\xc9\x14\x40\xbf\x50\x2b\xf5\x19\x9d\x58\xcb\x3a\x26\x1e\x10\x24\x10\xed\x9b\xf1\x58\x95\x0a\x3e\x32\xea\xa6\x9f\xdb\x62\x7a\xc4\x95\x2a\xda\x3b\xf4\xf9\xff\x04\x04\xbd\x3e\x79\xf3\x67\xef\xbd\xce\xf7\x5a\xe9\x88\x19\x69\xff\x66\xe2\xfa\x2b\x56\x3b\x34\x40\x42\xbb\x24\xe3\x5f\xac\xd1\x28\x1b\x69\x92\x51\xe6\x21\x44\x4f\x62\xf6\x1d\xd7\x08\xac\x8f\xc0\x24\x2e\xc7\x33\x33\x67\x04\x04\xe4\x70\x17\x2f\x49\xa2\x11\x35\x74\x8c\x20\xd5\xdc\x22\x71\xb3\x4d\x67\xb2\xef\x53\x8e\xc5\xa8\xa0\x68\xe3\xa2\xa9\x43\x5b\x4b\xf6\x1c\x3f\x27\x30\x8d\x50\x16\x8b\x01\x25\x45\x42\x6f\x49\x0b\x63\xe9\x9f\x12\xb8\x82\x9e\x2e\x95\xa7\xa2\x35\xc6\x7d\x34\x54\x80\xbf\x38\x7d\x51\x77\xd5\x12\xa1\x82\x22\x80\x09\x9e\x45\x1b\xc3\x53\x11\xe0\x0e\xc1\x87\x36\x5d\xa6\xc1\x6b\x60\xbe\x5e\xbe\x97\x25\xe8\x05\xfa\xed\xb7\xfe\x1f\x97\xfd\xff\x9c\x0d\xfa\x17\xcf\x54\xbb\x0d\x49\x5c\x6d\xe9\xb5\x6c\x6c\xe9\xf5\x0e\xfd\xc1\x9a\xe5\xdd\x8a\x20\xc6\x52\x8c\x64\x75\xfd\xda\x61\x7e\xb7\xc4\x92\xe1\x2e\x7a\x93\xcf\x41\x0c\x83\x13\x59\x2f\x47\xcb\xf5\xca\x20\x97\x2f\xaf\x10\x7b\x09\x43\xbf\xb7\xe9\x49\xa4\x7e\x45\xd1\xf5\xfe\xd8\x31\xc7\xc3\x5e\xb2\x0a\x26\xf9\xc1\xe8\xb6\x0b\xb6\x12\x93\x1f\x8a\x71\x39\x76\xe3\x57\x24\xc9\x14\x63\x4d\xbf\x1c\xf4\xe2\xcf\x36\xea\xcd\x66\xcf\x6d\x33\x82\xfe\xb4\xc7\x6b\xf0\xcb\xa7\xc9\xe8\x1e\x3e\x01\x37\xf0\x8b\x34\xb4\xe2\xfa\xa4\xa5\xd2\x4b\x42\x90\x2d\xa1\x4c\x9b\x95\xba\x48\x47\xac\x3e\x8c\x29\xad\x4b\xea\x94\xd5\x36\x08\x7a\xf1\x62\xa9\xc8\xeb\x99\x04\xc5\xb7\xb5\x59\x44\xcd\x48\x53\xf9\xd6\x13\xaa\x20\x72\xae\x8d\x8d\xbb\x48\x51\x58\x4e\x4e\x3c\x2c\xdf\x5b\x3f\x75\x92\xff\x07\x00\x00\xff\xff\x7e\xbd\xbc\xe2\x85\x0b\x00\x00"

func dataAwsVpcPublicPrivateBuildBuildRubyShBytes() ([]byte, error) {
	return bindataRead(
		_dataAwsVpcPublicPrivateBuildBuildRubySh,
		"data/aws-vpc-public-private/build/build-ruby.sh",
	)
}

func dataAwsVpcPublicPrivateBuildBuildRubySh() (*asset, error) {
	bytes, err := dataAwsVpcPublicPrivateBuildBuildRubyShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/aws-vpc-public-private/build/build-ruby.sh", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _dataAwsVpcPublicPrivateBuildTemplateJsonTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x52\x5b\x6e\x83\x30\x10\xfc\xe7\x14\x96\xa5\xfc\x01\x49\x5b\xa9\xa9\x7a\x95\x2a\x22\x86\x6c\xc1\x8a\x6d\x2c\xaf\x9d\x2a\x41\xbe\x7b\xcd\x1b\xaa\x26\xe1\xc7\x68\x67\x3c\x3b\x9e\xdd\x26\x22\xe1\xa3\x92\xab\x4c\xb3\xe2\x0c\x26\xbb\x80\x41\x5e\x2b\xfa\x49\xe8\x2e\xfd\x48\x77\x34\x8e\x7a\xce\x85\x19\xce\x72\x01\x18\xa0\xfe\x5a\x28\xb2\x1f\xcc\x58\x51\x00\x62\x76\x86\x6b\x40\x94\x13\x22\x5e\xa2\x08\x85\x01\x7b\x0f\x35\x50\xf6\xcd\x56\x08\x0a\x57\x06\x3f\xb6\x1a\x80\xae\xee\x47\x23\xda\xd4\x17\xde\x7a\x0c\x4e\x03\xe1\x6b\xb8\x35\x7a\x0a\x0c\x7b\xd5\xd0\x3e\xe0\x9b\x0b\xa0\xf1\x5c\xc7\xda\x99\xa2\x43\x9a\x0d\x09\x0f\xcd\x99\xe5\x92\x6c\x7c\xd3\x10\x87\x60\xc8\x71\x6a\x7c\x24\xde\x07\x0e\xa8\xd3\x82\xb6\x94\x3a\x01\x5a\xae\x02\xd0\x47\xb5\xb5\x52\x6f\x6b\x6b\xeb\x84\x69\x9d\xda\xf2\x46\x07\xaa\x8f\xef\xdb\xc3\x0a\x84\x58\xf9\x2b\x0c\xd7\xb6\x85\x72\xc7\xc5\x29\x31\x2e\xbf\xa6\x58\x4d\x5a\xdd\x79\x18\x73\xe8\x38\x43\x06\xd3\x40\x14\x93\x9d\x76\xeb\x65\x92\x9e\x3a\x32\xc9\x6e\xb5\x4a\x20\xc7\x19\x5b\x8d\xef\x5e\x30\xeb\x39\x3f\x4e\x87\xae\x46\xfe\x48\x71\x26\x3e\x51\x9c\xd6\xe4\x91\x5a\x4f\x7a\xe6\xad\x5b\x81\x8c\x49\xde\xe7\xc1\x93\xfd\x7b\xfe\xca\xf6\x2f\xf3\xa2\x50\xae\xd0\x32\x15\x58\x63\x6c\xc5\x5b\x2a\x98\x29\x17\x14\xc4\x2a\x6b\x3b\x8f\x71\xbb\xdc\x29\xeb\x16\xa1\x4a\x9e\x8d\x58\xd3\xb4\x7f\xde\x93\xbf\xde\xc3\x19\xb6\x88\x49\xfd\x9f\xe3\x7e\xe7\x0f\x51\xe4\xa3\xdf\x00\x00\x00\xff\xff\x9e\xc9\x88\x90\xa5\x03\x00\x00"

func dataAwsVpcPublicPrivateBuildTemplateJsonTplBytes() ([]byte, error) {
	return bindataRead(
		_dataAwsVpcPublicPrivateBuildTemplateJsonTpl,
		"data/aws-vpc-public-private/build/template.json.tpl",
	)
}

func dataAwsVpcPublicPrivateBuildTemplateJsonTpl() (*asset, error) {
	bytes, err := dataAwsVpcPublicPrivateBuildTemplateJsonTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/aws-vpc-public-private/build/template.json.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _dataAwsVpcPublicPrivateDeployMainTfTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x55\x4d\x6f\x13\x31\x10\xbd\xe7\x57\x8c\x5c\x4e\x88\x6e\x0a\xa7\xaa\x12\xb7\x4a\xdc\xe8\x85\x1b\x42\x2b\xaf\xd7\x09\x56\x1d\xdb\xf2\x47\xd0\x2a\xda\xff\xce\xd8\x8e\xe3\xfd\x48\x5b\x10\x12\xdb\x4b\xfb\xde\x8c\x67\xe6\x3d\x7b\x7a\x03\x5f\xb8\xe2\x96\x7a\xde\x43\x37\xc0\x93\xf7\xfa\x03\xf4\x1a\x94\xf6\xc0\x7b\xe1\xe1\x40\x55\xa0\x52\x0e\x9b\xcd\x91\x5a\x41\x3b\xc9\x81\x08\xb5\xb3\xb4\x15\x3d\x81\xd3\x38\x81\xe9\x2f\xd7\x52\xc6\xb8\x73\xed\x33\x1f\xae\x90\x8e\x33\xcb\xfd\x0b\xa4\xe5\x7b\xa1\xd5\x82\xc0\xd0\x56\xd1\x03\x4f\xf0\x34\xe1\x20\x16\x91\x42\x39\x4f\x15\xe3\xad\x1f\x4c\x0c\x87\x9e\xef\x68\x90\x1e\x3e\x03\xf1\x9f\x9a\x83\x60\x56\x13\x98\x66\x18\x2b\x8e\x38\x77\xeb\x42\xa7\xb0\xab\xd5\x38\x26\x74\x52\xb0\x17\xe9\xa3\x61\x2d\x13\xbd\xbd\x02\x9f\x63\x37\xc6\xea\xa3\xe8\xb9\x4d\x03\x22\xb4\x01\xa8\xfa\xc4\xc6\xde\x9d\x30\xb1\x99\xeb\x36\x12\x0c\xab\x4a\xcd\xc3\x2a\x9e\xc2\xb2\x66\x10\xbf\x59\x58\xc6\x31\x04\x9b\xb0\xdc\xe9\x60\x59\xb5\x20\x58\xe1\x87\x76\x6f\x75\x30\x04\x08\x97\x5d\xee\x2c\xca\x1c\x4f\x39\x9d\xf2\xaf\xe3\x78\x8b\xdc\x6d\x3e\xb4\x38\x9e\xaa\xe6\x11\x6b\xc5\xfc\x37\x52\xc8\xf1\x3d\xd6\x73\xe9\x40\x00\x9c\xdf\x6b\xa6\x65\xee\xef\xf6\x63\x02\x77\x56\x1f\x5a\xa3\xad\x4f\xe0\x5d\xc2\xbc\x2e\x48\xc5\xa2\xb6\x6d\x27\x35\x7b\x76\x88\x7d\x27\x77\x4d\xfa\xd9\xde\x91\x1f\xc8\x8f\xb1\x98\x50\x2f\x57\x23\x9e\x19\x72\xa5\xe0\xfd\xb5\x8a\xf7\x7f\x56\xf2\x6d\x35\xa9\x31\x13\x35\x61\xa1\xe7\x5f\x6a\xf9\xda\x78\xff\x28\x66\x2d\x16\x99\xf1\x3c\xdf\xff\xb4\x6f\xa5\x65\xba\x88\x2b\x01\x2f\xdf\x9b\x4a\xe6\x77\xea\x26\x09\x65\xcc\xe5\x43\xce\xe3\xce\xbd\x2b\xb2\xac\x5d\x6d\xb0\xb1\xa6\x24\x95\x2d\xe3\x66\x45\x62\x52\x61\x1a\x9c\xa0\x79\x7f\x4e\xc0\x8c\x1b\xf8\xf6\xf4\xf8\xf4\x80\x7b\xf4\x99\x83\x14\xce\x73\x85\xbe\x42\xd4\xcb\x01\xd3\x6a\x27\xf6\xc1\xc6\xd5\x81\xb1\x99\xc6\x7d\x91\xf5\x97\x5d\x95\x15\xe6\x37\x35\x52\x13\x77\x16\x37\xfe\xb2\x0b\xd7\x57\xbc\x52\x25\xbd\x26\x26\x53\x6e\xe0\x91\x1b\xa9\x07\xa0\xa8\x90\x07\xbd\xab\x33\x2f\x0c\x2b\xf8\xd4\x35\xdc\xcb\x73\xcf\xce\x3b\xe9\x20\x92\x47\xb3\x25\x5d\xe9\x19\x3c\x31\x33\xbe\x8c\xd9\x39\xab\x95\x9d\x82\xcb\x3f\x89\x45\xd1\x02\xe7\xc7\x14\xef\xfa\xdc\x58\x4c\x7f\xc5\xf5\x68\xe3\xc5\x44\x4f\xf7\xe5\x51\x7c\x5d\xad\xc9\x8b\x74\x3a\x78\x13\x3c\x90\x60\x65\x56\xe3\x48\x65\x48\xc1\x3f\xbd\x37\x0f\xdb\x6d\x2e\x14\xef\x53\x3c\xbd\x57\x2e\xf7\xb7\x8d\x7b\xfa\x77\x00\x00\x00\xff\xff\x11\x23\xa2\xbf\x89\x07\x00\x00"

func dataAwsVpcPublicPrivateDeployMainTfTplBytes() ([]byte, error) {
	return bindataRead(
		_dataAwsVpcPublicPrivateDeployMainTfTpl,
		"data/aws-vpc-public-private/deploy/main.tf.tpl",
	)
}

func dataAwsVpcPublicPrivateDeployMainTfTpl() (*asset, error) {
	bytes, err := dataAwsVpcPublicPrivateDeployMainTfTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/aws-vpc-public-private/deploy/main.tf.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _dataCommonDevVagrantfileTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x56\x6d\x6f\xd3\x48\x17\xfd\xee\x5f\x71\x71\x01\x81\x54\xdb\x7a\xd0\xa3\xfd\xd0\x85\x0a\x28\x6f\x95\x76\x0b\xa2\x59\xbe\xac\x56\x61\x62\x5f\xdb\x23\x9c\x99\xd1\xcc\x38\x6d\xb6\xcd\x7f\xdf\x73\x6d\x27\x4d\x29\x5b\x56\x22\xd4\xb9\x33\xf7\xdc\xb7\x73\xae\x73\x40\xef\xd9\xb0\x57\x91\x2b\x5a\xac\xe9\x63\x8c\xf6\x90\x2a\x4b\xc6\x46\xe2\x4a\xc7\x07\xc9\x41\x72\x40\xb3\x56\x07\xc2\xbf\xd8\x32\x7d\x51\x8d\x57\x26\xd6\xba\x63\x6a\xbe\xf7\xa5\xda\xfa\xe1\x56\xc5\x2b\xee\xac\x5b\xb2\x89\x64\x6b\x40\x44\x81\x50\xce\x75\xba\x54\x51\x5b\x53\x04\xf6\x2b\x5d\x72\x4e\xa7\x91\x42\x6b\xfb\xae\x1a\x82\x2e\x98\x5a\x65\xaa\x4c\x82\x73\x95\xd3\xcc\xd2\xd2\x56\xba\x5e\x0b\x2c\x70\xf6\xc2\x1f\x52\x1f\x78\x88\xf6\xca\x39\x31\xe4\x49\x32\x1d\xe7\xa5\x35\xb5\x6e\x7a\xcf\x4f\xd2\x67\xe9\x53\xa9\xe8\x7a\x34\x5d\x27\x44\xe3\x53\xbe\x5a\xe6\x0b\x7b\x49\x2f\x28\x6d\x55\x68\x75\x69\xbd\x2b\x9c\xe7\x52\x07\xfe\xe5\xff\x69\x82\x8b\x07\xf4\xc1\x06\x14\x60\xba\x35\x19\x8e\x17\xd6\x7f\xbb\xe5\x3e\xd9\x28\x75\x5e\xaf\xd0\x87\xf9\x64\x48\x0f\x49\xbb\x23\x4a\xaf\xae\xa4\x11\x73\xed\xe6\xaa\xaa\x3c\x87\x40\x9b\xcd\x04\x7c\xce\xb1\x77\xa4\x28\xac\x4d\x89\xfe\xd5\xb6\xab\xd8\x53\xed\xed\x92\x6c\xef\x49\x50\xb4\x69\xa8\xd2\x48\x28\x5a\x8f\xf2\x2d\x15\xab\xb1\xba\x5b\x39\x8c\x00\xf3\x09\x40\x42\x3a\x15\xdb\x7c\x0b\x80\x80\x87\x94\x6e\x3d\xd3\x43\xf8\x12\xd9\x0b\xcc\x0d\xf9\xed\xac\xd4\x78\xdb\xbb\x3d\xcb\x98\xe4\x5b\xa3\x16\x18\xf3\xf9\xf9\x07\x52\x8d\x8c\x12\xe3\xbd\x50\xbe\x12\xe0\x60\x31\xfe\x18\xe5\x71\xaa\x1e\xb5\x3a\x36\x15\x9b\x52\x73\x18\x2a\x08\x37\x99\x86\xd0\xe6\x93\xf7\x7c\xc4\x7a\x41\xd1\xf7\x3c\x06\x7a\x67\x7b\x53\x0d\xbc\xa0\xed\xe4\xc6\x6f\x4f\x74\x4d\xca\xac\x9f\xe2\xd6\xd5\xa3\x81\x5d\xe8\x08\x69\x83\xc7\xad\xc7\x1c\x96\x90\xa3\xcf\xf4\x68\x83\x6b\x72\x8e\x91\x16\x16\x74\x2c\x6e\x6e\x65\x68\x0c\xdc\x3b\x6b\x5d\x7e\x02\x6b\x44\xb3\x64\x18\xf7\xb7\x52\xc0\x86\x0e\xe2\xe1\xd6\x55\xe7\xed\x4a\x07\xc9\x30\x0d\x2d\x77\x9d\x4c\xdc\x74\xda\x30\x7a\x58\x56\x74\x70\x05\x87\x0d\x3d\x7e\x4c\x0b\x50\x6b\xfa\x5a\x2c\x95\x36\x79\x68\xd3\xb1\x18\xb4\x4a\xea\x41\xd2\x43\x0b\x7e\xb3\xaa\x22\xd5\x75\xc3\xf8\x6b\xaf\x1a\xd1\x4e\xa0\x96\x3d\x0f\x75\xa3\x0b\xb7\x1a\x9c\xdf\xb4\x64\x7b\x5b\xfa\x22\x7c\xbb\xf1\x1e\x3a\x22\x95\x4f\x96\x6b\xcf\x88\xb2\xd9\xfc\x30\x83\x53\x13\xa2\x24\xf0\xb9\x87\x9a\x17\xbd\x86\x22\xd9\xac\xb4\xb7\x46\x5c\xff\x6b\xf9\x0f\x43\xe9\xb5\x8b\x73\x0f\x94\x04\x11\x92\x64\xdf\x82\xd1\x3c\x7f\x7e\x7e\xf2\xf9\xf4\xd3\x2c\x09\x1c\x29\x03\x01\x0e\x48\x66\x95\xf1\x25\x97\x47\x24\xff\xf7\xe0\x52\x69\x97\x4b\xec\x01\xba\xd0\xb1\x45\x4b\xa2\xeb\x23\x75\xb6\x69\x64\xd7\xe0\x51\x56\x45\xa5\x83\xeb\xd4\x9a\xab\xc4\xf2\x93\xa7\x74\x45\x0f\x5f\xd2\xb3\xe3\xc7\xff\xa3\xeb\xf1\xa6\xa7\x2c\x0e\xd0\x74\x4c\x05\xfa\x52\x98\xbe\xeb\x7e\xa5\xcd\x2e\x22\x6e\x1d\x6d\xb1\x15\x58\xcc\xb5\xbe\x04\xfe\x12\x42\x05\x45\x13\xdb\x0d\xa8\x5c\xb6\x96\xd2\x3f\xc5\xe3\x2f\x84\x48\x27\x84\xdf\xd5\x37\x26\x1d\x45\x07\xb1\x55\x91\xbe\x4e\xd2\x21\x30\xfd\x2b\x35\x16\x12\x18\xc5\xdb\x0d\xda\x95\x35\x85\x0d\x23\x86\x81\x4c\x23\x2a\xa8\xb2\x93\x26\x1d\x23\xcd\xd6\x2e\x79\x6b\x29\x72\x21\x8f\x2f\x25\xda\xc9\xa4\x0a\x91\x9b\xc8\x71\x18\xbb\x0a\xc2\x62\x54\xa1\x4d\x02\x9d\x3c\x80\x8a\xd9\x51\xfa\x47\xe0\x37\x67\xe7\x68\x51\x4a\x05\xc7\xb2\x40\x42\xf2\xa9\xe6\xe3\xfc\xe8\x78\xaf\x19\x48\xcb\x60\xb2\x63\x36\x7b\x8e\xd7\x14\x7a\x2c\xcd\xc8\x4c\x99\xfa\x19\x0c\x00\x2c\x8f\x0e\xd3\x56\x97\x26\x10\x16\x5e\x54\x3e\x26\xb5\x4e\x12\xbe\x74\xd6\x47\x7a\xf3\xf6\xf5\xe9\xab\xb3\xf9\xbb\xcf\x1f\xcf\x66\x6f\xcf\xde\xbc\x30\xd6\x68\x91\xa2\x2a\xa3\x5e\x81\x0a\x5b\x18\xe5\x62\x86\xed\x42\xbd\x83\x7a\xc5\xde\x51\x3a\xd1\x53\x3a\x30\x30\x74\x5a\xae\xc2\xaa\xf9\x8a\xfd\xc0\xc6\xcd\x26\xcf\xf3\xf4\x2e\x8e\x9e\xa8\x9d\xad\xc9\xad\x63\x8b\x75\x10\x6c\x1d\xb1\x8c\x38\x03\x95\x1d\xfb\x08\x45\xdd\xf2\xc2\xc2\xce\xd0\x4d\x1b\xf4\xb0\x7d\xc5\xd1\xa9\xa3\x85\xd7\x4d\x1b\xf1\xd6\x28\x24\x6c\x66\x9a\x7f\xcb\xf8\x9e\x04\xc4\xf3\xc7\xb9\xdf\x73\x94\xc1\x76\xa7\x0d\xaf\xb1\xdc\x3a\xf6\xbb\x92\x1b\x5e\xee\x02\x2d\xc6\x33\xca\x32\x63\x33\xaf\xa7\xbf\x95\x2d\xef\xa0\x7c\x39\x39\x0f\x03\x9f\x46\x97\x2d\xc2\x80\x7a\x4f\x19\x0d\xb8\xbf\xf8\xdb\x43\x2d\xbe\x04\x2f\x55\x77\x07\x78\x58\x21\x19\xc4\x84\xed\x81\xf3\x21\x86\x51\x32\xe8\x21\xd3\xe1\x38\xfc\x2c\xcc\x77\x20\x63\x90\x7d\x35\xbc\x47\x1e\xd0\x97\xfc\x14\x10\x61\x88\xab\xec\x38\x5b\xd3\x87\xd9\xec\x93\xc8\xf3\x02\xca\x53\x66\x7c\x83\x65\xd3\x3b\x68\xf7\xce\x92\x19\x93\xea\xf1\xc6\x9c\x12\x91\xba\x26\x86\x67\x59\xd3\xd9\x05\x32\xef\x7d\x97\xa7\x38\x78\x89\x4f\xdb\x2f\xf0\xeb\x62\x79\x94\xe6\x53\xa8\x8f\x35\x7e\x40\xc4\xe8\xc2\x51\x51\xdc\x9c\x17\x69\x32\xad\xb9\x7f\x02\x00\x00\xff\xff\xd3\x83\xdd\xc2\x63\x09\x00\x00"

func dataCommonDevVagrantfileTplBytes() ([]byte, error) {
	return bindataRead(
		_dataCommonDevVagrantfileTpl,
		"data/common/dev/Vagrantfile.tpl",
	)
}

func dataCommonDevVagrantfileTpl() (*asset, error) {
	bytes, err := dataCommonDevVagrantfileTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/common/dev/Vagrantfile.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if (err != nil) {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"data/aws-simple/build/build-ruby.sh": dataAwsSimpleBuildBuildRubySh,
	"data/aws-simple/build/template.json.tpl": dataAwsSimpleBuildTemplateJsonTpl,
	"data/aws-simple/deploy/main.tf.tpl": dataAwsSimpleDeployMainTfTpl,
	"data/aws-vpc-public-private/build/build-ruby.sh": dataAwsVpcPublicPrivateBuildBuildRubySh,
	"data/aws-vpc-public-private/build/template.json.tpl": dataAwsVpcPublicPrivateBuildTemplateJsonTpl,
	"data/aws-vpc-public-private/deploy/main.tf.tpl": dataAwsVpcPublicPrivateDeployMainTfTpl,
	"data/common/dev/Vagrantfile.tpl": dataCommonDevVagrantfileTpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"data": &bintree{nil, map[string]*bintree{
		"aws-simple": &bintree{nil, map[string]*bintree{
			"build": &bintree{nil, map[string]*bintree{
				"build-ruby.sh": &bintree{dataAwsSimpleBuildBuildRubySh, map[string]*bintree{
				}},
				"template.json.tpl": &bintree{dataAwsSimpleBuildTemplateJsonTpl, map[string]*bintree{
				}},
			}},
			"deploy": &bintree{nil, map[string]*bintree{
				"main.tf.tpl": &bintree{dataAwsSimpleDeployMainTfTpl, map[string]*bintree{
				}},
			}},
		}},
		"aws-vpc-public-private": &bintree{nil, map[string]*bintree{
			"build": &bintree{nil, map[string]*bintree{
				"build-ruby.sh": &bintree{dataAwsVpcPublicPrivateBuildBuildRubySh, map[string]*bintree{
				}},
				"template.json.tpl": &bintree{dataAwsVpcPublicPrivateBuildTemplateJsonTpl, map[string]*bintree{
				}},
			}},
			"deploy": &bintree{nil, map[string]*bintree{
				"main.tf.tpl": &bintree{dataAwsVpcPublicPrivateDeployMainTfTpl, map[string]*bintree{
				}},
			}},
		}},
		"common": &bintree{nil, map[string]*bintree{
			"dev": &bintree{nil, map[string]*bintree{
				"Vagrantfile.tpl": &bintree{dataCommonDevVagrantfileTpl, map[string]*bintree{
				}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        // File
        if err != nil {
                return RestoreAsset(dir, name)
        }
        // Dir
        for _, child := range children {
                err = RestoreAssets(dir, filepath.Join(name, child))
                if err != nil {
                        return err
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

