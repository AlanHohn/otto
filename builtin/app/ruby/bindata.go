// Code generated by go-bindata.
// sources:
// data/aws-simple/build/build-ruby.sh
// data/aws-simple/build/template.json.tpl
// data/aws-simple/deploy/main.tf.tpl
// data/aws-vpc-public-private/build/build-ruby.sh
// data/aws-vpc-public-private/build/template.json.tpl
// data/aws-vpc-public-private/deploy/main.tf.tpl
// data/common/dev/Vagrantfile.tpl
// DO NOT EDIT!

package rubyapp

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path/filepath"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _dataAwsSimpleBuildBuildRubySh = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x56\x7f\x53\x1b\x39\x12\xfd\x7f\x3e\x45\xaf\xa1\xc2\x5d\x15\x33\x03\xd4\xed\xdd\xae\xbd\x6c\x1d\x10\xd8\x50\x95\xb2\x53\x26\xb9\x1f\x95\xe4\xa8\xf1\x4c\xdb\x56\x18\x4b\x8a\xa4\x31\x18\xc2\x77\xbf\xd7\x1a\xe3\x1f\x21\x9b\xca\x3f\xb6\x46\x52\xb7\x5e\x77\xbf\x7e\xd2\xce\x4f\xf9\x48\xe9\x7c\x54\xf8\x69\x92\x78\x0e\x94\x1a\xd2\xa6\xd1\xcb\x21\x3b\xc7\x77\x2a\x0e\xad\xb2\x3c\x2e\x54\xbd\x9c\x0e\xae\x28\x39\x49\x30\x32\xee\x2f\x7f\xa5\x87\x84\x88\x6a\x53\x16\x35\x79\xd3\xb8\x92\xc7\xaa\xe6\xe3\xdd\xc3\xf5\x74\xad\x34\x6b\x73\xbc\x7b\x24\x53\x5c\x4e\x0d\x75\xce\x87\xc3\xc1\x90\x8a\x40\xbb\x0f\x6b\xa3\xc7\xee\xee\x43\xbb\xf7\xb1\x47\xaf\x0b\x1f\x60\x3f\xf1\xdd\x8e\x98\x4d\x1c\x5b\x32\x21\x18\xca\xe7\x85\xcb\xb1\x90\xfb\x85\xc7\x1f\x7d\xa1\x10\xb1\x69\x3a\x3a\x48\x1e\x13\xa0\xb3\xb4\x17\xc1\x51\x67\xf7\xe1\xf4\xe4\xea\xd5\xf5\xd5\xe0\xdd\xf0\xec\xfc\xb1\x23\x13\xaf\x2f\xfb\xe7\xfd\xc1\x63\x67\x8f\x80\x21\x49\x0c\x4b\x08\x58\xf8\x67\x87\x8e\x7e\x7f\x71\x08\x77\x70\x3a\x61\x47\x69\x68\xcf\xfb\x9d\xf2\x8a\xe7\xb9\x6e\xea\xba\x47\x8f\x89\xa9\xa3\x41\x1b\xc6\x7b\xd9\xf1\x91\x60\x2c\x4b\xc9\x0e\x95\xb5\x69\xaa\xb4\x34\x7a\xac\x26\x54\x16\x9a\x94\x0e\xec\xc6\xec\x98\x6e\x55\x98\x52\x61\x03\x95\x66\x36\x2b\x74\xe5\x49\x8d\x49\x85\x3d\x4f\x3e\xa8\xba\xc6\x4e\xb2\xce\x20\x4e\xef\x71\x08\x75\xfe\x5d\xa8\xa0\xf4\x84\xc6\x08\x64\xcb\x2d\x30\xc1\x85\xad\x39\x70\x96\x65\x9d\xa4\xd1\xb0\xa7\xf7\xef\x29\x1d\x2f\x93\xa3\x46\x79\xb4\xc8\x95\xf6\xa1\xd0\x25\xe7\x23\x63\x42\x3a\x56\x5a\xf9\x29\x57\xf4\xf1\x63\x8f\x2a\x83\xb4\xfa\x9a\x91\xd6\x83\xec\xe7\xa4\x32\x1a\x35\x95\x73\x4f\xaa\x4a\x8e\x15\xa4\xc0\x62\x8d\x57\xc1\x38\xc5\x9e\x80\x99\x1a\x5b\x15\x82\x2a\x1e\x6c\x98\x7c\x53\x19\xd9\x9a\x4e\xc0\x9a\xb8\xc8\xcf\xa6\x23\x08\x04\x98\x2e\xc8\x2e\xc2\xd4\xe8\xd4\x9b\x71\xb8\x2d\x1c\xa7\x08\xd8\xb2\x0b\xe2\xfd\x1b\x73\xa9\x64\xca\xe8\xe8\x08\x65\xd5\x00\xe3\x42\x3a\x0d\xc1\xfa\xf5\x21\x55\x95\xca\x3a\xe8\xd1\x22\x5d\xc4\x73\x6c\xd1\x2d\xa7\x4e\xf9\xb4\xe6\x22\xd7\xa6\xe2\xec\x93\xdf\x02\x26\x76\xcf\x6d\x46\x4e\x4d\xa6\x61\x64\xee\x72\xd7\x8c\x16\xa9\x9e\x6c\xd9\xdc\xf0\x02\xe7\xcd\x29\x95\x91\x67\x37\x07\x4b\xa6\x37\xb6\x9b\xe7\xab\xef\xac\x19\xa1\x1c\x4d\x06\xe4\xdd\x5f\x0e\xb0\xd3\x71\x39\x8f\xdb\xe9\xe7\xbf\x1f\x5e\xfc\x7a\xfa\xeb\xd9\xc9\xd9\xdf\x0e\x4e\x8f\x2e\xfe\x91\x44\x0a\xed\x55\x3c\xa2\x18\x12\xdc\x18\xef\x53\xf4\x64\x21\xe9\xce\xec\xb4\xf1\xca\x68\x5b\x78\xcf\x1a\x84\x14\x9f\x39\x60\xe4\xab\x19\x0a\xae\xf1\x61\x41\xb3\x42\xe9\x3d\x10\x37\x02\x0d\xcc\x94\x73\x28\xe3\xd6\xb6\xb7\x7c\x56\x2b\x1f\xb2\x6a\x6d\x19\x27\x36\x99\xfd\x67\xb5\x04\xa5\xdf\x0e\x5e\x0e\xba\x64\x0b\x57\xcc\xc0\x38\xa7\xee\x99\x24\x39\x84\x68\x05\x1f\x15\x20\xb2\xb6\x4d\x48\xf8\x4e\xea\x43\xc3\x77\xa7\xff\xbd\xfe\xd7\xf9\xf0\xea\x72\xd0\x3f\xee\x1c\x65\x47\x9d\x96\x57\x97\x2d\x0d\x84\x5b\x43\xd8\xef\xd3\x9b\x27\x34\xfb\xd4\x9f\x28\x7d\xb7\x1f\x19\x66\xc2\x14\x91\xd9\xa2\xbc\x29\x26\x40\x2e\x3c\x5b\x3a\x7e\x79\x7e\x7a\x79\xd2\xbf\xbe\x18\x0e\xfa\x6f\xcf\xfb\x2f\x8f\xb5\xd1\xb1\xbb\x8a\x32\xa8\xf9\x77\x69\x37\xba\x77\x34\x81\x96\xcd\xd8\x95\x8d\x53\x90\xa4\x51\xa3\xea\x2a\x65\x01\x10\xe4\xfb\x03\x9a\x01\x6d\x63\x3f\xa7\xc8\x08\xdd\x63\x78\x38\x89\xc3\xef\xd0\x52\x6c\x84\x5a\x9f\x7c\x1c\x4a\x52\x76\x37\x83\x7f\x3e\x13\x3d\x46\x33\x89\x37\xe5\x3b\xb0\xda\xd3\xaa\x2a\xcf\xf2\x74\xda\xe8\xaa\x46\xb5\x36\x9b\x6d\xc2\xb3\x55\x68\xa3\x76\x1d\x34\xd3\x26\x75\x6a\xf9\x5f\x99\xb2\xf5\x74\x2e\xfe\xcb\xd0\x76\xb3\x8d\x5e\xa2\x8b\xd9\x4d\xa5\x60\x64\x29\xf7\x6e\x9e\x8b\x84\xa1\x85\x6c\xbb\x16\x0a\x47\xf7\x77\x10\x92\x30\xb3\xab\xa5\x2c\x4c\xee\x29\x3d\xfb\x6a\xff\xb6\x5a\xd8\x5a\x95\x90\x06\xe4\xa5\xf1\x5f\x41\x46\xaf\xc9\x1c\xe0\x55\xca\x17\xa3\x9a\xab\x54\x62\xbe\x35\xae\xc2\xdc\x84\x4b\xe3\xa9\xd3\xa1\x6d\xc7\x57\x1c\x22\x72\x24\x7d\xa6\xbc\x30\xcd\x6f\x39\x45\xf3\xdc\x6a\x4a\x87\x2b\xb3\xee\xb7\xe0\x9d\x45\xc9\x44\xcd\xe1\x29\x26\x3d\xfa\x10\x56\x4f\x15\x78\xeb\x21\x71\x9f\x1b\xe5\xa0\x89\x22\xb3\x1b\x9d\x25\x89\x0e\x54\x60\xbd\xf0\x46\x0b\x68\x62\x3d\x57\xce\xe8\x19\x28\x43\xb7\x53\x91\x74\x50\x0a\x1a\x0f\x6f\x50\xd6\x8a\xf8\x8e\xcb\x26\xc8\x56\x0f\x2e\xdd\xa0\x0d\x1b\xef\xe2\x1d\x0b\xcb\xfd\xf5\x17\x28\x58\xef\x13\x5a\x34\xa3\x4b\x1c\x51\x7b\xe1\x2c\xfa\x0b\x7e\xeb\x05\x9c\x69\x66\x5c\x0e\x40\x60\x4a\x6c\xa5\x29\x24\x49\x2e\x07\xf4\x05\xb5\x37\x40\x46\x27\xd6\xb2\x8e\x89\x07\x04\x09\x44\xfb\x66\x3c\x56\xa5\x82\x8f\x8c\xba\xe9\x97\xb6\x98\x1e\x71\xa5\x8a\xf6\x0e\x7d\xfe\x3f\x01\x41\x6f\x4e\xde\xbe\xea\x7d\xd0\xf9\x5e\x2b\x11\x31\x23\xed\x6f\x26\xae\xbf\x61\xb5\x43\x03\x24\xb4\x4b\xf2\x2a\x10\x6b\x34\xc4\x46\x9a\xe4\x86\xf3\x10\x9c\x27\xd1\xfa\x8e\x6b\x04\xd6\x47\x60\x12\x97\xe3\x99\x99\x33\x02\x52\x22\xfb\x6d\x5d\x24\xd1\x88\x1a\x7a\x45\x90\x64\x6e\x91\xb8\xd9\xa6\x33\x99\xf7\x29\xc7\x62\x54\x50\xae\x71\xd1\xd4\xa1\xad\x25\x7b\x8e\xaf\x0c\x5c\x52\x28\x8b\xc5\xbd\x25\x45\x42\x6f\x49\xab\x62\xe8\x9f\x12\xb8\x82\x9e\x2e\x15\xa6\xa2\x35\xc6\x7d\x34\x54\x80\xbf\x78\x29\xa3\xee\xaa\x25\x42\x85\xce\x07\x13\x3c\x8b\x06\x86\xa7\x22\xc0\x1d\x82\x0f\x6d\xba\x4c\x83\xd3\xc0\x7c\xbd\x3c\x2f\x4b\xd0\x0b\xf4\xdb\x6f\xfd\x3f\x2e\xfb\xff\x39\x1b\xf4\x2f\x9e\xa9\x73\x1b\x92\xb8\xda\xd2\x65\x99\xd8\xd2\xe5\x1d\xfa\x83\x35\xcb\xb9\x15\x41\x74\xa5\x18\xc9\x6a\xfb\xb5\xc3\xb5\xde\x12\x4b\xee\x7c\xd1\x9b\x7c\x0e\x62\x18\xac\xc8\x78\x79\x85\x5c\xaf\x0c\x72\x79\x90\x85\xd8\x4b\x78\x0b\xf4\x36\x3d\x89\xa4\xaf\x28\xba\x9e\x1f\x3b\xe6\xb8\xd8\x4b\x56\xc1\x24\x3f\x18\xdd\x76\xc1\x56\x62\xf2\x43\x31\x2e\xaf\xd7\xf8\xb8\x24\xb9\xad\x58\xd3\x2f\x07\xbd\xf8\xd9\x46\xbd\xd9\xec\xb9\x6d\x46\xd0\x9f\x76\x79\x0d\x7e\x79\x34\x19\xdd\xc3\xcb\x70\x03\xbf\x48\x43\x2b\xae\x4f\x5a\x2a\xbd\x24\x04\xd9\x12\xca\xb4\x59\xa9\x8b\x74\xc4\xea\xbd\x4c\x69\x5d\x52\xa7\xac\xb6\x41\xd0\x8b\x17\x4b\x45\x5e\xdf\x3d\x50\x7c\x5b\x9b\x45\xd4\x8c\x34\x95\x27\xa0\x50\x05\x91\x73\x6d\x6c\x9c\x45\x8a\xc2\xf2\x86\xc4\xc1\xf2\x0c\xfb\xa9\x93\xfc\x3f\x00\x00\xff\xff\x15\xb3\xa6\x83\x9c\x0b\x00\x00"

func dataAwsSimpleBuildBuildRubyShBytes() ([]byte, error) {
	return bindataRead(
		_dataAwsSimpleBuildBuildRubySh,
		"data/aws-simple/build/build-ruby.sh",
	)
}

func dataAwsSimpleBuildBuildRubySh() (*asset, error) {
	bytes, err := dataAwsSimpleBuildBuildRubyShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/aws-simple/build/build-ruby.sh", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _dataAwsSimpleBuildTemplateJsonTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x54\xcd\x8e\x9b\x30\x18\xbc\xf3\x14\x16\x52\xf6\x14\x20\xed\xae\xaa\xaa\xd7\x3e\xc6\x2a\x62\x0d\x78\x83\x15\xdb\x58\xfe\xec\x54\x59\xe4\x77\xef\x67\xfe\xa9\x36\x24\xdd\x5c\x8c\x3c\xc3\xcc\x78\xf8\x9c\x36\x22\xf8\x8b\x25\x57\xb9\xa6\xe5\x99\x99\xfc\xc2\x0c\xf0\x46\xc5\xbf\x48\x7c\x48\x7f\xa6\x87\x78\x1f\xf5\x9c\x0b\x35\x9c\x16\x82\x01\x42\xfd\x6b\xb8\x49\xff\x40\x4e\xcb\x92\x01\xe4\x67\x76\x45\x44\x39\x21\xf6\x4b\x14\x58\x69\x98\xbd\x85\x1a\x76\xea\xcd\x56\x08\x08\x77\xc2\x3c\xb6\x1e\x80\x6e\xdf\x8f\x41\xb4\x69\x2e\x3c\x64\xc4\xa4\x48\x78\x1d\xde\x6a\x77\xe4\xbd\x31\xa4\xe2\x86\x70\x85\x8f\x4e\x55\xd4\x22\x2b\xc7\x1d\x48\x0b\xc7\x45\x45\x76\x7e\x24\x0f\x2b\xca\xd9\xab\x66\xe1\xb4\x50\x33\x21\xe2\xfd\x0c\x70\x25\xb8\x0a\xd0\x6b\x2c\xcf\x41\x36\xd1\x24\xb3\x52\x67\x8d\xb5\x4d\x36\x1b\x24\x6d\x1b\x9c\x45\xd3\xe8\xf4\x37\xee\x5a\x66\x88\xf7\xf1\x71\x50\xf2\xfb\xdb\x9e\xef\x5c\xb0\xa5\x25\x34\xce\x94\x1d\x82\x9a\xc1\xd2\xfb\x6c\x89\x57\x0c\x2c\x57\x9d\x6b\x20\xfd\x47\x9a\x07\xc2\x6c\x15\x50\x56\x8f\x1e\xdd\x7b\xf2\xf4\x44\x0a\x0a\x35\x49\x33\x49\xb9\x4a\xa1\xfe\xa4\x8b\x1d\x61\xaa\x0a\xdf\x6b\xeb\x93\x6c\xd4\xb3\x23\x38\xa8\x05\x86\x90\xa8\x80\x29\x1c\xe0\x39\xdf\xa6\xc1\x79\xc3\x33\xf7\x1e\x0b\xda\x23\x4d\x26\x54\xeb\xd4\x9e\x3e\xbe\x54\x18\x94\x86\x6b\x1b\xa0\x6e\xdc\x12\xe3\x8a\x6b\x38\xfe\xa8\xd5\xad\xc7\x71\x8e\x3b\xce\x30\xc3\xd3\x85\x52\x54\x76\xda\x21\xcb\x24\x3d\x39\x52\x49\x3f\xb0\x75\x56\xc0\x8c\xad\xae\xdf\xad\x62\xd6\xf7\x74\xbb\x9d\x78\x75\x65\xb7\x14\x67\xe2\x1d\xc5\xe9\x9a\x6f\xa9\xf5\xa4\x7b\xd9\xba\x11\xc8\xa9\xe4\x7d\x1f\x3c\xf9\xfe\xed\xc7\xf3\xa1\x7a\x79\x99\x39\x5c\x81\xa5\x0a\x59\x63\x6d\xe5\x73\x2a\xa8\x39\xb1\x85\x0c\xd4\x79\x70\x1e\xeb\x76\x05\x0e\xaf\x5b\x94\x2a\x79\x3e\x62\x6d\x1b\x9e\x70\xae\xff\xcd\x8e\x2b\x4e\x11\x95\xfa\xb3\xc4\xfd\x7f\xd6\x31\x8a\x7c\xf4\x37\x00\x00\xff\xff\x16\x08\x5f\x5b\x65\x05\x00\x00"

func dataAwsSimpleBuildTemplateJsonTplBytes() ([]byte, error) {
	return bindataRead(
		_dataAwsSimpleBuildTemplateJsonTpl,
		"data/aws-simple/build/template.json.tpl",
	)
}

func dataAwsSimpleBuildTemplateJsonTpl() (*asset, error) {
	bytes, err := dataAwsSimpleBuildTemplateJsonTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/aws-simple/build/template.json.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _dataAwsSimpleDeployMainTfTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x52\xc1\x8e\xdb\x20\x10\xbd\xe7\x2b\x46\x74\x8f\x5d\x27\xed\xb1\x52\xcf\xbd\xb5\x1f\x50\xad\x10\xc6\x24\x45\x8b\x01\xc1\x90\xca\xb2\xfc\xef\x1d\xa0\x16\xc1\xbb\xbd\x36\x39\xf9\xcd\x63\xde\xcc\x9b\xf7\x01\xbe\x29\xab\x82\x40\x35\xc1\xb8\xc0\x0f\x44\xf7\x11\x26\x07\xd6\x21\xa8\x49\x23\xcc\xc2\x26\x61\xcc\x72\x3a\xdd\x45\xd0\x62\x34\x0a\x98\xb6\xd7\x20\xb8\x9e\x18\xac\xdb\x03\x2c\x7e\x47\x2e\xa4\x54\x31\xf2\x57\xb5\xbc\x53\x8c\x4a\x06\x85\xff\x28\x06\x75\xd3\xce\x1e\x0a\x44\xe5\x56\xcc\xaa\xc0\x8f\x0f\x66\x7d\x60\x6a\x1b\x51\x58\xa9\x38\x2e\x3e\xd3\x61\x52\x57\x91\x0c\xc2\x57\x60\xf8\x79\x98\xb5\x0c\x8e\xc1\xe3\x8b\x98\x46\x4b\xd3\xf8\x34\x1a\x2d\x0f\xdd\xee\x5e\x72\xa9\xa7\xf0\x0e\xfc\x77\xed\x93\x0f\xee\xae\x27\x15\xca\xf4\x04\x9d\x00\xda\xf2\x59\xf5\x69\xa5\x87\x43\x6f\xca\xc6\x88\xd6\x6c\xe8\x69\x0d\x2f\xb4\x6a\x08\xe4\x5f\x47\xab\x38\x51\x68\x88\xa0\xa2\x4b\x41\x36\x7f\x53\xd0\xb8\xf0\x5b\x70\xc9\x33\x02\xbd\xaf\x93\x65\x0f\x6b\x9f\x75\xad\x1f\xdb\xf6\x5c\x5b\xee\xc7\x2c\x9a\x75\xc1\xa6\x57\xbf\xa9\x44\x35\x6d\x6f\x24\x17\x4b\x3f\x00\x5a\x1f\x9d\x74\xa6\x8e\xf7\xfc\xa9\x80\xd7\xe0\x66\xee\x5d\xc0\x02\x5e\x0a\x86\x6e\x47\x1a\x96\xad\xe5\xa3\x71\xf2\x35\x12\xf6\x93\x5d\x86\xf2\x3f\x5f\xd8\x0b\xd5\xb7\xac\xa6\xfe\x9b\xd8\x1b\x1b\xf7\x28\x3d\x1a\x48\x81\x83\xf6\x6b\xf7\x98\x75\xf1\xad\x4b\x5f\x2b\x77\x70\xbd\x7d\x0d\x1d\x79\xdc\xf5\xe9\xb2\x58\x88\x7b\xf2\x0f\x82\x3b\x5c\x4f\x92\xcf\xd3\x1f\x9d\x3a\xd7\x2d\x9f\xd6\xb7\x89\x18\x68\x9d\x21\x9f\xf3\x25\x3f\x46\x71\x23\x7f\xe1\x7b\x16\xe9\x82\xc1\xaa\x29\x2e\xa1\x4f\x08\x2c\x05\x53\x3d\xb8\x0b\x93\x0a\xf5\x17\xa2\xff\x72\x3e\x57\x89\x7d\xc7\xd2\xbc\x2e\xc0\x27\x1b\xb7\x73\x0e\xe8\x9f\x00\x00\x00\xff\xff\x5f\x73\x79\x4b\x5f\x04\x00\x00"

func dataAwsSimpleDeployMainTfTplBytes() ([]byte, error) {
	return bindataRead(
		_dataAwsSimpleDeployMainTfTpl,
		"data/aws-simple/deploy/main.tf.tpl",
	)
}

func dataAwsSimpleDeployMainTfTpl() (*asset, error) {
	bytes, err := dataAwsSimpleDeployMainTfTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/aws-simple/deploy/main.tf.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _dataAwsVpcPublicPrivateBuildBuildRubySh = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x56\x7f\x53\x1b\x39\x12\xfd\x7f\x3e\x45\xaf\xa1\xc2\x5d\x15\x33\x03\xd4\xed\xdd\xae\xbd\x6c\x1d\x10\xd8\xa5\x2a\x65\xa7\x4c\x72\x3f\x2a\xc9\x51\xe3\x99\xb6\xad\x30\x96\x14\x49\x63\x30\x84\xef\x7e\xaf\x35\xc6\x3f\x42\x92\xca\x3f\x20\x4b\xea\xd6\xeb\xee\xd7\xaf\x67\xe7\xa7\x7c\xa4\x74\x3e\x2a\xfc\x34\x49\x3c\x07\x4a\x0d\x69\xd3\xe8\xe5\x92\x9d\xe3\x3b\x15\x97\x56\x59\x1e\x17\xaa\x5e\x6e\x07\x57\x94\x9c\x24\x58\x19\xf7\x97\xbf\xd2\x43\x42\x44\xb5\x29\x8b\x9a\xbc\x69\x5c\xc9\x63\x55\xf3\xf1\xee\xe1\x7a\xbb\x56\x9a\xb5\x39\xde\x3d\x92\x2d\x2e\xa7\x86\x3a\xe7\xc3\xe1\x60\x48\x45\xa0\xdd\x87\xb5\xd1\x63\x77\xf7\xa1\xbd\xfb\xd8\xa3\x57\x85\x0f\xb0\x9f\xf8\x6e\x47\xcc\x26\x8e\x2d\x99\x10\x0c\xe5\xf3\xc2\xe5\x38\xc8\xfd\xc2\xe3\x1f\x7d\xa6\x10\xb1\x69\x3a\x3a\x48\x1e\x13\xa0\xb3\xb4\x17\xc1\x51\x67\xf7\xe1\xf4\xe4\xea\xcf\xeb\xab\xc1\xdb\xe1\xd9\xf9\x63\x47\x36\x5e\x5d\xf6\xcf\xfb\x83\xc7\xce\x1e\x01\x43\x92\x18\x96\x10\x70\xf0\xcf\x0e\x1d\xfd\xfe\xe2\x10\xee\xe0\x74\xc2\x8e\xd2\xd0\xbe\xf7\x3b\xe5\x15\xcf\x73\xdd\xd4\x75\x8f\x1e\x13\x53\x47\x83\x36\x8c\x77\x72\xe3\x03\xc1\x58\x8e\x92\x1d\x2a\x6b\xd3\x54\x69\x69\xf4\x58\x4d\xa8\x2c\x34\x29\x1d\xd8\x8d\xd9\x31\xdd\xaa\x30\xa5\xc2\x06\x2a\xcd\x6c\x56\xe8\xca\x93\x1a\x93\x0a\x7b\x9e\x7c\x50\x75\x8d\x9b\x64\x9d\x41\x9c\xde\xe3\x11\xea\xfc\xbb\x50\x41\xe9\x09\x8d\x11\xc8\x96\x5b\x60\x82\x0b\x5b\x73\xe0\x2c\xcb\x3a\x49\xa3\x61\x4f\xef\xde\x51\x3a\x5e\x26\x47\x8d\xf2\x68\x91\x2b\xed\x43\xa1\x4b\xce\x47\xc6\x84\x74\xac\xb4\xf2\x53\xae\xe8\xc3\x87\x1e\x55\x06\x69\xf5\x35\x23\xad\x07\xd9\xcf\x49\x65\x34\x6a\x2a\xef\x9e\x54\x95\x3c\x2b\x48\x81\xc5\x1a\xaf\x82\x71\x8a\x3d\x01\x33\x35\xb6\x2a\x04\x55\x7c\xd8\x30\xf9\xa6\x32\x72\x35\x9d\x80\x35\xf1\x90\x9f\x6d\x47\x10\x08\x30\x5d\x80\x20\xe3\x70\x5b\x38\x4e\x11\xa9\x65\x17\xe0\x36\x95\x74\x18\xbd\xb6\xaa\xaa\x54\x2c\x51\xef\xf6\xe9\x85\x18\x5a\x5b\x74\xcb\xa9\x53\x3e\xad\xb9\xc8\xb5\xa9\x38\xfb\xe8\xb7\x5e\x12\xbb\xe7\x36\x23\xa7\x26\xd3\x30\x32\x77\xb9\x6b\x46\x8b\x54\x4f\xb6\x6c\x6e\x78\x81\xf7\xe6\x94\xca\xca\xb3\x9b\xa3\xec\xd3\x1b\xdb\xcd\xf3\xd5\xef\xac\x19\x21\xbf\x4d\x06\x94\xdd\x5f\x0e\x70\xd3\x71\x39\x8f\xd7\xe9\xe7\xbf\x1f\x5e\xfc\x7a\xfa\xeb\xd9\xc9\xd9\xdf\x0e\x4e\x8f\x2e\xfe\x91\x44\x4e\xec\x55\x3c\xa2\x69\x08\xd6\xc3\x8d\xf1\x3e\x45\x93\x15\x92\xbf\xcc\x4e\x1b\xaf\x8c\xb6\x85\xf7\xac\xc1\x30\xf1\x99\x03\x46\xbe\xda\xa1\xe0\x1a\x1f\x16\x34\x2b\x94\xde\x03\x13\x23\xd0\xc0\x4c\x39\x87\x32\x5e\x6d\x9b\xc5\x67\xb5\xf2\x21\xab\xd6\x96\x71\x63\x93\xaa\xdf\x2a\x0e\x38\xfa\x66\xf0\x72\xd0\x25\x5b\xb8\x62\x06\x0a\x39\x75\xcf\x24\xc9\x21\x44\x2b\xf8\xa8\x00\x33\xb5\x6d\x42\xc2\x77\xd6\xb8\x40\xc3\xb7\xa7\xff\xbd\xfe\xd7\xf9\xf0\xea\x72\xd0\x3f\xee\x1c\x65\x47\x9d\x96\x28\x97\x6d\x5d\x85\x2c\x43\xd8\xef\xd3\xeb\x27\x34\xfb\xd4\x9f\x28\x7d\xb7\x1f\x29\x63\xc2\x14\x91\xd9\xa2\xbc\x29\x26\x40\x2e\xc4\x59\x3a\x7e\x79\x7e\x7a\x79\xd2\xbf\xbe\x18\x0e\xfa\x6f\xce\xfb\x2f\x8f\xb5\xd1\xb1\x5d\x8a\x32\xa8\xf9\x77\x79\x34\xba\x77\x34\x81\x38\xcd\xd8\x95\x8d\x53\xd0\x98\x51\xa3\xea\x2a\x65\x01\x10\xe4\xf7\x7b\xb0\x1b\x7d\x60\x3f\xa5\xc8\x08\xdd\x63\x79\x38\x89\xcb\x6f\x53\x30\xda\xc8\x63\x90\x10\xed\x05\x61\x1a\xeb\x18\xf7\x85\x72\x1f\xdb\xa5\x24\x6b\x77\x33\x29\xcf\x77\xe2\x4b\xd1\x4c\xf2\x90\xf2\x1d\x5c\x7a\x5a\x55\xeb\x59\xfe\x4e\x1b\x5d\xd5\xa8\xe2\x66\x57\x4d\x78\xb6\x0a\x79\xd4\x9e\x83\x7e\xda\xa4\x4e\x2d\xff\x57\xa6\x6c\x3d\x9d\x8b\xff\x32\xb4\x6d\x6b\xa3\x97\xe8\x62\x76\x53\x29\x18\x59\xca\xbd\x9b\xe7\xa2\x55\x68\x2d\xdb\x9e\x85\xc2\xd1\xfd\x1d\x14\x23\xcc\xec\xea\x28\x0b\x93\x7b\x4a\xcf\xbe\xb8\xbf\x2d\x0b\xb6\x56\x25\x34\x00\xf9\x6a\xfc\x17\x90\xd1\x83\xb2\x07\x78\x95\xf2\xc5\xa8\xe6\x2a\x95\x98\x6f\x8d\xab\xb0\x37\xe1\xd2\x78\xea\x74\x68\xdb\xf1\x15\x87\x88\x1c\xc5\x98\x29\x2f\x0c\xf4\x5b\x4e\xd1\x54\xb7\x9a\xd2\xe1\xca\xac\xfb\x35\x78\x67\x51\x1b\xc1\x05\x78\x8a\x49\x8f\x3e\x84\xed\x53\x05\x3e\x7b\x68\xd9\xa7\x46\x39\x88\x9f\xe8\xe9\x46\xc7\x49\xa2\x03\x15\x38\x2f\xbc\xd1\x02\x9a\x58\xcf\x95\x33\x7a\x06\x2a\xd1\xed\x54\xb4\x1b\x54\x83\x98\xc3\x1b\x24\xb4\x22\xbe\xe3\xb2\x09\x72\xd5\x83\x63\x37\x68\xcf\xc6\xbb\x38\x4c\x61\xb9\xbf\xfe\x05\x6a\xd6\xfb\x84\xd6\xcd\xe8\x12\x4f\xd4\x5e\xb8\x8c\xbe\x83\xdf\x7a\x01\x67\x9a\x19\x53\x00\x08\x4c\x89\xab\x34\x85\x54\xc9\x14\x40\xbf\x50\x2b\xf5\x19\x9d\x58\xcb\x3a\x26\x1e\x10\x24\x10\xed\x9b\xf1\x58\x95\x0a\x3e\x32\xea\xa6\x9f\xdb\x62\x7a\xc4\x95\x2a\xda\x3b\xf4\xf9\xff\x04\x04\xbd\x3e\x79\xf3\x67\xef\xbd\xce\xf7\x5a\xe9\x88\x19\x69\xff\x66\xe2\xfa\x2b\x56\x3b\x34\x40\x42\xbb\x24\xe3\x5f\xac\xd1\x28\x1b\x69\x92\x51\xe6\x21\x44\x4f\x62\xf6\x1d\xd7\x08\xac\x8f\xc0\x24\x2e\xc7\x33\x33\x67\x04\x04\xe4\x70\x17\x2f\x49\xa2\x11\x35\x74\x8c\x20\xd5\xdc\x22\x71\xb3\x4d\x67\xb2\xef\x53\x8e\xc5\xa8\xa0\x68\xe3\xa2\xa9\x43\x5b\x4b\xf6\x1c\x3f\x27\x30\x8d\x50\x16\x8b\x01\x25\x45\x42\x6f\x49\x0b\x63\xe9\x9f\x12\xb8\x82\x9e\x2e\x95\xa7\xa2\x35\xc6\x7d\x34\x54\x80\xbf\x38\x7d\x51\x77\xd5\x12\xa1\x82\x22\x80\x09\x9e\x45\x1b\xc3\x53\x11\xe0\x0e\xc1\x87\x36\x5d\xa6\xc1\x6b\x60\xbe\x5e\xbe\x97\x25\xe8\x05\xfa\xed\xb7\xfe\x1f\x97\xfd\xff\x9c\x0d\xfa\x17\xcf\x54\xbb\x0d\x49\x5c\x6d\xe9\xb5\x6c\x6c\xe9\xf5\x0e\xfd\xc1\x9a\xe5\xdd\x8a\x20\xc6\x52\x8c\x64\x75\xfd\xda\x61\x7e\xb7\xc4\x92\xe1\x2e\x7a\x93\xcf\x41\x0c\x83\x13\x59\x2f\x47\xcb\xf5\xca\x20\x97\x2f\xaf\x10\x7b\x09\x43\xbf\xb7\xe9\x49\xa4\x7e\x45\xd1\xf5\xfe\xd8\x31\xc7\xc3\x5e\xb2\x0a\x26\xf9\xc1\xe8\xb6\x0b\xb6\x12\x93\x1f\x8a\x71\x39\x76\xe3\x57\x24\xc9\x14\x63\x4d\xbf\x1c\xf4\xe2\xcf\x36\xea\xcd\x66\xcf\x6d\x33\x82\xfe\xb4\xc7\x6b\xf0\xcb\xa7\xc9\xe8\x1e\x3e\x01\x37\xf0\x8b\x34\xb4\xe2\xfa\xa4\xa5\xd2\x4b\x42\x90\x2d\xa1\x4c\x9b\x95\xba\x48\x47\xac\x3e\x8c\x29\xad\x4b\xea\x94\xd5\x36\x08\x7a\xf1\x62\xa9\xc8\xeb\x99\x04\xc5\xb7\xb5\x59\x44\xcd\x48\x53\xf9\xd6\x13\xaa\x20\x72\xae\x8d\x8d\xbb\x48\x51\x58\x4e\x4e\x3c\x2c\xdf\x5b\x3f\x75\x92\xff\x07\x00\x00\xff\xff\x7e\xbd\xbc\xe2\x85\x0b\x00\x00"

func dataAwsVpcPublicPrivateBuildBuildRubyShBytes() ([]byte, error) {
	return bindataRead(
		_dataAwsVpcPublicPrivateBuildBuildRubySh,
		"data/aws-vpc-public-private/build/build-ruby.sh",
	)
}

func dataAwsVpcPublicPrivateBuildBuildRubySh() (*asset, error) {
	bytes, err := dataAwsVpcPublicPrivateBuildBuildRubyShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/aws-vpc-public-private/build/build-ruby.sh", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _dataAwsVpcPublicPrivateBuildTemplateJsonTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x54\xcd\x8e\x9b\x30\x18\xbc\xf3\x14\x16\x52\xf6\x14\x20\xed\xae\xaa\xaa\xd7\x3e\xc6\x2a\x62\x0d\x78\x83\x15\xdb\x58\xfe\xec\x54\x59\xe4\x77\xef\x67\xfe\xa9\x36\x24\xdd\x5c\x8c\x3c\xc3\xcc\x78\xf8\x9c\x36\x22\xf8\x8b\x25\x57\xb9\xa6\xe5\x99\x99\xfc\xc2\x0c\xf0\x46\xc5\xbf\x48\x7c\x48\x7f\xa6\x87\x78\x1f\xf5\x9c\x0b\x35\x9c\x16\x82\x01\x42\xfd\x6b\xb8\x49\xff\x40\x4e\xcb\x92\x01\xe4\x67\x76\x45\x44\x39\x21\xf6\x4b\x14\x58\x69\x98\xbd\x85\x1a\x76\xea\xcd\x56\x08\x08\x77\xc2\x3c\xb6\x1e\x80\x6e\xdf\x8f\x41\xb4\x69\x2e\x3c\x64\xc4\xa4\x48\x78\x1d\xde\x6a\x77\xe4\xbd\x31\xa4\xe2\x86\x70\x85\x8f\x4e\x55\xd4\x22\x2b\xc7\x1d\x48\x0b\xc7\x45\x45\x76\x7e\x24\x0f\x2b\xca\xd9\xab\x66\xe1\xb4\x50\x33\x21\xe2\xfd\x0c\x70\x25\xb8\x0a\xd0\x6b\x2c\xcf\x41\x36\xd1\x24\xb3\x52\x67\x8d\xb5\x4d\x36\x1b\x24\x6d\x1b\x9c\x45\xd3\xe8\xf4\x37\xee\x5a\x66\x88\xf7\xf1\x71\x50\xf2\xfb\xdb\x9e\xef\x5c\xb0\xa5\x25\x34\xce\x94\x1d\x82\x9a\xc1\xd2\xfb\x6c\x89\x57\x0c\x2c\x57\x9d\x6b\x20\xfd\x47\x9a\x07\xc2\x6c\x15\x50\x56\x8f\x1e\xdd\x7b\xf2\xf4\x44\x0a\x0a\x35\x49\x33\x49\xb9\x4a\xa1\xfe\xa4\x8b\x1d\x61\xaa\x0a\xdf\x6b\xeb\x93\x6c\xd4\xb3\x23\x38\xa8\x05\x86\x90\xa8\x80\x29\x1c\xe0\x39\xdf\xa6\xc1\x79\xc3\x33\xf7\x1e\x0b\xda\x23\x4d\x26\x54\xeb\xd4\x9e\x3e\xbe\x54\x18\x94\x86\x6b\x1b\xa0\x6e\xdc\x12\xe3\x8a\x6b\x38\xfe\xa8\xd5\xad\xc7\x71\x8e\x3b\xce\x30\xc3\xd3\x85\x52\x54\x76\xda\x21\xcb\x24\x3d\x39\x52\x49\x3f\xb0\x75\x56\xc0\x8c\xad\xae\xdf\xad\x62\xd6\xf7\x74\xbb\x9d\x78\x75\x65\xb7\x14\x67\xe2\x1d\xc5\xe9\x9a\x6f\xa9\xf5\xa4\x7b\xd9\xba\x11\xc8\xa9\xe4\x7d\x1f\x3c\xf9\xfe\xed\xc7\xf3\xa1\x7a\x79\x99\x39\x5c\x81\xa5\x0a\x59\x63\x6d\xe5\x73\x2a\xa8\x39\xb1\x85\x0c\xd4\x79\x70\x1e\xeb\x76\x05\x0e\xaf\x5b\x94\x2a\x79\x3e\x62\x6d\x1b\x9e\x70\xae\xff\xcd\x8e\x2b\x4e\x11\x95\xfa\xb3\xc4\xfd\x7f\xd6\x31\x8a\x7c\xf4\x37\x00\x00\xff\xff\x16\x08\x5f\x5b\x65\x05\x00\x00"

func dataAwsVpcPublicPrivateBuildTemplateJsonTplBytes() ([]byte, error) {
	return bindataRead(
		_dataAwsVpcPublicPrivateBuildTemplateJsonTpl,
		"data/aws-vpc-public-private/build/template.json.tpl",
	)
}

func dataAwsVpcPublicPrivateBuildTemplateJsonTpl() (*asset, error) {
	bytes, err := dataAwsVpcPublicPrivateBuildTemplateJsonTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/aws-vpc-public-private/build/template.json.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _dataAwsVpcPublicPrivateDeployMainTfTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x55\x4d\x6f\x13\x31\x10\xbd\xe7\x57\x8c\x5c\x4e\x88\x6e\x0a\xa7\xaa\x12\xb7\x4a\xdc\xe8\x85\x1b\x42\x2b\xaf\xd7\x09\x56\x1d\xdb\xf2\x47\xd0\x2a\xda\xff\xce\xd8\x8e\xe3\xfd\x48\x5b\x10\x12\xdb\x4b\xfb\xde\x8c\x67\xe6\x3d\x7b\x7a\x03\x5f\xb8\xe2\x96\x7a\xde\x43\x37\xc0\x93\xf7\xfa\x03\xf4\x1a\x94\xf6\xc0\x7b\xe1\xe1\x40\x55\xa0\x52\x0e\x9b\xcd\x91\x5a\x41\x3b\xc9\x81\x08\xb5\xb3\xb4\x15\x3d\x81\xd3\x38\x81\xe9\x2f\xd7\x52\xc6\xb8\x73\xed\x33\x1f\xae\x90\x8e\x33\xcb\xfd\x0b\xa4\xe5\x7b\xa1\xd5\x82\xc0\xd0\x56\xd1\x03\x4f\xf0\x34\xe1\x20\x16\x91\x42\x39\x4f\x15\xe3\xad\x1f\x4c\x0c\x87\x9e\xef\x68\x90\x1e\x3e\x03\xf1\x9f\x9a\x83\x60\x56\x13\x98\x66\x18\x2b\x8e\x38\x77\xeb\x42\xa7\xb0\xab\xd5\x38\x26\x74\x52\xb0\x17\xe9\xa3\x61\x2d\x13\xbd\xbd\x02\x9f\x63\x37\xc6\xea\xa3\xe8\xb9\x4d\x03\x22\xb4\x01\xa8\xfa\xc4\xc6\xde\x9d\x30\xb1\x99\xeb\x36\x12\x0c\xab\x4a\xcd\xc3\x2a\x9e\xc2\xb2\x66\x10\xbf\x59\x58\xc6\x31\x04\x9b\xb0\xdc\xe9\x60\x59\xb5\x20\x58\xe1\x87\x76\x6f\x75\x30\x04\x08\x97\x5d\xee\x2c\xca\x1c\x4f\x39\x9d\xf2\xaf\xe3\x78\x8b\xdc\x6d\x3e\xb4\x38\x9e\xaa\xe6\x11\x6b\xc5\xfc\x37\x52\xc8\xf1\x3d\xd6\x73\xe9\x40\x00\x9c\xdf\x6b\xa6\x65\xee\xef\xf6\x63\x02\x77\x56\x1f\x5a\xa3\xad\x4f\xe0\x5d\xc2\xbc\x2e\x48\xc5\xa2\xb6\x6d\x27\x35\x7b\x76\x88\x7d\x27\x77\x4d\xfa\xd9\xde\x91\x1f\xc8\x8f\xb1\x98\x50\x2f\x57\x23\x9e\x19\x72\xa5\xe0\xfd\xb5\x8a\xf7\x7f\x56\xf2\x6d\x35\xa9\x31\x13\x35\x61\xa1\xe7\x5f\x6a\xf9\xda\x78\xff\x28\x66\x2d\x16\x99\xf1\x3c\xdf\xff\xb4\x6f\xa5\x65\xba\x88\x2b\x01\x2f\xdf\x9b\x4a\xe6\x77\xea\x26\x09\x65\xcc\xe5\x43\xce\xe3\xce\xbd\x2b\xb2\xac\x5d\x6d\xb0\xb1\xa6\x24\x95\x2d\xe3\x66\x45\x62\x52\x61\x1a\x9c\xa0\x79\x7f\x4e\xc0\x8c\x1b\xf8\xf6\xf4\xf8\xf4\x80\x7b\xf4\x99\x83\x14\xce\x73\x85\xbe\x42\xd4\xcb\x01\xd3\x6a\x27\xf6\xc1\xc6\xd5\x81\xb1\x99\xc6\x7d\x91\xf5\x97\x5d\x95\x15\xe6\x37\x35\x52\x13\x77\x16\x37\xfe\xb2\x0b\xd7\x57\xbc\x52\x25\xbd\x26\x26\x53\x6e\xe0\x91\x1b\xa9\x07\xa0\xa8\x90\x07\xbd\xab\x33\x2f\x0c\x2b\xf8\xd4\x35\xdc\xcb\x73\xcf\xce\x3b\xe9\x20\x92\x47\xb3\x25\x5d\xe9\x19\x3c\x31\x33\xbe\x8c\xd9\x39\xab\x95\x9d\x82\xcb\x3f\x89\x45\xd1\x02\xe7\xc7\x14\xef\xfa\xdc\x58\x4c\x7f\xc5\xf5\x68\xe3\xc5\x44\x4f\xf7\xe5\x51\x7c\x5d\xad\xc9\x8b\x74\x3a\x78\x13\x3c\x90\x60\x65\x56\xe3\x48\x65\x48\xc1\x3f\xbd\x37\x0f\xdb\x6d\x2e\x14\xef\x53\x3c\xbd\x57\x2e\xf7\xb7\x8d\x7b\xfa\x77\x00\x00\x00\xff\xff\x11\x23\xa2\xbf\x89\x07\x00\x00"

func dataAwsVpcPublicPrivateDeployMainTfTplBytes() ([]byte, error) {
	return bindataRead(
		_dataAwsVpcPublicPrivateDeployMainTfTpl,
		"data/aws-vpc-public-private/deploy/main.tf.tpl",
	)
}

func dataAwsVpcPublicPrivateDeployMainTfTpl() (*asset, error) {
	bytes, err := dataAwsVpcPublicPrivateDeployMainTfTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/aws-vpc-public-private/deploy/main.tf.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _dataCommonDevVagrantfileTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x56\x6d\x6f\xdb\x38\x12\xfe\xae\x5f\x31\x55\xdc\x37\x20\x92\xae\xc1\xe1\x3e\xb8\x4d\xd0\xbc\xb5\x09\xd0\x8b\x0b\x3b\x2d\x70\xb8\x5d\xb8\xb4\x34\x96\xd8\xca\x24\x97\xa4\x9c\xb8\x8e\xff\xfb\xce\x50\x52\xec\x6c\xba\xdd\x02\x71\x4c\x0f\x39\x6f\xcf\xcc\x3c\xe4\x1e\xbc\x47\x85\x56\x78\x2c\x60\xb6\x82\x91\xf7\x7a\x1f\x0a\x0d\x4a\x7b\xc0\x42\xfa\x27\xd1\x5e\xb4\x07\xd7\x95\x74\x40\x7f\xbe\x42\xf8\x2c\x4a\x2b\x94\x9f\xcb\x1a\xa1\xfc\xab\x2e\xcc\xb5\x0d\xa7\x0a\x5c\x62\xad\xcd\x02\x95\x07\x3d\x27\x13\x9e\x4d\x08\x63\x6a\x99\x0b\x2f\xb5\xca\x1c\xda\xa5\xcc\x31\x85\x4b\x0f\xae\xd2\x4d\x5d\x04\xa7\x33\x84\x4a\xa8\x22\x61\xe7\x58\xa4\x70\xad\x61\xa1\x0b\x39\x5f\xb1\x59\xb2\xb3\xe3\x7e\x1f\x1a\x87\xc1\xdb\xb1\x31\x2c\x48\xa3\xa8\xdb\x4e\x73\xad\xe6\xb2\x6c\x2c\xbe\x88\x0f\xe2\x97\x9c\xd1\x5d\x2b\xba\x8b\x00\xda\x55\xba\x5c\xa4\x33\x7d\x0b\x87\x10\x57\xc2\x55\x32\xd7\xd6\x64\xc6\x62\x2e\x1d\xfe\xe7\xdf\x71\x44\x07\xf7\xe0\x42\x3b\x4a\x40\xd5\x2b\x50\xe8\x6f\xb4\xfd\xf6\x40\xbd\x93\x41\x6c\xac\x5c\x12\x0e\xd3\x4e\x10\xef\x83\x34\x43\x88\xd7\x6b\x06\x62\x2a\xcd\x54\x14\x85\x45\xe7\x60\xb3\xe9\x0c\x4f\xd0\x37\x06\x04\xb8\x95\xca\x09\xbf\xb9\xae\x0b\xb4\x30\xb7\x7a\x01\xba\xb1\xc0\x56\xa4\x2a\xa1\x90\x14\x90\xd7\x96\xd2\xd7\x90\x2d\xdb\xec\x1e\xc4\xd0\x1a\x98\x76\x06\xd8\xa5\x11\xbe\x4a\x7b\x03\xe4\x70\x1f\xe2\x5e\x33\xde\x27\x5d\x00\x7d\x43\x75\xa3\xf8\xee\xa5\x50\x5a\xdd\x98\x1d\x49\x1b\xe4\xb9\x12\x33\x2a\xf3\x64\x72\x01\xa2\xe4\x52\x52\x79\x6f\x84\x2d\xd8\xb0\xd3\x54\x7e\xef\x79\xd9\x65\x4f\xb9\x1a\x54\x05\xaa\x5c\xa2\x0b\x19\xb8\x6d\xa4\xce\x55\x69\xa7\x3d\x6d\x6d\x1d\x82\xb7\x0d\xb6\x8e\xde\xe9\x46\x15\xa1\x2f\xa0\xaf\x5c\xfb\xeb\x85\x9c\x83\x50\xab\x97\x74\x6a\xfd\x34\x74\x17\x21\x02\x52\xd1\xb2\xd7\x98\x92\xc4\xa5\x84\x33\x3c\xdd\xd0\x31\xde\xa7\x92\x66\x9a\xda\x31\xdb\x9e\x4a\x08\x18\x52\xaf\xb5\x36\xe9\x29\x49\x3d\x81\xc5\xc5\xf8\x39\x94\x6c\x2c\x20\x48\x8b\x07\x47\x8d\xd5\x4b\xe9\x38\xc2\xd8\x55\x58\xd7\x5c\x71\x55\x4b\x85\x84\x61\x5e\xc0\xde\x9a\x14\x36\xf0\xec\x19\xcc\xa8\xb5\xba\x9f\xd9\x42\x48\x95\xba\x2a\x6e\x93\x21\xa8\x38\x1f\x0a\x3a\x40\xf0\x41\x8b\x02\x44\x5d\x87\xf2\xcf\xad\x28\x79\x76\x1c\x54\x68\x31\xe4\x4d\x28\x3c\x00\x38\xdd\x42\xd2\x9f\x66\x5c\xb8\xdf\xb6\xda\x01\x11\xce\xbc\x93\xdc\x59\x24\x2f\x9b\xcd\x0f\x23\xb8\x54\xce\x73\x00\xe3\x86\xa6\x79\xd6\x48\x9a\x48\x54\x4b\x69\xb5\x62\xd5\x5f\x4d\x7f\xe0\x72\x2b\x8d\x9f\x5a\xb2\x12\x91\x87\x28\xda\x95\x50\x69\xde\xbc\x99\x9c\x8e\x2f\x3f\x5e\x47\x0e\x3d\x24\x4c\x35\x8d\xea\x96\x68\x2d\xde\xca\xb0\x34\xd2\xe0\x5c\xc8\xba\x13\x7b\x2b\x72\xea\x15\x5a\x69\xfb\xe2\x25\xac\xb9\x8d\x6b\x9d\x8b\x9a\xfa\xb0\xb1\x39\xf2\xf8\x1f\x0e\x5e\x6d\xc5\x1c\x8c\xd2\x87\x83\x03\x16\x61\x5e\x69\x88\xcf\xc7\xe3\xd1\x18\x84\x87\xc1\x7a\xab\xb4\x19\x0e\xd6\xed\xd9\xcd\x6b\xf8\x20\x68\xda\x6b\x5d\xba\x21\xd7\x88\x86\x02\x0d\x70\x1f\xf1\xe4\xd9\x8c\x36\x32\xb7\x72\xf4\x05\x77\xe0\x43\x6c\x0a\x0e\xfe\x15\x6d\x22\x8a\xce\xc0\xf3\x10\x1c\xc4\x83\xf5\xc9\xf1\xe4\x62\x3a\x19\x7d\x1a\x9f\x9e\x6f\x62\x16\x7c\xb8\xbc\x3a\xbf\x1a\x6d\xe2\xe7\x40\x31\x44\xc4\x62\x6c\x34\xc1\x5b\xcc\x87\xc0\xff\x1b\x1a\x9e\x5c\x2f\x16\x44\x7c\x70\x23\x7d\x45\x3d\xe0\x4d\x13\x42\x29\x99\x5c\x69\xc9\xdc\x58\x48\x67\x6a\xb1\xc2\x22\xd2\xc8\x20\xc0\xe0\x2d\x1c\x1c\x3d\x7b\x45\xe1\x84\x93\x16\x12\xdf\xc6\x7b\x04\x19\x35\x42\xa6\x9a\xba\x7e\x0d\x9b\x7b\x8f\x74\x6a\xd8\xdb\x16\x34\xb6\x84\xc0\x2d\xd9\x5f\x10\x33\xd1\x4c\x46\xba\x0e\x56\x5b\xb4\xfe\xcf\x1a\xbf\x93\x8b\xb8\xb3\xf0\x5f\xf1\x0d\x81\x8a\x43\x83\xef\x2b\x42\xf1\x4b\xc7\x15\x40\xa3\xfd\x05\x4a\x4d\x33\xdf\xb2\x55\x1d\xc8\x8a\x79\x99\x28\x95\x05\x61\x7a\x5a\xab\x34\x1b\xf7\x5c\x04\x47\x14\x66\xa5\x17\xd8\x4b\xb2\x94\xa7\xc5\xe6\xec\xed\xb4\xa3\x01\xe6\x17\xe6\x9f\xd0\xe7\x54\x1e\x4a\x92\xb2\x90\x2a\x22\x62\x78\xd2\x56\x28\xfe\xe4\xf0\xec\x6a\x42\x10\xc5\x90\xa1\xcf\x33\x0a\x88\x3f\xc5\xb4\x6d\x58\x38\xda\x01\x83\xc2\x52\x51\xdf\x11\x3b\x8a\x77\xe0\x1a\xba\x25\x3c\x22\x24\xe2\x9f\xcc\x90\x01\x8d\xad\x42\x77\x8d\x31\x08\x40\x0c\xef\x85\xf5\xd1\x5c\x52\xa7\xde\x1a\x6d\x3d\x9c\x9d\x9f\x5c\x1e\x5f\x4d\xdf\x8d\x47\x57\xd7\xe7\x57\x67\x87\x4a\x2b\xc9\xdc\x23\x72\x2f\x97\xd4\xd0\xba\x86\xf8\xb8\x08\x84\x2a\x8c\x67\x0b\x46\x3b\x49\x84\xcf\x14\xca\xed\xd0\x18\xe6\x2f\x55\xa6\x69\x1a\x47\xbd\x53\x3a\x9a\x10\xf9\xb6\x9b\xf8\x48\x2c\xbb\x41\x4e\x56\x60\x56\xbe\x22\xf2\x73\x7a\xee\x89\x7a\x31\xa1\xc1\x35\x68\x3d\x5b\xff\x81\x2c\xe1\x26\xa4\xa1\x66\x43\xd4\xd3\xca\x71\x0e\x49\xe5\xbd\x71\x5b\x27\x45\x91\xf0\x3e\x21\xdf\x46\xba\x0a\x7e\x8c\x18\xe6\x95\x95\x2e\xa9\x51\x64\x4a\x17\x98\x7e\x75\x0f\x02\x63\xbd\xc7\x3a\x33\x2b\xcb\xca\xd3\x35\x9c\x31\x3b\x24\xaa\xfc\xbb\x1c\xf9\x15\x32\x3a\x1b\x0d\xe9\x76\xb3\x62\x81\x04\xa1\xfc\x8e\x10\x28\x65\x89\x36\x50\x91\xa0\x37\x8a\xa2\xd6\xee\xb1\x1f\x7f\x3a\xf9\xdf\xf4\xf3\xf9\x78\x72\x39\xba\x3a\xec\xef\x62\xd6\x98\xf6\x1a\xe1\x36\xe6\x12\x74\xd4\xc7\x65\x08\xec\x37\x58\xef\x2a\x6f\x42\x25\x5c\x63\xd8\x6c\xb8\xf0\x44\xfe\x8d\x06\xc6\x85\xa2\xfc\x5a\xa5\x7f\x52\xa3\xd9\x77\x0b\x25\x0d\xd6\x02\x6d\x4e\x0d\x4f\xe4\x15\xc8\x37\xa1\xa9\x24\xde\xe5\xdf\xbf\x51\xc3\xd5\x72\x66\xfe\x48\xf8\x9a\xfb\x4e\xcb\x57\x65\x58\xfe\xa4\x86\xac\xc3\x75\xf8\xea\xc2\x92\xf3\x1e\xec\x26\xf5\x58\xc2\x16\x1f\xc1\x71\x42\x17\x68\x8d\xb6\x6f\xbf\x12\x17\xf7\xa1\xcf\xda\x2d\x48\x12\xa5\x13\x2b\xbb\xef\x42\xe7\xad\x91\xdd\x09\x7e\x4f\xe9\x11\x27\xf0\x7b\x8d\x87\x99\x2d\xf0\x45\xa4\xe7\x70\x71\x7d\xfd\x91\x29\xe5\x86\xd8\x42\xa8\xf6\x99\x91\x74\x0f\x85\xfb\x87\x05\xf7\x0d\x88\x86\x9e\x35\x7d\x18\x64\xaf\x9b\xca\x24\x29\x6b\x3d\x23\x90\x1a\x5b\xa7\x31\x6d\xbc\xa5\x4f\xd5\xcc\xe8\x09\xb8\x18\xc6\x69\xe7\x6a\x34\xa7\x57\x1e\xf7\xf1\x30\xcb\xb6\xfb\x59\x1c\x75\x77\xd1\x9f\x01\x00\x00\xff\xff\xc2\x5f\x01\xba\x08\x0b\x00\x00"

func dataCommonDevVagrantfileTplBytes() ([]byte, error) {
	return bindataRead(
		_dataCommonDevVagrantfileTpl,
		"data/common/dev/Vagrantfile.tpl",
	)
}

func dataCommonDevVagrantfileTpl() (*asset, error) {
	bytes, err := dataCommonDevVagrantfileTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/common/dev/Vagrantfile.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if (err != nil) {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"data/aws-simple/build/build-ruby.sh": dataAwsSimpleBuildBuildRubySh,
	"data/aws-simple/build/template.json.tpl": dataAwsSimpleBuildTemplateJsonTpl,
	"data/aws-simple/deploy/main.tf.tpl": dataAwsSimpleDeployMainTfTpl,
	"data/aws-vpc-public-private/build/build-ruby.sh": dataAwsVpcPublicPrivateBuildBuildRubySh,
	"data/aws-vpc-public-private/build/template.json.tpl": dataAwsVpcPublicPrivateBuildTemplateJsonTpl,
	"data/aws-vpc-public-private/deploy/main.tf.tpl": dataAwsVpcPublicPrivateDeployMainTfTpl,
	"data/common/dev/Vagrantfile.tpl": dataCommonDevVagrantfileTpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"data": &bintree{nil, map[string]*bintree{
		"aws-simple": &bintree{nil, map[string]*bintree{
			"build": &bintree{nil, map[string]*bintree{
				"build-ruby.sh": &bintree{dataAwsSimpleBuildBuildRubySh, map[string]*bintree{
				}},
				"template.json.tpl": &bintree{dataAwsSimpleBuildTemplateJsonTpl, map[string]*bintree{
				}},
			}},
			"deploy": &bintree{nil, map[string]*bintree{
				"main.tf.tpl": &bintree{dataAwsSimpleDeployMainTfTpl, map[string]*bintree{
				}},
			}},
		}},
		"aws-vpc-public-private": &bintree{nil, map[string]*bintree{
			"build": &bintree{nil, map[string]*bintree{
				"build-ruby.sh": &bintree{dataAwsVpcPublicPrivateBuildBuildRubySh, map[string]*bintree{
				}},
				"template.json.tpl": &bintree{dataAwsVpcPublicPrivateBuildTemplateJsonTpl, map[string]*bintree{
				}},
			}},
			"deploy": &bintree{nil, map[string]*bintree{
				"main.tf.tpl": &bintree{dataAwsVpcPublicPrivateDeployMainTfTpl, map[string]*bintree{
				}},
			}},
		}},
		"common": &bintree{nil, map[string]*bintree{
			"dev": &bintree{nil, map[string]*bintree{
				"Vagrantfile.tpl": &bintree{dataCommonDevVagrantfileTpl, map[string]*bintree{
				}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        // File
        if err != nil {
                return RestoreAsset(dir, name)
        }
        // Dir
        for _, child := range children {
                err = RestoreAssets(dir, filepath.Join(name, child))
                if err != nil {
                        return err
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

