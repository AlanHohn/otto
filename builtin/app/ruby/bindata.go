// Code generated by go-bindata.
// sources:
// data/aws-simple/build/build-ruby.sh.tpl
// data/aws-simple/build/template.json.tpl
// data/aws-simple/deploy/main.tf.tpl
// data/aws-vpc-public-private/build/build-ruby.sh
// data/aws-vpc-public-private/build/template.json.tpl
// data/aws-vpc-public-private/deploy/main.tf.tpl
// data/common/dev/Vagrantfile.tpl
// DO NOT EDIT!

package rubyapp

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path/filepath"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _dataAwsSimpleBuildBuildRubyShTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x56\x7f\x53\x1b\x39\x12\xfd\x7f\x3e\x45\xaf\xa1\xc2\x5d\x15\x9a\x01\xea\xf6\x6e\xd7\x5e\xb6\x0e\x58\x48\xa8\x4a\x99\x94\x49\xee\x47\x25\x39\x6a\x3c\xd3\xb6\x15\xc6\xd2\x44\xd2\x18\x0c\xf1\x77\xbf\xd7\x1a\xe3\x1f\x21\x9b\xca\x3f\x20\x4b\xea\xee\xd7\xdd\xaf\x9f\x66\xe7\xa7\x6c\xa8\x4d\x36\xcc\xfd\x24\x49\x3c\x07\x52\x96\x8c\x6d\xcc\x72\xc9\xce\xf1\xbd\x8e\xcb\x5a\xd7\x3c\xca\x75\xb5\xdc\x0e\x2e\x2f\x38\x49\xb0\xb2\xee\x2f\x7f\xa5\xc7\x84\x88\x2a\x5b\xe4\x15\x79\xdb\xb8\x82\x47\xba\xe2\xe3\xdd\xc3\xf5\x76\xa5\x0d\x1b\x7b\xbc\x7b\x24\x5b\x5c\x4c\x2c\x75\xce\x07\x83\xab\x01\xe5\x81\x76\x1f\xd7\x46\x8b\xee\xee\x63\x7b\x77\xd1\xa3\xd7\xb9\x0f\xb0\x1f\xfb\x6e\x47\xcc\xc6\x8e\x6b\xb2\x21\x58\xca\x66\xb9\xcb\x70\x90\xf9\xb9\xc7\x3f\xfa\x42\x21\x62\x33\x74\x74\x90\x2c\x12\xa0\xab\x69\x2f\x82\xa3\xce\xee\xe3\xe9\xc9\xf5\xab\x9b\xeb\xab\x77\x83\xb3\xf3\x45\x47\x36\x5e\x5f\xf6\xcf\xfb\x57\x8b\xce\x1e\x01\x43\x92\x58\x96\x14\x70\xf0\xcf\x0e\x1d\xfd\xfe\xe2\x10\xee\xe0\x74\xcc\x8e\x54\x68\xe3\xfd\x4e\x59\xc9\xb3\xcc\x34\x55\xd5\xa3\x45\x62\xab\x68\xd0\xa6\xf1\x5e\x6e\x7c\x24\x18\xcb\x51\xb2\x43\x45\x65\x9b\x52\x15\xd6\x8c\xf4\x98\x8a\xdc\x90\x36\x81\xdd\x88\x1d\xd3\x9d\x0e\x13\xca\xeb\x40\x85\x9d\x4e\x73\x53\x7a\xd2\x23\xd2\x61\xcf\x93\x0f\xba\xaa\x70\x93\x6a\x67\x91\xa7\xf7\x08\x42\x9d\x7f\xe7\x3a\x68\x33\xa6\x11\x12\xd9\x72\x0b\x4c\x70\x51\x57\x1c\x38\x4d\xd3\x4e\xd2\x18\xd8\xd3\xfb\xf7\xa4\x46\xcb\xe2\xe8\x61\x16\x2d\x32\x6d\x7c\xc8\x4d\xc1\xd9\xd0\xda\xa0\x46\xda\x68\x3f\xe1\x92\x3e\x7e\xec\x51\x69\x51\x56\x5f\x31\xca\x7a\x90\xfe\x9c\x94\xd6\xa0\xa7\x12\xf7\xa4\x2c\x25\xac\x20\x45\xcd\xad\xd7\xc1\x3a\xcd\x9e\x00\x99\x9a\xba\xcc\x05\x54\x8c\x6b\x99\x7c\x53\x5a\xb9\xa9\xc6\x20\x4d\x3c\xe4\x67\xdb\x11\x03\xf2\x53\x73\xaa\xe7\x61\x62\x8d\xf2\x76\x14\xee\x72\xc7\x0a\xf9\xd6\xec\x82\x78\xff\xc6\x9e\x92\x42\x59\x13\x1d\xa1\xab\xc6\xd7\xd6\x05\x35\x09\xa1\xf6\xeb\x20\x65\xa9\xe4\x7c\x85\x74\x1e\xe3\xd4\x79\xb7\x98\x38\xed\x55\xc5\x79\x66\x6c\xc9\xe9\x27\xbf\x05\x4c\xec\x9e\xdb\x0c\x9d\x1e\x4f\xc2\xd0\xde\x67\xae\x19\xce\x95\x19\x6f\xd9\xdc\xf2\x1c\xf1\x66\xa4\x64\xe5\xd9\xcd\x40\x92\xc9\x6d\xdd\xcd\xb2\xd5\xef\xb4\x19\xa2\x1b\x4d\x0a\xe4\xdd\x5f\x0e\x70\xd3\x71\x31\x8b\xd7\xe9\xe7\xbf\x1f\x5e\xfc\x7a\xfa\xeb\xd9\xc9\xd9\xdf\x0e\x4e\x8f\x2e\xfe\x91\x44\x06\xed\x95\x3c\xa4\x98\x12\xdc\x58\xef\x15\x46\x32\x97\x72\xa7\xf5\xa4\xf1\xda\x9a\x3a\xf7\x9e\x0d\xf8\x28\x3e\x33\xc0\xc8\x56\x3b\x14\x5c\xe3\xc3\x9c\xa6\xb9\x36\x7b\xe0\x6d\x04\x1a\x98\x29\xe3\x50\xc4\xab\xed\x68\xf9\xb4\xd2\x3e\xa4\xe5\xda\x32\x6e\x6c\x12\xfb\xcf\x7a\x99\xf0\xbd\x14\x9d\x06\xef\x4e\xff\x7b\xf3\xaf\xf3\xc1\xf5\xe5\x55\xff\xb8\xf3\xf8\x48\x52\x9f\x1b\x24\x2c\x10\x69\xb1\xe8\xb4\xd4\xb9\x6c\x5b\x2d\xf4\x19\xe0\xc2\x3e\xbd\x79\x8a\xb8\x4f\xfd\xb1\x36\xf7\xfb\x91\x45\x36\x4c\x80\xbe\xce\x8b\xdb\x7c\x0c\x74\xc2\xa5\x65\x9c\x3f\xce\x4f\x2f\x4f\xfa\x37\x17\x83\xab\xfe\xdb\xf3\xfe\x1f\xc7\xc6\x9a\x38\x40\x79\x11\xf4\xec\xbb\xd4\x1a\x3e\x38\x1a\x43\xae\xa6\xec\x8a\xc6\x69\xa8\xce\xb0\xd1\x55\xa9\x58\x00\x04\xf9\xfd\x01\x7c\xc7\x64\xd4\x9f\x15\xb2\xa6\x07\x2c\x0f\xc7\x71\xf9\x1d\xea\x89\x8d\xd0\xe7\x93\x8f\x4b\xc9\x7a\x77\xb3\x16\xcf\x77\xa2\xc7\x68\x26\xf9\x2a\xbe\x07\x73\x3d\xad\x2a\xff\xac\x4e\xa7\x8d\x29\x2b\x74\x64\x73\xa0\xc6\x3c\x5d\xa5\x36\x6c\xcf\x41\x25\x63\x95\xd3\xcb\xff\xa5\x2d\x5a\x4f\xe7\xe2\xbf\x08\xed\xc0\xd6\xd1\x4b\x74\x31\xbd\x2d\x35\x8c\x6a\xca\xbc\x9b\x65\xa2\x52\x18\x93\xba\x3d\x0b\xb9\xa3\x87\x7b\x68\x45\x98\xd6\xab\xa3\x34\x8c\x1f\x48\x9d\x7d\x75\x7f\x5b\x10\xea\x4a\x17\x18\x7f\xd4\xa5\xf1\x5f\x41\xc6\x3c\xc9\x1e\xe0\x95\xda\xe7\xc3\x8a\x4b\x25\x39\xdf\x59\x57\x62\x6f\xcc\x85\xf5\xd4\xe9\xd0\xb6\xe3\x6b\x0e\x11\x39\x8a\x3e\xd5\x5e\xa8\xe4\xb7\x9c\x62\x40\xee\x0c\xa9\xc1\xca\xac\xfb\x2d\x78\x67\x51\x15\xd1\x73\x78\x8a\x45\x8f\x3e\xa0\xc5\x6f\x27\x1a\x1a\xeb\xa1\x62\x9f\x1b\xed\x20\x7b\xa2\xa4\x1b\xd3\x23\x85\x0e\x94\xe3\x3c\xf7\xd6\x08\x68\x62\x33\xd3\xce\x9a\x29\x28\x43\x77\x13\x51\x6d\x50\x0a\x32\x0e\x6f\x10\xcf\x92\xf8\x9e\x8b\x26\xc8\x55\x0f\x2e\xdd\x62\xd4\x1a\xef\xe2\x33\x0a\xcb\xfd\xf5\x2f\x50\xb0\xda\x27\x8c\x61\x4a\x97\x08\x51\x79\xe1\x6c\x0d\x8e\x99\x50\xcd\xe1\xcc\x30\x43\xff\x81\xc0\x16\xb8\x4a\x13\xc8\x8e\xe8\x3f\xe6\x82\x5a\x91\x4f\xe9\xa4\xae\xd9\xc4\xc2\x03\x82\x24\x62\x7c\x33\x1a\xe9\x42\xc3\x47\x4a\x5d\xf5\xa5\x6d\xa6\x47\x5e\x4a\xd3\xde\xa1\xcf\xfe\x27\x20\xe8\xcd\xc9\xdb\x57\xbd\x0f\x26\xdb\x6b\x65\x20\x56\xa4\xfd\x9b\x8a\xeb\x6f\x58\xed\xd0\x15\x0a\xda\x25\x79\xf8\xc5\x1a\x03\xb1\x51\x26\x79\xc4\x3c\x44\xe5\x49\x98\xbe\xe3\x1a\x89\xf5\x91\x98\xe4\xe5\x78\x6a\x67\x8c\x84\xb4\x48\x7b\xdb\x17\x29\x34\xb2\x86\x26\x11\x64\x97\x5b\x24\x6e\xba\xe9\x4c\xf6\xbd\xe2\xd8\x8c\x12\xea\x34\xca\x9b\x2a\xb4\xbd\x64\xcf\xf1\x43\x02\x0f\x11\xda\x52\xe3\x99\x94\x26\x61\xb6\x64\x54\xb1\xf4\x4f\x05\x5c\x41\x57\x4b\x85\x29\x69\x8d\x71\x1f\x03\x15\xe0\x2f\xbe\xbb\xe8\xbb\x6e\x89\x50\x62\xf2\xc1\x04\xcf\xe8\x11\x74\x8f\x9e\x5e\xda\x09\x92\x0f\x6d\xb9\x6c\x83\x68\x60\xbe\x59\xc6\x4b\x13\xcc\x02\xfd\xf6\x5b\xff\xe5\x65\xff\x3f\x67\x57\xfd\x8b\x67\x0a\xdc\xa6\x24\xae\xb6\xb4\x57\x36\xb6\xb4\x77\x87\x5e\xb2\x61\x89\x5b\xd2\x70\x1e\x9b\x91\xac\xae\xdf\x38\xbc\xdc\x2d\xb1\xe4\x59\x17\xbd\xc9\x66\x20\x86\xc5\x89\xac\x97\xcf\xc4\xcd\xca\x20\x93\x6f\xae\x10\x67\x09\xcf\x7d\x6f\xd3\x13\xee\xaf\x29\xba\xde\x1f\x39\xe6\x78\xd8\x4b\x56\xc9\x24\x3f\x98\xdd\x76\xc3\x56\x62\xf2\x43\x39\x2e\x9f\xd0\xf8\xfd\x48\xf2\x22\xb1\xa1\x5f\x0e\x7a\xf1\x67\x9b\xf5\xe6\xb0\x67\x75\x33\x84\xfe\xb4\xc7\x6b\xf0\xcb\xd0\x64\x4d\x0f\x1f\x7f\x1b\xf8\x45\x1a\x5a\x71\x7d\xd2\x52\x99\x25\x21\xc8\x96\x50\xaa\x66\xa5\x2e\x32\x11\xab\x4f\x62\x52\x55\x41\x9d\xa2\xdc\x06\x41\x2f\x5e\x2c\x15\x79\xfd\xf6\x40\xf1\xeb\xca\xce\xa3\x66\x28\x25\x5f\x79\x42\x15\x64\xce\x95\xad\xe3\x2e\x4a\x14\x96\x2f\x24\x02\xcb\x97\xd6\x4f\x9d\xe4\xff\x01\x00\x00\xff\xff\xe9\x80\xd0\xe1\x7f\x0b\x00\x00"

func dataAwsSimpleBuildBuildRubyShTplBytes() ([]byte, error) {
	return bindataRead(
		_dataAwsSimpleBuildBuildRubyShTpl,
		"data/aws-simple/build/build-ruby.sh.tpl",
	)
}

func dataAwsSimpleBuildBuildRubyShTpl() (*asset, error) {
	bytes, err := dataAwsSimpleBuildBuildRubyShTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/aws-simple/build/build-ruby.sh.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _dataAwsSimpleBuildTemplateJsonTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x54\xcd\x8e\x9b\x30\x18\xbc\xf3\x14\x16\x52\xf6\x14\x20\xed\xae\xaa\xaa\xd7\x3e\xc6\x2a\x62\x0d\x78\x83\x15\xdb\x58\xfe\xec\x54\x59\xe4\x77\xef\x67\xfe\xa9\x36\x24\xdd\x5c\x8c\x3c\xc3\xcc\x78\xf8\x9c\x36\x22\xf8\x8b\x25\x57\xb9\xa6\xe5\x99\x99\xfc\xc2\x0c\xf0\x46\xc5\xbf\x48\x7c\x48\x7f\xa6\x87\x78\x1f\xf5\x9c\x0b\x35\x9c\x16\x82\x01\x42\xfd\x6b\xb8\x49\xff\x40\x4e\xcb\x92\x01\xe4\x67\x76\x45\x44\x39\x21\xf6\x4b\x14\x58\x69\x98\xbd\x85\x1a\x76\xea\xcd\x56\x08\x08\x77\xc2\x3c\xb6\x1e\x80\x6e\xdf\x8f\x41\xb4\x69\x2e\x3c\x64\xc4\xa4\x48\x78\x1d\xde\x6a\x77\xe4\xbd\x31\xa4\xe2\x86\x70\x85\x8f\x4e\x55\xd4\x22\x2b\xc7\x1d\x48\x0b\xc7\x45\x45\x76\x7e\x24\x0f\x2b\xca\xd9\xab\x66\xe1\xb4\x50\x33\x21\xe2\xfd\x0c\x70\x25\xb8\x0a\xd0\x6b\x2c\xcf\x41\x36\xd1\x24\xb3\x52\x67\x8d\xb5\x4d\x36\x1b\x24\x6d\x1b\x9c\x45\xd3\xe8\xf4\x37\xee\x5a\x66\x88\xf7\xf1\x71\x50\xf2\xfb\xdb\x9e\xef\x5c\xb0\xa5\x25\x34\xce\x94\x1d\x82\x9a\xc1\xd2\xfb\x6c\x89\x57\x0c\x2c\x57\x9d\x6b\x20\xfd\x47\x9a\x07\xc2\x6c\x15\x50\x56\x8f\x1e\xdd\x7b\xf2\xf4\x44\x0a\x0a\x35\x49\x33\x49\xb9\x4a\xa1\xfe\xa4\x8b\x1d\x61\xaa\x0a\xdf\x6b\xeb\x93\x6c\xd4\xb3\x23\x38\xa8\x05\x86\x90\xa8\x80\x29\x1c\xe0\x39\xdf\xa6\xc1\x79\xc3\x33\xf7\x1e\x0b\xda\x23\x4d\x26\x54\xeb\xd4\x9e\x3e\xbe\x54\x18\x94\x86\x6b\x1b\xa0\x6e\xdc\x12\xe3\x8a\x6b\x38\xfe\xa8\xd5\xad\xc7\x71\x8e\x3b\xce\x30\xc3\xd3\x85\x52\x54\x76\xda\x21\xcb\x24\x3d\x39\x52\x49\x3f\xb0\x75\x56\xc0\x8c\xad\xae\xdf\xad\x62\xd6\xf7\x74\xbb\x9d\x78\x75\x65\xb7\x14\x67\xe2\x1d\xc5\xe9\x9a\x6f\xa9\xf5\xa4\x7b\xd9\xba\x11\xc8\xa9\xe4\x7d\x1f\x3c\xf9\xfe\xed\xc7\xf3\xa1\x7a\x79\x99\x39\x5c\x81\xa5\x0a\x59\x63\x6d\xe5\x73\x2a\xa8\x39\xb1\x85\x0c\xd4\x79\x70\x1e\xeb\x76\x05\x0e\xaf\x5b\x94\x2a\x79\x3e\x62\x6d\x1b\x9e\x70\xae\xff\xcd\x8e\x2b\x4e\x11\x95\xfa\xb3\xc4\xfd\x7f\xd6\x31\x8a\x7c\xf4\x37\x00\x00\xff\xff\x16\x08\x5f\x5b\x65\x05\x00\x00"

func dataAwsSimpleBuildTemplateJsonTplBytes() ([]byte, error) {
	return bindataRead(
		_dataAwsSimpleBuildTemplateJsonTpl,
		"data/aws-simple/build/template.json.tpl",
	)
}

func dataAwsSimpleBuildTemplateJsonTpl() (*asset, error) {
	bytes, err := dataAwsSimpleBuildTemplateJsonTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/aws-simple/build/template.json.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _dataAwsSimpleDeployMainTfTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x52\xc1\x8e\xdb\x20\x10\xbd\xe7\x2b\x46\x74\x8f\x5d\x27\xed\xb1\x52\xcf\xbd\xb5\x1f\x50\xad\x10\xc6\x24\x45\x8b\x01\xc1\x90\xca\xb2\xfc\xef\x1d\xa0\x16\xc1\xbb\xbd\x36\x39\xf9\xcd\x63\xde\xcc\x9b\xf7\x01\xbe\x29\xab\x82\x40\x35\xc1\xb8\xc0\x0f\x44\xf7\x11\x26\x07\xd6\x21\xa8\x49\x23\xcc\xc2\x26\x61\xcc\x72\x3a\xdd\x45\xd0\x62\x34\x0a\x98\xb6\xd7\x20\xb8\x9e\x18\xac\xdb\x03\x2c\x7e\x47\x2e\xa4\x54\x31\xf2\x57\xb5\xbc\x53\x8c\x4a\x06\x85\xff\x28\x06\x75\xd3\xce\x1e\x0a\x44\xe5\x56\xcc\xaa\xc0\x8f\x0f\x66\x7d\x60\x6a\x1b\x51\x58\xa9\x38\x2e\x3e\xd3\x61\x52\x57\x91\x0c\xc2\x57\x60\xf8\x79\x98\xb5\x0c\x8e\xc1\xe3\x8b\x98\x46\x4b\xd3\xf8\x34\x1a\x2d\x0f\xdd\xee\x5e\x72\xa9\xa7\xf0\x0e\xfc\x77\xed\x93\x0f\xee\xae\x27\x15\xca\xf4\x04\x9d\x00\xda\xf2\x59\xf5\x69\xa5\x87\x43\x6f\xca\xc6\x88\xd6\x6c\xe8\x69\x0d\x2f\xb4\x6a\x08\xe4\x5f\x47\xab\x38\x51\x68\x88\xa0\xa2\x4b\x41\x36\x7f\x53\xd0\xb8\xf0\x5b\x70\xc9\x33\x02\xbd\xaf\x93\x65\x0f\x6b\x9f\x75\xad\x1f\xdb\xf6\x5c\x5b\xee\xc7\x2c\x9a\x75\xc1\xa6\x57\xbf\xa9\x44\x35\x6d\x6f\x24\x17\x4b\x3f\x00\x5a\x1f\x9d\x74\xa6\x8e\xf7\xfc\xa9\x80\xd7\xe0\x66\xee\x5d\xc0\x02\x5e\x0a\x86\x6e\x47\x1a\x96\xad\xe5\xa3\x71\xf2\x35\x12\xf6\x93\x5d\x86\xf2\x3f\x5f\xd8\x0b\xd5\xb7\xac\xa6\xfe\x9b\xd8\x1b\x1b\xf7\x28\x3d\x1a\x48\x81\x83\xf6\x6b\xf7\x98\x75\xf1\xad\x4b\x5f\x2b\x77\x70\xbd\x7d\x0d\x1d\x79\xdc\xf5\xe9\xb2\x58\x88\x7b\xf2\x0f\x82\x3b\x5c\x4f\x92\xcf\xd3\x1f\x9d\x3a\xd7\x2d\x9f\xd6\xb7\x89\x18\x68\x9d\x21\x9f\xf3\x25\x3f\x46\x71\x23\x7f\xe1\x7b\x16\xe9\x82\xc1\xaa\x29\x2e\xa1\x4f\x08\x2c\x05\x53\x3d\xb8\x0b\x93\x0a\xf5\x17\xa2\xff\x72\x3e\x57\x89\x7d\xc7\xd2\xbc\x2e\xc0\x27\x1b\xb7\x73\x0e\xe8\x9f\x00\x00\x00\xff\xff\x5f\x73\x79\x4b\x5f\x04\x00\x00"

func dataAwsSimpleDeployMainTfTplBytes() ([]byte, error) {
	return bindataRead(
		_dataAwsSimpleDeployMainTfTpl,
		"data/aws-simple/deploy/main.tf.tpl",
	)
}

func dataAwsSimpleDeployMainTfTpl() (*asset, error) {
	bytes, err := dataAwsSimpleDeployMainTfTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/aws-simple/deploy/main.tf.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _dataAwsVpcPublicPrivateBuildBuildRubySh = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x56\x7f\x53\x13\xcb\x12\xfd\x7f\x3f\x45\x1b\x28\x79\xaf\x8a\xdd\x05\xea\xf9\xae\x26\x62\x5d\x40\x50\xaa\xac\xc4\x0a\x7a\x7f\x94\x7a\xa9\xcd\x6e\x27\x19\xd9\xcc\xac\x33\xb3\x81\x80\xf9\xee\xf7\xf4\x6c\xc8\x0f\x51\xcb\x7f\x60\x33\x33\xdd\x7d\xba\xfb\xf4\x99\xd9\x7a\x94\x0e\x94\x4e\x07\x99\x1b\x47\x91\x63\x4f\xb1\x21\x6d\x6a\xbd\xf8\x64\x6b\xf9\x46\x85\xcf\x4a\x55\x3c\xcc\x54\xb9\x58\xf6\x36\xcb\x39\x8a\xf0\x65\xec\x7f\xfe\x4b\x77\x11\x11\x95\x26\xcf\x4a\x72\xa6\xb6\x39\x0f\x55\xc9\x87\xdb\xfb\xab\xe5\x52\x69\xd6\xe6\x70\xfb\x40\x96\x38\x1f\x1b\x6a\x9d\xf6\xfb\xbd\x3e\x65\x9e\xb6\xef\x56\x46\xf3\xf6\xf6\x5d\x73\x76\xde\xa1\x37\x99\xf3\xb0\x1f\xb9\x76\x4b\xcc\x46\x96\x2b\x32\xde\x1b\x4a\xa7\x99\x4d\xb1\x91\xba\x99\xc3\x3f\xfa\x4a\x3e\x60\xd3\x74\xb0\x17\xcd\x23\xa0\xab\x68\x27\x80\xa3\xd6\xf6\xdd\xf1\xd1\xc5\xeb\xcb\x8b\xde\xfb\xfe\xc9\xe9\xbc\x25\x0b\x6f\xce\xbb\xa7\xdd\xde\xbc\xb5\x43\xc0\x10\x45\x86\x25\x05\x6c\xfc\xde\xa2\x83\x17\x8f\xf7\xe1\x0e\x4e\x47\x6c\x29\xf6\x4d\xbc\x17\x94\x16\x3c\x4d\x75\x5d\x96\x1d\x9a\x47\xa6\x0c\x06\x4d\x1a\x1f\xe4\xc4\x27\x82\xb1\x6c\x45\x5b\x94\x97\xa6\x2e\xe2\xdc\xe8\xa1\x1a\x51\x9e\x69\x52\xda\xb3\x1d\xb2\x65\xba\x56\x7e\x4c\x59\xe5\x29\x37\x93\x49\xa6\x0b\x47\x6a\x48\xca\xef\x38\x72\x5e\x95\x25\x4e\x52\x65\x0d\xf2\x74\x0e\x41\xa8\xf5\x67\xa6\xbc\xd2\x23\x1a\x22\x91\x0d\xb7\xc0\x04\x17\x55\xc9\x9e\x93\x24\x69\x45\xb5\x86\x3d\x7d\xf8\x40\xf1\x70\x51\x1c\x35\x48\x83\x45\xaa\xb4\xf3\x99\xce\x39\x1d\x18\xe3\xe3\xa1\xd2\xca\x8d\xb9\xa0\x4f\x9f\x3a\x54\x18\x94\xd5\x95\x8c\xb2\xee\x25\x4f\xa2\xc2\x68\xf4\x54\xe2\x1e\x15\x85\x84\x15\xa4\xa8\xb9\x71\xca\x1b\xab\xd8\x11\x20\x53\x5d\x15\x99\x80\x0a\x71\x0d\x93\xab\x0b\x23\x27\xe3\x11\x48\x13\x36\xf9\xc1\x72\xc0\x80\xfc\xe2\x19\xf8\x31\xf4\xd7\x99\xe5\x18\x89\x56\x6c\x3d\xdc\xc6\x52\x0d\xa3\x57\x56\x45\x11\x8b\xe5\x32\xf4\x4c\x0c\xab\x2a\x6b\xe7\x63\xab\x5c\x5c\x72\x96\x6a\x53\x70\xf2\xd9\x6d\x44\x12\xbb\x87\x36\x03\xab\x46\x63\x3f\x30\x37\xa9\xad\x07\xb3\x58\x8f\x36\x6c\xae\x78\x86\x78\x53\x8a\xe5\xcb\xb1\x9d\xa2\xeb\xe3\xab\xaa\x9d\xa6\xcb\xdf\x49\x3d\x40\x79\xeb\x04\x28\xdb\x4f\xf7\x70\xd2\x72\x3e\x0d\xc7\xe9\xc9\xff\xf7\xcf\x9e\x1d\x3f\x3b\x39\x3a\xf9\xdf\xde\xf1\xc1\xd9\x6f\x51\xa0\xc4\x4e\xc1\x03\x1a\x7b\x5f\x39\xb8\x31\xce\xc5\x98\xb1\x4c\xea\x97\x54\xe3\xda\x29\xa3\xab\xcc\x39\xd6\x20\x98\xf8\x4c\x01\x23\x5d\xae\x90\xb7\xb5\xf3\x33\x9a\x64\x4a\xef\x80\x88\x01\xa8\x67\xa6\x94\x7d\x1e\x8e\x36\xb3\xe2\x92\x52\x39\x9f\x14\x2b\xcb\xb0\xb0\xce\xd4\x1f\x35\x07\x14\x7d\xd7\x7b\xd9\x6b\x53\x95\xd9\x6c\x02\x06\x59\x75\xcb\x24\xc5\x21\x64\x2b\xf8\x28\x03\x31\x75\x55\xfb\x88\x6f\x2a\x63\x3d\xf5\xdf\x1f\xff\x7d\xf9\xc7\x69\xff\xe2\xbc\xd7\x3d\x6c\xdd\xdd\x85\xd3\x97\xf7\xa7\xe7\xf3\x56\x43\x9b\xf3\xa6\xcd\x42\x9d\x3e\x0e\xec\xd2\xdb\x7b\x70\xbb\xd4\x1d\x29\x7d\xb3\x1b\x18\x64\xfc\x18\x89\x56\x59\x7e\x95\x8d\x90\x88\xf0\x68\x11\xe7\xe5\xe9\xf1\xf9\x51\xf7\xf2\xac\xdf\xeb\xbe\x3b\xed\xbe\x3c\xd4\x46\x87\xe1\xc9\x72\xaf\xa6\x3f\xa5\xd5\xe0\xd6\xd2\x08\x52\x35\x61\x9b\xd7\x56\x41\x71\x06\xb5\x2a\x8b\x98\x05\x80\x97\xdf\x1f\xc1\x75\x4c\x45\xf5\x25\x46\x81\xe8\x16\x9f\xfb\xa3\xf0\xf9\x63\x46\x06\x1b\x09\x06\x41\xd1\x4e\x10\xc6\xa1\xad\x61\x5d\x18\xf8\xb9\xf9\x94\x6a\x6c\xaf\xd7\xe8\xe1\x4a\x88\x14\xcc\xa4\x0e\x31\xdf\xc0\xa5\xa3\x65\xf3\x1e\xd4\xef\xb8\xd6\x45\x89\xa6\xae\x0f\xd9\x88\x27\xcb\x94\x07\xcd\x3e\xd8\xa8\x4d\x6c\xd5\xe2\x7f\x61\xf2\xc6\xd3\xa9\xf8\xcf\x7d\x33\xc4\x55\xf0\x12\x5c\x4c\xae\x0a\x05\xa3\x8a\x52\x67\xa7\xa9\x28\x17\x26\xad\x6a\xf6\x7c\x66\xe9\xf6\x06\xfa\xe1\x27\xd5\x72\x2b\xf1\xa3\x5b\x8a\x4f\xbe\x39\xbf\x29\x12\x55\xa9\x72\x48\x02\xea\x55\xbb\x6f\x20\x63\x24\x65\x0d\xf0\x0a\xe5\xb2\x41\xc9\x45\x2c\x39\x5f\x1b\x5b\x60\x6d\xc4\xb9\x71\xd4\x6a\xd1\xa6\xe3\x0b\xf6\x01\x39\x9a\x31\x51\x4e\x28\xe6\x36\x9c\x62\xc6\xae\x35\xc5\xfd\xa5\x59\xfb\x7b\xf0\x4e\x82\x52\x82\x0b\xf0\x14\x8a\x1e\x7c\x08\xf9\xc7\x0a\xf4\x76\x50\xb6\x2f\xb5\xb2\x90\x42\x51\xd7\xb5\x01\x94\x42\x7b\xca\xb0\x9f\x39\xa3\x05\x34\xb1\x9e\x2a\x6b\xf4\x04\x54\xa2\xeb\xb1\x28\x39\xa8\x06\x69\x87\x37\x08\x6a\x41\x7c\xc3\x79\xed\xe5\xa8\x03\xc7\xae\x30\xad\xb5\xb3\xe1\x6a\x85\xe5\xee\xea\x17\xa8\x59\xee\x12\x26\x39\xa1\x73\x84\x28\x9d\x70\x19\x63\x08\xbf\xe5\x0c\xce\x34\x33\xee\x04\x20\x30\x39\x8e\xd2\x18\xca\x25\x77\x02\xe6\x85\x1a\xe1\x4f\xe8\xa8\xaa\x58\x87\xc2\x03\x82\x24\xa2\x5d\x3d\x1c\xaa\x5c\xc1\x47\x42\xed\xf8\x6b\xd3\x4c\x87\xbc\x62\x45\x3b\xfb\x2e\xfd\x47\x40\xd0\xdb\xa3\x77\xaf\x3b\x1f\x75\xba\xd3\x28\x49\xa8\x48\xf3\x37\x11\xd7\xdf\xb1\xda\xa2\x1e\x0a\xda\x26\x79\x0c\x88\x35\x06\x65\xad\x4c\x72\xb1\x39\xe8\xd2\xbd\xb6\xfd\xc4\x35\x12\xeb\x22\x31\xc9\xcb\xf2\xc4\x4c\x19\x09\x01\x39\xdc\x85\x43\x52\x68\x64\x0d\x59\x23\x28\x37\x37\x48\xec\x64\xdd\x99\xac\xbb\x98\x43\x33\x0a\x08\xdc\x30\xab\x4b\xdf\xf4\x92\x1d\x87\xc7\x05\x2e\x27\xb4\xa5\xc2\xd5\x29\x4d\xc2\x6c\xc9\x08\xe3\xd3\xdd\x17\x70\x09\x3d\x5e\x28\x4f\x41\x2b\x8c\xbb\x18\x28\x0f\x7f\xe1\x2e\x46\xdf\x55\x43\x84\x02\x8a\x00\x26\x38\x16\xa9\xf4\xf7\x4d\x80\x3b\x24\xef\x9b\x72\x99\x1a\xd1\xc0\x7c\xbd\x88\x97\x44\x98\x05\x7a\xfe\xbc\xfb\xea\xbc\xfb\xd7\x49\xaf\x7b\xf6\x40\xc4\x9b\x94\xc4\xd5\x86\x7c\xcb\xc2\x86\x7c\x6f\xd1\x2b\xd6\x2c\x71\x0b\x82\x36\x4b\x33\xa2\xe5\xf1\x4b\x8b\xdb\xbc\x21\x96\x5c\xf5\xa2\x37\xe9\x14\xc4\x30\xd8\x91\xef\xc5\x4d\x73\xb9\x34\x48\xe5\x1d\xe6\xc3\x2c\xe1\x09\xd0\x59\xf7\x24\xca\xbf\xa4\xe8\x6a\x7d\x68\x99\xc3\x66\x27\x5a\x26\x13\xfd\x62\x76\x9b\x0d\x5b\x8a\xc9\x2f\xe5\xb8\xb8\x85\xc3\x9b\x92\xe4\x52\x63\x4d\x4f\xf7\x3a\xe1\x67\x93\xf5\xfa\xb0\xa7\x55\x3d\x80\xfe\x34\xdb\x2b\xf0\x8b\xd0\x64\x74\x07\x0f\xc2\x35\xfc\x22\x0d\x8d\xb8\xde\x6b\xa9\xcc\x92\x10\x64\x43\x28\xe3\x7a\xa9\x2e\x32\x11\xcb\x67\x32\xc5\x65\x4e\xad\xbc\xd8\x04\x41\x8f\x1f\x2f\x14\x79\x75\x27\x41\xf1\xab\xd2\xcc\x82\x66\xc4\xb1\xbc\xfc\x84\x2a\xc8\x9c\x4b\x53\x85\x55\x94\xc8\x2f\x6e\x4e\x04\x96\xd7\xd7\xa3\x56\xf4\x6f\x00\x00\x00\xff\xff\x4a\x32\x5d\xfc\x93\x0b\x00\x00"

func dataAwsVpcPublicPrivateBuildBuildRubyShBytes() ([]byte, error) {
	return bindataRead(
		_dataAwsVpcPublicPrivateBuildBuildRubySh,
		"data/aws-vpc-public-private/build/build-ruby.sh",
	)
}

func dataAwsVpcPublicPrivateBuildBuildRubySh() (*asset, error) {
	bytes, err := dataAwsVpcPublicPrivateBuildBuildRubyShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/aws-vpc-public-private/build/build-ruby.sh", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _dataAwsVpcPublicPrivateBuildTemplateJsonTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x54\xcd\x8e\x9b\x30\x18\xbc\xf3\x14\x16\x52\xf6\x14\x20\xed\xae\xaa\xaa\xd7\x3e\xc6\x2a\x62\x0d\x78\x83\x15\xdb\x58\xfe\xec\x54\x59\xe4\x77\xef\x67\xfe\xa9\x36\x24\xdd\x5c\x8c\x3c\xc3\xcc\x78\xf8\x9c\x36\x22\xf8\x8b\x25\x57\xb9\xa6\xe5\x99\x99\xfc\xc2\x0c\xf0\x46\xc5\xbf\x48\x7c\x48\x7f\xa6\x87\x78\x1f\xf5\x9c\x0b\x35\x9c\x16\x82\x01\x42\xfd\x6b\xb8\x49\xff\x40\x4e\xcb\x92\x01\xe4\x67\x76\x45\x44\x39\x21\xf6\x4b\x14\x58\x69\x98\xbd\x85\x1a\x76\xea\xcd\x56\x08\x08\x77\xc2\x3c\xb6\x1e\x80\x6e\xdf\x8f\x41\xb4\x69\x2e\x3c\x64\xc4\xa4\x48\x78\x1d\xde\x6a\x77\xe4\xbd\x31\xa4\xe2\x86\x70\x85\x8f\x4e\x55\xd4\x22\x2b\xc7\x1d\x48\x0b\xc7\x45\x45\x76\x7e\x24\x0f\x2b\xca\xd9\xab\x66\xe1\xb4\x50\x33\x21\xe2\xfd\x0c\x70\x25\xb8\x0a\xd0\x6b\x2c\xcf\x41\x36\xd1\x24\xb3\x52\x67\x8d\xb5\x4d\x36\x1b\x24\x6d\x1b\x9c\x45\xd3\xe8\xf4\x37\xee\x5a\x66\x88\xf7\xf1\x71\x50\xf2\xfb\xdb\x9e\xef\x5c\xb0\xa5\x25\x34\xce\x94\x1d\x82\x9a\xc1\xd2\xfb\x6c\x89\x57\x0c\x2c\x57\x9d\x6b\x20\xfd\x47\x9a\x07\xc2\x6c\x15\x50\x56\x8f\x1e\xdd\x7b\xf2\xf4\x44\x0a\x0a\x35\x49\x33\x49\xb9\x4a\xa1\xfe\xa4\x8b\x1d\x61\xaa\x0a\xdf\x6b\xeb\x93\x6c\xd4\xb3\x23\x38\xa8\x05\x86\x90\xa8\x80\x29\x1c\xe0\x39\xdf\xa6\xc1\x79\xc3\x33\xf7\x1e\x0b\xda\x23\x4d\x26\x54\xeb\xd4\x9e\x3e\xbe\x54\x18\x94\x86\x6b\x1b\xa0\x6e\xdc\x12\xe3\x8a\x6b\x38\xfe\xa8\xd5\xad\xc7\x71\x8e\x3b\xce\x30\xc3\xd3\x85\x52\x54\x76\xda\x21\xcb\x24\x3d\x39\x52\x49\x3f\xb0\x75\x56\xc0\x8c\xad\xae\xdf\xad\x62\xd6\xf7\x74\xbb\x9d\x78\x75\x65\xb7\x14\x67\xe2\x1d\xc5\xe9\x9a\x6f\xa9\xf5\xa4\x7b\xd9\xba\x11\xc8\xa9\xe4\x7d\x1f\x3c\xf9\xfe\xed\xc7\xf3\xa1\x7a\x79\x99\x39\x5c\x81\xa5\x0a\x59\x63\x6d\xe5\x73\x2a\xa8\x39\xb1\x85\x0c\xd4\x79\x70\x1e\xeb\x76\x05\x0e\xaf\x5b\x94\x2a\x79\x3e\x62\x6d\x1b\x9e\x70\xae\xff\xcd\x8e\x2b\x4e\x11\x95\xfa\xb3\xc4\xfd\x7f\xd6\x31\x8a\x7c\xf4\x37\x00\x00\xff\xff\x16\x08\x5f\x5b\x65\x05\x00\x00"

func dataAwsVpcPublicPrivateBuildTemplateJsonTplBytes() ([]byte, error) {
	return bindataRead(
		_dataAwsVpcPublicPrivateBuildTemplateJsonTpl,
		"data/aws-vpc-public-private/build/template.json.tpl",
	)
}

func dataAwsVpcPublicPrivateBuildTemplateJsonTpl() (*asset, error) {
	bytes, err := dataAwsVpcPublicPrivateBuildTemplateJsonTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/aws-vpc-public-private/build/template.json.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _dataAwsVpcPublicPrivateDeployMainTfTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x55\x4d\x6f\x13\x31\x10\xbd\xe7\x57\x8c\x5c\x4e\x88\x6e\x0a\xa7\xaa\x12\xb7\x4a\xdc\xe8\x85\x1b\x42\x2b\xaf\xd7\x09\x56\x1d\xdb\xf2\x47\xd0\x2a\xda\xff\xce\xd8\x8e\xe3\xfd\x48\x5b\x10\x12\xdb\x4b\xfb\xde\x8c\x67\xe6\x3d\x7b\x7a\x03\x5f\xb8\xe2\x96\x7a\xde\x43\x37\xc0\x93\xf7\xfa\x03\xf4\x1a\x94\xf6\xc0\x7b\xe1\xe1\x40\x55\xa0\x52\x0e\x9b\xcd\x91\x5a\x41\x3b\xc9\x81\x08\xb5\xb3\xb4\x15\x3d\x81\xd3\x38\x81\xe9\x2f\xd7\x52\xc6\xb8\x73\xed\x33\x1f\xae\x90\x8e\x33\xcb\xfd\x0b\xa4\xe5\x7b\xa1\xd5\x82\xc0\xd0\x56\xd1\x03\x4f\xf0\x34\xe1\x20\x16\x91\x42\x39\x4f\x15\xe3\xad\x1f\x4c\x0c\x87\x9e\xef\x68\x90\x1e\x3e\x03\xf1\x9f\x9a\x83\x60\x56\x13\x98\x66\x18\x2b\x8e\x38\x77\xeb\x42\xa7\xb0\xab\xd5\x38\x26\x74\x52\xb0\x17\xe9\xa3\x61\x2d\x13\xbd\xbd\x02\x9f\x63\x37\xc6\xea\xa3\xe8\xb9\x4d\x03\x22\xb4\x01\xa8\xfa\xc4\xc6\xde\x9d\x30\xb1\x99\xeb\x36\x12\x0c\xab\x4a\xcd\xc3\x2a\x9e\xc2\xb2\x66\x10\xbf\x59\x58\xc6\x31\x04\x9b\xb0\xdc\xe9\x60\x59\xb5\x20\x58\xe1\x87\x76\x6f\x75\x30\x04\x08\x97\x5d\xee\x2c\xca\x1c\x4f\x39\x9d\xf2\xaf\xe3\x78\x8b\xdc\x6d\x3e\xb4\x38\x9e\xaa\xe6\x11\x6b\xc5\xfc\x37\x52\xc8\xf1\x3d\xd6\x73\xe9\x40\x00\x9c\xdf\x6b\xa6\x65\xee\xef\xf6\x63\x02\x77\x56\x1f\x5a\xa3\xad\x4f\xe0\x5d\xc2\xbc\x2e\x48\xc5\xa2\xb6\x6d\x27\x35\x7b\x76\x88\x7d\x27\x77\x4d\xfa\xd9\xde\x91\x1f\xc8\x8f\xb1\x98\x50\x2f\x57\x23\x9e\x19\x72\xa5\xe0\xfd\xb5\x8a\xf7\x7f\x56\xf2\x6d\x35\xa9\x31\x13\x35\x61\xa1\xe7\x5f\x6a\xf9\xda\x78\xff\x28\x66\x2d\x16\x99\xf1\x3c\xdf\xff\xb4\x6f\xa5\x65\xba\x88\x2b\x01\x2f\xdf\x9b\x4a\xe6\x77\xea\x26\x09\x65\xcc\xe5\x43\xce\xe3\xce\xbd\x2b\xb2\xac\x5d\x6d\xb0\xb1\xa6\x24\x95\x2d\xe3\x66\x45\x62\x52\x61\x1a\x9c\xa0\x79\x7f\x4e\xc0\x8c\x1b\xf8\xf6\xf4\xf8\xf4\x80\x7b\xf4\x99\x83\x14\xce\x73\x85\xbe\x42\xd4\xcb\x01\xd3\x6a\x27\xf6\xc1\xc6\xd5\x81\xb1\x99\xc6\x7d\x91\xf5\x97\x5d\x95\x15\xe6\x37\x35\x52\x13\x77\x16\x37\xfe\xb2\x0b\xd7\x57\xbc\x52\x25\xbd\x26\x26\x53\x6e\xe0\x91\x1b\xa9\x07\xa0\xa8\x90\x07\xbd\xab\x33\x2f\x0c\x2b\xf8\xd4\x35\xdc\xcb\x73\xcf\xce\x3b\xe9\x20\x92\x47\xb3\x25\x5d\xe9\x19\x3c\x31\x33\xbe\x8c\xd9\x39\xab\x95\x9d\x82\xcb\x3f\x89\x45\xd1\x02\xe7\xc7\x14\xef\xfa\xdc\x58\x4c\x7f\xc5\xf5\x68\xe3\xc5\x44\x4f\xf7\xe5\x51\x7c\x5d\xad\xc9\x8b\x74\x3a\x78\x13\x3c\x90\x60\x65\x56\xe3\x48\x65\x48\xc1\x3f\xbd\x37\x0f\xdb\x6d\x2e\x14\xef\x53\x3c\xbd\x57\x2e\xf7\xb7\x8d\x7b\xfa\x77\x00\x00\x00\xff\xff\x11\x23\xa2\xbf\x89\x07\x00\x00"

func dataAwsVpcPublicPrivateDeployMainTfTplBytes() ([]byte, error) {
	return bindataRead(
		_dataAwsVpcPublicPrivateDeployMainTfTpl,
		"data/aws-vpc-public-private/deploy/main.tf.tpl",
	)
}

func dataAwsVpcPublicPrivateDeployMainTfTpl() (*asset, error) {
	bytes, err := dataAwsVpcPublicPrivateDeployMainTfTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/aws-vpc-public-private/deploy/main.tf.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _dataCommonDevVagrantfileTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x56\x6d\x6f\xdb\x38\x12\xfe\xae\x5f\x31\x55\xdc\x37\x20\x92\xae\xc1\xe1\x3e\xb8\x4d\xd0\xbc\xb5\x09\xd0\x8b\x0b\x3b\x2d\x70\xb8\x5d\xb8\xb4\x34\x92\xd8\xca\x24\x97\xa4\x9c\xb8\x8e\xff\xfb\xce\x50\x72\xec\x6c\xba\xdd\x02\x71\x4c\x0f\x39\x6f\xcf\xcc\x3c\xe4\x1e\xbc\x47\x85\x56\x78\x2c\x60\xb6\x84\x91\xf7\x7a\x1f\x0a\x0d\x4a\x7b\xc0\x42\xfa\x27\xd1\x5e\xb4\x07\xd7\xb5\x74\x40\x7f\xbe\x46\xf8\x2c\x2a\x2b\x94\x2f\x65\x83\x50\xfd\x55\x17\x4a\x6d\xc3\xa9\x02\x17\xd8\x68\x33\x47\xe5\x41\x97\x64\xc2\xb3\x09\x61\x4c\x23\x73\xe1\xa5\x56\x99\x43\xbb\x90\x39\xa6\x70\xe9\xc1\xd5\xba\x6d\x8a\xe0\x74\x86\x50\x0b\x55\x24\xec\x1c\x8b\x14\xae\x35\xcc\x75\x21\xcb\x25\x9b\x25\x3b\x3b\xee\xf7\xa1\x75\x18\xbc\x1d\x1b\xc3\x82\x34\x8a\xfa\xed\x34\xd7\xaa\x94\x55\x6b\xf1\x45\x7c\x10\xbf\xe4\x8c\xee\x3a\xd1\x5d\x04\xd0\xad\xd2\xc5\x3c\x9d\xe9\x5b\x38\x84\xb8\x16\xae\x96\xb9\xb6\x26\x33\x16\x73\xe9\xf0\x3f\xff\x8e\x23\x3a\xb8\x07\x17\xda\x51\x02\xaa\x59\x82\x42\x7f\xa3\xed\xb7\x07\xea\xbd\x0c\x62\x63\xe5\x82\x70\x98\xf6\x82\x78\x1f\xa4\x19\x42\xbc\x5a\x31\x10\x53\x69\xa6\xa2\x28\x2c\x3a\x07\xeb\x75\x6f\x78\x82\xbe\x35\x20\xc0\x2d\x55\x4e\xf8\x95\xba\x29\xd0\x42\x69\xf5\x1c\x74\x6b\x81\xad\x48\x55\x41\x21\x29\x20\xaf\x2d\xa5\xaf\x21\x5b\x74\xd9\x3d\x88\xa1\x33\x30\xed\x0d\xb0\x4b\x23\x7c\x9d\x6e\x0c\x90\xc3\x7d\x88\x37\x9a\xf1\x3e\xe9\x02\xe8\x1b\xaa\x1b\xc5\x77\x2f\x85\xca\xea\xd6\xec\x48\xba\x20\xcf\x95\x98\x51\x99\x27\x93\x0b\x10\x15\x97\x92\xca\x7b\x23\x6c\xc1\x86\x9d\xa6\xf2\x7b\xcf\xcb\x3e\x7b\xca\xd5\xa0\x2a\x50\xe5\x12\x5d\xc8\xc0\x6d\x23\x75\xae\x4e\x7b\xed\x69\x67\xeb\x10\xbc\x6d\xb1\x73\xf4\x4e\xb7\xaa\x08\x7d\x01\x9b\xca\x75\xbf\x5e\xc8\x12\x84\x5a\xbe\xa4\x53\xab\xa7\xa1\xbb\x08\x11\x90\x8a\x96\x1b\x8d\x29\x49\x5c\x4a\x38\xc3\xd3\x35\x1d\xe3\x7d\x2a\x69\xa6\xa9\x1d\xb3\xed\xa9\x84\x80\x21\xf5\x46\x6b\x93\x9e\x92\xd4\x13\x58\x5c\x8c\x9f\x43\xc9\xc6\x02\x82\xb4\x78\x70\xd4\x58\xbd\x90\x8e\x23\x8c\x5d\x8d\x4d\xc3\x15\x57\x8d\x54\x48\x18\xe6\x05\xec\xad\x48\x61\x0d\xcf\x9e\xc1\x8c\x5a\xab\xff\x99\xcd\x85\x54\xa9\xab\xe3\x2e\x19\x82\x8a\xf3\xa1\xa0\x03\x04\x1f\xb4\x28\x40\x34\x4d\x28\x7f\x69\x45\xc5\xb3\xe3\xa0\x46\x8b\x21\x6f\x42\xe1\x01\xc0\xe9\x16\x92\xcd\x69\xc6\x85\xfb\x6d\xab\x1d\x10\xe1\xcc\x7b\xc9\x9d\x45\xf2\xb2\x5e\xff\x30\x82\x4b\xe5\x3c\x07\x30\x6e\x69\x9a\x67\xad\xa4\x89\x44\xb5\x90\x56\x2b\x56\xfd\xd5\xf4\x07\x2e\xb7\xd2\xf8\xa9\x25\x2b\x11\x79\x88\xa2\x5d\x09\x95\xe6\xcd\x9b\xc9\xe9\xf8\xf2\xe3\x75\xe4\xd0\x43\xc2\x54\xd3\xaa\x7e\x89\xd6\xe2\xad\x0c\x4b\x23\x0d\x96\x42\x36\xbd\xd8\x5b\x91\x53\xaf\xd0\x4a\xdb\x17\x2f\x61\xc5\x6d\xdc\xe8\x5c\x34\xd4\x87\xad\xcd\x91\xc7\xff\x70\xf0\x6a\x2b\xe6\x60\x94\x3e\x1c\x1c\xb0\x08\xf3\x5a\x43\x7c\x3e\x1e\x8f\xc6\x20\x3c\x0c\x56\x5b\xa5\xf5\x70\xb0\xea\xce\xae\x5f\xc3\x07\x41\xd3\xde\xe8\xca\x0d\xb9\x46\x34\x14\x68\x80\xfb\x88\x27\xcf\x66\xb4\x91\xb9\xa5\xa3\x2f\xb8\x03\x1f\x62\x53\x70\xf0\xaf\x68\x1d\x51\x74\x06\x9e\x87\xe0\x20\x1e\xac\x4e\x8e\x27\x17\xd3\xc9\xe8\xd3\xf8\xf4\x7c\x1d\xb3\xe0\xc3\xe5\xd5\xf9\xd5\x68\x1d\x3f\x07\x8a\x21\x22\x16\x63\xa3\x09\xde\x62\x3e\x04\xfe\xdf\xd2\xf0\xe4\x7a\x3e\x27\xe2\x83\x1b\xe9\x6b\xea\x01\x6f\xda\x10\x4a\xc5\xe4\x4a\x4b\xe6\xc6\x42\x3a\xd3\x88\x25\x16\x91\x46\x06\x01\x06\x6f\xe1\xe0\xe8\xd9\x2b\x0a\x27\x9c\xb4\x90\xf8\x2e\xde\x23\xc8\xa8\x11\x32\xd5\x36\xcd\x6b\x58\xdf\x7b\xa4\x53\xc3\x8d\x6d\x41\x63\x4b\x08\xdc\x92\xfd\x39\x31\x13\xcd\x64\xa4\x9b\x60\xb5\x43\xeb\xff\xac\xf1\x3b\xb9\x88\x7b\x0b\xff\x15\xdf\x10\xa8\x38\x34\xf8\xbe\x26\x14\xbf\xf4\x5c\x01\x34\xda\x5f\xa0\xd2\x34\xf3\x1d\x5b\x35\x81\xac\x98\x97\x89\x52\x59\x10\xa6\xa7\xb3\x4a\xb3\x71\xcf\x45\x70\x44\x61\xd6\x7a\x8e\x1b\x49\x96\xf2\xb4\xd8\x9c\xbd\x9d\xf6\x34\xc0\xfc\xc2\xfc\x13\xfa\x9c\xca\x43\x49\x52\x16\x52\x45\x44\x0c\x4f\xba\x0a\xc5\x9f\x1c\x9e\x5d\x4d\x08\xa2\x18\x32\xf4\x79\x46\x01\xf1\xa7\x98\x76\x0d\x0b\x47\x3b\x60\x50\x58\x2a\xda\x74\xc4\x8e\xe2\x1d\xb8\x96\x6e\x09\x8f\x08\x89\xf8\x27\x33\x64\x40\x63\xa7\xd0\x5f\x63\x0c\x02\x10\xc3\x7b\x61\x7d\x54\x4a\xea\xd4\x5b\xa3\xad\x87\xb3\xf3\x93\xcb\xe3\xab\xe9\xbb\xf1\xe8\xea\xfa\xfc\xea\xec\x50\x69\x25\x99\x7b\x44\xee\xe5\x82\x1a\x5a\x37\x10\x1f\x17\x81\x50\x85\xf1\x64\xc1\x68\x27\x89\xef\x99\x41\xb9\x1b\x5a\xc3\xf4\xa5\xaa\x34\x4d\xe3\x68\xe3\x93\x4e\x26\xc4\xbd\xdd\x26\x3e\x12\xcb\x7e\x8e\x93\x25\x98\xa5\xaf\x89\xfb\x9c\x2e\x3d\x31\x2f\x26\x34\xb7\x06\xad\x67\xeb\x3f\x90\x25\xdc\x83\x34\xd3\x6c\x88\x5a\x5a\x39\x4e\x21\xa9\xbd\x37\x6e\xeb\xa4\x28\x12\xde\xbf\x8f\x74\x19\xfc\x18\x31\xcc\x6b\x2b\x5d\xd2\xa0\xc8\x94\x2e\x30\xfd\xea\x1e\x04\xc6\x7a\x8f\x75\x66\x56\x56\xb5\xa7\x5b\x38\x63\x72\x48\x54\xf5\x77\x39\xf2\x23\x64\x74\x36\x1a\xd2\xe5\x66\xc5\x1c\x09\x41\xf9\x1d\x21\x30\xca\x02\x6d\x60\x22\x41\x4f\x14\x45\x9d\xbd\x81\x7e\xfc\xe9\xe4\x7f\xd3\xcf\xe7\xe3\xc9\xe5\xe8\xea\x90\xc9\x9c\x4f\x4f\x37\xa7\xc3\x45\xcc\xe8\xf7\xac\xc7\x15\x08\xc4\x37\x58\xed\x2a\xae\x43\x15\x5c\x6b\xd8\x64\xb8\xeb\x44\xfe\x8d\x66\xc5\x85\x82\xfc\x5a\x91\x7f\x52\x9f\xd9\x77\x0b\x15\xcd\xd4\x1c\x6d\x4e\xbd\x4e\xbc\x15\x78\x37\xa1\x81\x24\xca\xe5\xdf\xbf\x51\xaf\x35\x72\x66\xfe\x48\xf8\x86\xfb\x4e\xcb\x57\x55\x58\xfe\xa4\x7e\xac\xc3\x35\xf8\xea\xc2\x92\xf3\x1e\xec\x26\xf5\x58\xc2\x16\x1f\xc1\x71\x42\x77\x67\x83\x76\xd3\x7a\x15\xce\xef\x43\x9f\x75\x5b\x90\x24\x4a\x27\x56\xf6\xdf\x85\xce\x3b\x23\xbb\xc3\xfb\x9e\xd2\x23\x3a\xe0\xa7\x1a\xcf\x31\x5b\xe0\x3b\x48\x97\x70\x71\x7d\xfd\x91\xd9\xe4\x86\x88\x42\xa8\xee\x85\x91\xf4\x6f\x84\xfb\x37\x05\xf7\x0c\x88\x96\x5e\x34\x9b\x30\xc8\x5e\x3f\x90\x49\x52\x35\x7a\x46\x20\xb5\xb6\x49\x63\xda\x78\x4b\x9f\xba\x9d\xd1\xeb\x6f\x3e\x8c\xd3\xde\xd5\xa8\xa4\x07\x1e\xf7\xf0\x30\xcb\xb6\xfb\x59\x1c\xf5\xd7\xd0\x9f\x01\x00\x00\xff\xff\x1e\x4e\xff\x5a\x03\x0b\x00\x00"

func dataCommonDevVagrantfileTplBytes() ([]byte, error) {
	return bindataRead(
		_dataCommonDevVagrantfileTpl,
		"data/common/dev/Vagrantfile.tpl",
	)
}

func dataCommonDevVagrantfileTpl() (*asset, error) {
	bytes, err := dataCommonDevVagrantfileTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/common/dev/Vagrantfile.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if (err != nil) {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"data/aws-simple/build/build-ruby.sh.tpl": dataAwsSimpleBuildBuildRubyShTpl,
	"data/aws-simple/build/template.json.tpl": dataAwsSimpleBuildTemplateJsonTpl,
	"data/aws-simple/deploy/main.tf.tpl": dataAwsSimpleDeployMainTfTpl,
	"data/aws-vpc-public-private/build/build-ruby.sh": dataAwsVpcPublicPrivateBuildBuildRubySh,
	"data/aws-vpc-public-private/build/template.json.tpl": dataAwsVpcPublicPrivateBuildTemplateJsonTpl,
	"data/aws-vpc-public-private/deploy/main.tf.tpl": dataAwsVpcPublicPrivateDeployMainTfTpl,
	"data/common/dev/Vagrantfile.tpl": dataCommonDevVagrantfileTpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"data": &bintree{nil, map[string]*bintree{
		"aws-simple": &bintree{nil, map[string]*bintree{
			"build": &bintree{nil, map[string]*bintree{
				"build-ruby.sh.tpl": &bintree{dataAwsSimpleBuildBuildRubyShTpl, map[string]*bintree{
				}},
				"template.json.tpl": &bintree{dataAwsSimpleBuildTemplateJsonTpl, map[string]*bintree{
				}},
			}},
			"deploy": &bintree{nil, map[string]*bintree{
				"main.tf.tpl": &bintree{dataAwsSimpleDeployMainTfTpl, map[string]*bintree{
				}},
			}},
		}},
		"aws-vpc-public-private": &bintree{nil, map[string]*bintree{
			"build": &bintree{nil, map[string]*bintree{
				"build-ruby.sh": &bintree{dataAwsVpcPublicPrivateBuildBuildRubySh, map[string]*bintree{
				}},
				"template.json.tpl": &bintree{dataAwsVpcPublicPrivateBuildTemplateJsonTpl, map[string]*bintree{
				}},
			}},
			"deploy": &bintree{nil, map[string]*bintree{
				"main.tf.tpl": &bintree{dataAwsVpcPublicPrivateDeployMainTfTpl, map[string]*bintree{
				}},
			}},
		}},
		"common": &bintree{nil, map[string]*bintree{
			"dev": &bintree{nil, map[string]*bintree{
				"Vagrantfile.tpl": &bintree{dataCommonDevVagrantfileTpl, map[string]*bintree{
				}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        // File
        if err != nil {
                return RestoreAsset(dir, name)
        }
        // Dir
        for _, child := range children {
                err = RestoreAssets(dir, filepath.Join(name, child))
                if err != nil {
                        return err
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

